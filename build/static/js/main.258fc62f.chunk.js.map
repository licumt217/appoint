{"version":3,"sources":["views/home/index.js","components/Modal/index.js","assets/js/Role.js","store/reducers.js","store/index.js","http/axios.js","http/service.js","assets/js/Util.js","views/user/login/index.js","views/user/register/index.js","views/user/center/index.js","views/user/modifypass/index.js","views/division/list/index.js","assets/js/constants/FUNCTION_LEVEL.js","assets/js/constants/RECEIVE_SIDE.js","views/division/operate/index.js","views/division/adminList/index.js","views/division/adminOperate/index.js","views/ethicsNotice/list/index.js","views/ethicsNotice/operate/index.js","views/blacklist/list/index.js","assets/js/constants/COMPLAINT_STATE.js","assets/js/constants/COMPLAINT_STATE_DESC.js","views/complain/therapistList/index.js","views/complain/userList/index.js","views/base/schoolType/index.js","views/base/qualificationType/index.js","views/base/consultType/index.js","views/base/levelType/index.js","views/base/mannerType/index.js","views/caseManager/list/index.js","views/caseManager/operate/index.js","views/preCheck/list/index.js","views/preCheck/operate/index.js","views/station/list/index.js","views/station/operate/index.js","views/station/relateTherapist/components/TherapistList/index.js","views/station/relateTherapist/index.js","assets/js/pcz.js","views/therapist/appointSet/index.js","views/therapist/feeSet/index.js","assets/js/constants/ORDER_STATE_DESC.js","assets/js/constants/ORDER_STATE.js","views/therapist/revenue/index.js","views/therapist/periodSet/index.js","assets/js/DateUtil.js","views/therapist/occupy/index.js","views/therapist/complaint/index.js","views/therapist/orderList/index.js","views/room/list/index.js","views/room/operate/index.js","views/room/periodSet/index.js","views/room/occupy/index.js","views/refund/list/index.js","views/measure/list/index.js","views/measure/operate/index.js","views/measure/components/Header/index.js","views/measure/components/QuestionDetailModal/questions/Wenda.js","views/measure/components/QuestionDetailModal/questions/Zhidaoyu.js","views/measure/components/QuestionDetailModal/questions/Xuanzheti.js","views/measure/components/QuestionDetailModal/questions/Matrix.js","views/measure/components/QuestionDetailModal/questions/Huang.js","views/measure/components/QuestionDetailModal/questions/Multi.js","views/measure/components/QuestionDetailModal/index.js","views/measure/components/QuestionDisplay/index.js","views/measure/components/QuestionOperate/index.js","views/measure/components/GivenAnswer/index.js","views/measure/components/SetLieTeam/index.js","router/index.js","views/measure/detail/index.js","App.js","views/layout/menus/admin.js","views/layout/menus/caseManager.js","views/layout/menus/divisionManager.js","views/layout/menus/therapist.js","views/layout/index.js","index.js"],"names":["Index","Component","Modal","props","hide","setState","show","handleCallback","data","callback","handleCallbackForCancel","callbackForCancel","getIconType","plate","state","type","className","defaultConfig","msg","oneButton","cancelButtonText","buttonText","Object","assign","Fragment","this","onClick","Role","admin","divisionManager","caseManager","therapist","client","reducers","combineReducers","login","action","payload","openid","user_id","user_name","role","token","station_id","station_name","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","createLogger","batchDispatch","array","forEach","item","dispatch","clear","sessionStorage","persistor","persistStore","baseURL","window","location","href","includes","axios","interceptors","request","use","config","url","headers","post","getState","commonObj","prototype","toString","call","err","Promise","reject","response","isSuccess","errorMsg","resolve","error","message","status","updateUser","params","getSchoolTypeList","getQualificationTypeList","getLevelTypeList","getMannerTypeList","getTherapistPeriodSet","getRoomPeriodSet","addComplaint","updateMeasure","addQuestion","updateQuestion","updateBatchQuestion","addBatchQuestion","Util","str","duration","success","warning","info","obj","confirm","title","content","onOk","onCancel","s","flag","exec","value","test","p","String","toUpperCase","name","reg","RegExp","r","search","substr","match","unescape","replace","c","Math","random","year","month","Date","getDate","val","period","split","fixZero","dataArray","valueKey","nameKey","push","label","history","back","dateStr","moment","format","returnObj","Array","isArray","i","length","getTime","clone","questionScoreArray","suffixArrayOfMusic","suffixArrayOfPicture","backendUrl","indexOf","hostname","genderOptions","pageSize","register","goAfterLogin","form","isValidPhone","phone","then","userInfo","batchArray","catch","forgetPassword","isShowForgetModal","email","tailLayout","wrapperCol","offset","span","okText","cancelText","visible","Item","maxLength","placeholder","onChange","e","target","align","labelCol","onFinish","rules","required","Password","htmlType","Option","operate","birthday","formItem","isValidEmail","isValidID","identification_no","layout","initialValues","gender","style","width","formRef","React","createRef","getUserById","current","setFieldsValue","getDateFromMoment","ref","password","newPassword","confirmPassword","updatePassword","minLength","getList","page","getDivisionList","datalist","add","adminList","division_id","pathname","edit","row","opType","delete","deleteDivision","columns","dataIndex","render","text","index","size","bind","danger","dataSource","rowKey","pagination","FUNCTION_LEVEL","BASE","APPOINT","STATISTICS","ONLINEPAY","RECEIVE_SIDE","SYSTEM","SELF","values","isEdit","updateDivision","addDivision","function_level_list","function_level","map","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","Group","Button","getDivisionAdminList","deleteDivisionAdmin","currentPage","justify","showQuickJumper","total","count","goBack","updateDivisionAdmin","addDivisionAdmin","getEthicsnoticeList","onOff","onOffEthicsnotice","ethicsnotice_id","deleteEthicsnotice","ellipsis","getTherapistList","getUserList","therapistListData","close","end_date","updateEthicsnotice","addEthicsnotice","relate","therapist_name","therapist_id","show_manner","allColumns","footer","readOnly","TextArea","rows","getBlackList","blacklist_id","deleteBlacklist","COMPLAINT_STATE","UNHANDLED","REJECTED","ADD_BLACKLIST","REMOVED","COMPLAINT_STATE_DESC","0","1","2","3","RangePicker","modalRef","getTherapistComplaints","query","date","startDate","endDate","checkReport","submit","saveReport","saveResearchReport","complaint_id","report_content","rejectComplaint","addBlackList","addBlacklist","setTimeout","reportContent","getUserComplaints","resetFields","open","addOrUpdate","school_type_name","school_type_id","updateSchoolType","addSchoolType","modalOnOk","deleteSchoolType","qualification_type_name","qualification_type_id","updateQualificationType","addQualificationType","deleteQualificationType","getConsultTypeList","consult_type_name","consult_type_id","remark","updateConsultType","addConsultType","deleteConsultType","level_type_name","level_type_id","divide_ratio","updateLevelType","addLevelType","deleteLevelType","min","max","precision","step","manner_type_name","manner_type_id","updateMannerType","addMannerType","deleteMannerType","getCasemanagerList","casemanager_id","deleteCasemanager","addCasemanager","detail","getStationList","deleteStation","go2CaseManagerList","go2TherapistList","updateStation","addStation","getNotRelatedTherapist","onClose","addRelateTherapist","prevProps","prevState","snapshot","getStationInfo","getRelateTherapistList","remove","deleteRelateTherapist","TherapistList","pcz","pczOptions","options","province","children","city","getOptions","getBaseInfo","qualificationTypeList","LevelTypeList","MannerTypeList","SchoolTypeList","getAppointSet","therapist_attach_relation_id","updateAppointSet","addAppointSet","console","log","getFeeSet","therapist_fee_set_id","updateFeeSet","addFeeSet","ORDER_STATE_DESC","4","5","6","7","ORDER_STATE","COMMIT","PAYED","UNFUNDED","EXPIRED","CANCELED","DONE","REFUNDING","PAYING","getRevenueSum","getRevenueSumByTherapistId","revenue","getDoneOrderListByTherapistId","currentRow","getAppointmentPeriodStr","allAmount","monthAmount","weekAmount","getUseablePeriodSet","updateTherapistPeriodSet","join","marginBottom","DateUtil","getFullYear","getMonth","day","isBefore","date1","date2","getWeekOfDate","getDay","isPeriodInList","dataList","Number","isSameDay","isSameDayOfWeek","loadData","notUseableList","getAppointmentsOfUsingByTherapistId","days","getDaysOfMonth","nowDate","d","setDate","num","appointment","ismulti","appoint_date","sort","val1","val2","getColumns","hourArray","optionArray","hourObj","occupyData","getWeekTextByDate","concat","queryDate","disabledDate","getRealDateFromMoment","picker","getTherapistComplaintsByTId","getOrderListByTherapistId","check","realComplain","order_id","getRoomList","occupy","room_id","go2UseablePeriodSet","onOffRoom","deleteRoom","updateRoom","addRoom","updateUseablePeriodSet","updateRoomPeriodSet","getAppointmentsOfUsingByRoomId","getOrderListByDivisionAdminId","refund","getMeasureList","isAdd","roleData","list","unshift","from","measureId","id","deleteMeasure","addMeasure","chartType","showQuestionDetailModal","onShowQuestionDetailModal","commit","onCommit","isQuery","nextProps","nextState","nextContext","onBack","textAlign","Wenda","Zhidaoyu","answer","marginTop","fontSize","fontWeight","List","fields","field","fieldKey","DeleteFilled","block","PlusOutlined","tiaomu","isReverse","valuePropName","lieRule","beforeUpload","file","suffix","formData","FormData","append","upLoadFile","mediaType","showUploadList","UploadOutlined","display","resetItemModalInfo","position","freshParent","hasNoQuestionIndexFromPosition2Bottom","questionList","handleOnlyHaveIndexSort","temp","indexSort","moveFromBottom2GivenPosition","a","bottomData","newList","questionIndex","last","pop","splice","JSON","stringify","handleAfterAdd","getNextQuestionIndex","maxIndex","hasSameValue","set","Set","addItem","questionType","method","next","parse","tempNameArray","nameArray","childrenAnswer","isParent","rule","sameCount","uuid","lieDetect","Question","Xuanzheti","Matrix","Multi","Huang","lieObjIndex","radioStyle","height","lineHeight","autoSize","child","childIndex","marginLeft","controls","src","maxHeight","color","editQuestion","cloneQuestion","createtime","parentId","setMust","must","init","showSetLieTeamModal","showSetGivenAnswerModal","deleteQuestion","question","tip","realDelete","getQuestionByLieDetect","upOrDown","otherIndex","originalQuestionList","prev_type","sortArray","sideIndex","all","hasQuestionIndexBeforeIndex","top","topIndexsort","topQuestionIndex","j","hasQuestionIndexAfterIndex","bottom","bottomIndexsort","bottomQuestionIndex","marginRight","UpCircleFilled","DownCircleFilled","StepBackwardFilled","rotate","StepForwardFilled","givenAnswer","isValidNum","getFiltedQuestionList","newquestionList","lieObj","filtedQuestionList","isShow","routers","path","component","Home","Register","Login","User_Center","User_Modifypass","Division_List","Division_operate","Division_adminList","Division_adminOperate","EthicsNotice_List","EthicsNotice_Operate","BlackList","Complain_TherapistList","Complain_UserList","SchoolType","QualificationType","ConsultType","LevelType","MannerType","CaseManager_List","CaseManager_Operate","PreCheck_List","PreCheck_Operate","Station_List","Station_Operate","Station_RelateTherapist","Therapist_AppointSet","Therapist_FeeSet","Therapist_Revenue","Therapist_PeriodSet","Therapist_Occupy","Therapist_complaint","Therapist_OrderList","Room_List","Room_Operate","Room_PeriodSet","Room_Occupy","Refund_List","Measure_List","Measure_Operate","getMeasureById","getQuestionList","isOperator","ruleSwitch","ruleDataListOfNewParent","factor_relation","fathor","factorName","isShowQuestionDetailModal","currentItem","closeQuestionDetailModal","isShowGivenAnswerModal","givenAnswerItem","closeSetGivenAnswerModal","isShowLieTeamModal","closeSetLineTeamModal","items","QuestionDetailModal","GivenAnswer","SetLieTeam","Header","margin","QuestionDisplay","App","createComponent","TheComponent","to","mock","exact","Error","SubMenu","Admin","handleClick","theme","mode","icon","MenuUnfoldOutlined","CaseManagerMenu","DivisionManagerMenu","TherapistMenu","Sider","Content","The_Layout","collapsed","toggle","logout","logoutMenu","rel","Current_Menu","trigger","collapsible","padding","createElement","MenuFoldOutlined","overlay","preventDefault","DownOutlined","withRouter","locale","process","OUR_NODE_ENV","VConsole","ReactDOM","loading","basename","zhCn","document","getElementById"],"mappings":"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","file":"static/js/main.258fc62f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Index extends Component {\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less'\n\n/**\n * 移动端弹窗\n */\nclass Modal extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.defaultConfig = {\n            show: true,\n            msg: '网络繁忙请稍等',\n            oneButton: true,\n            cancelButtonText: '取消',\n            buttonText: '确定'\n        }\n\n        this.state = Object.assign(this.defaultConfig, typeof this.props.data !== \"string\" ? this.props.data || {} : {msg: this.props.data})\n\n    }\n\n    hide = () => {\n        this.setState({\n            show: false\n        })\n    }\n\n    handleCallback = () => {\n        this.hide()\n        this.props.data && this.props.data.callback && this.props.data.callback();\n    }\n\n    handleCallbackForCancel = () => {\n        this.hide()\n        this.props.data && this.props.data.callbackForCancel && this.props.data.callbackForCancel();\n    }\n\n    getIconType = () => {\n        let plate;\n\n        switch (this.state.type) {\n            case 0:\n                plate = <div className=\"tjd-dialog-header fail\"/>;\n                break;\n            case 1:\n                plate = <div className=\"tjd-dialog-header ok\"/>\n                break;\n            case 2:\n                plate = <div className=\"tjd-dialog-header confirm\"/>\n                break;\n            default:\n                plate = <div className=\"tjd-dialog-header alert\"/>\n                break;\n        }\n\n        return plate;\n    }\n\n\n    render() {\n\n        return (\n\n            <React.Fragment>\n                {\n                    this.state.show ?\n                        <div>\n\n                            <div className=\"tjd-dialog-mask\"/>\n\n\n                            <div className='tjd-dialog-window'>\n\n                                {this.getIconType()}\n\n                                <div className=\"tjd-dialog-content\">\n                                    <p className=\"modal_info_top\">{this.state.msg}</p>\n                                </div>\n\n                                <div className='tjd-dialog-footer'>\n                                    {\n                                        !this.state.oneButton ?\n                                            <button className='tjd_cancel' onClick={this.handleCallbackForCancel}>\n                                                {this.state.cancelButtonText}\n                                            </button>\n                                            : null\n                                    }\n                                    <button className=\"tjd_confirm\" onClick={this.handleCallback}>\n                                        {this.state.buttonText}\n                                    </button>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n                        : null\n                }\n            </React.Fragment>\n\n        );\n    }\n}\n\nclass Index extends Component {\n\n    static show(obj) {\n\n        const id = 'common_modal'\n\n        this.container = document.getElementById(id)\n\n        this.container && document.body.removeChild(this.container)\n\n        this.container = document.createElement('div');\n\n        this.container.setAttribute('id', id)\n\n        document.body.appendChild(this.container);\n\n        ReactDOM.render(<Modal data={obj}/>, this.container)\n\n    }\n\n}\n\nexport default Index;","/**\n * 用户类型\n */\nlet Role = {\n    admin: 0,      //超管\n    divisionManager: 1,       //分部管理员\n    caseManager: 2,       //案例管理员\n    therapist: 3,    //咨询师\n    client: 4,    //c端用户\n};\n\n\n\nexport default Role\n","import {combineReducers} from \"redux\";\nimport Role from \"../assets/js/Role\";\n\nconst login = (state = false, action) => {\n    if(action.type==='login'){\n        return action.payload||false;\n    }else{\n        return state;\n    }\n\n};\n\nconst user_id = (state = '', action) => {\n    if(action.type==='user_id'){\n        return action.payload;\n    }else{\n        return state;\n    }\n};\n\nconst user_name = (state = '', action) => {\n    if(action.type==='user_name'){\n        return action.payload;\n    }else{\n        return state;\n    }\n};\n\nconst station_id = (state = '', action) => {\n    if(action.type==='station_id'){\n        return action.payload;\n    }else{\n        return state;\n    }\n};\n\nconst station_name = (state = '', action) => {\n    if(action.type==='station_name'){\n        return action.payload;\n    }else{\n        return state;\n    }\n};\n\nconst openid = (state = '', action) => {\n    if(action.type==='openid'){\n        return action.payload;\n    }else{\n        return state;\n    }\n};\n\nconst token = (state = '', action) => {\n    if(action.type==='token'){\n        return action.payload;\n    }else{\n        return state;\n    }\n};\n\nconst role = (state = Role.therapist, action) => {\n    if(action.type==='role'){\n        return action.payload;\n    }else{\n        return state;\n    }\n};\n\n\n\n\n\nlet reducers=combineReducers({\n    login,\n    openid,\n    user_id,\n    user_name,\n    role,\n    token,\n    station_id,\n    station_name\n})\n\nexport default reducers;\n","\nimport {createStore,combineReducers,applyMiddleware} from 'redux'\n\nimport {persistStore,persistReducer} from \"redux-persist\";\n\nimport storage from \"redux-persist/lib/storage/session\";\n\nimport {createLogger} from 'redux-logger'\n\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\nconst persistConfig={\n    key:'root',\n    storage\n}\n\nconst persistedReducer=persistReducer(persistConfig,reducers)\n\n\n\nconst store=createStore(persistedReducer,{\n},applyMiddleware(thunk,createLogger()))\n\nstore.batchDispatch=(array)=>{\n    array.forEach(item=>{\n        store.dispatch(item)\n    })\n}\n\nstore.clear=(array)=>{\n    store.dispatch({\n        type:'login',\n        payload:false\n    })\n    sessionStorage.clear()\n}\n\n\nconst persistor=persistStore(store)\n\nexport {store,persistor}\n\nexport default store\n\n","import axios from 'axios'\nimport Modal from '../components/Modal'\nimport qs from 'qs'\nimport store from \"../store\";\n// axios 配置\nlet baseURL = 'http://www.zhuancaiqian.com/appoint_wx/'\n\nif(window.location.href.includes('localhost')){\n    baseURL = 'http://127.0.0.1:8350/appoint_wx/'\n}\n// http request 拦截器\naxios.interceptors.request.use(\n    config => {\n\n\n\n        config.url = baseURL + config.url\n        config.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n        config.headers.token = store.getState().token;\n\n        let commonObj={\n            openid:store.getState().openid,\n            user_id:store.getState().user_id,\n\n        }\n\n        //文件上传因为是FormData对象，不添加此信息\n        if (Object.prototype.toString.call(config.data) !== '[object FormData]') {\n            config.data=Object.assign(commonObj,config.data);\n        }\n\n        return config;\n    },\n    err => {\n        return Promise.reject(err);\n    });\n\n// http response 拦截器\naxios.interceptors.response.use(\n    response => {\n\n        if(response.data.isSuccess===\"2\"){\n            // store.commit(\"reset\")\n            //\n            // location.href=location.href.split(\"#\")[0]+\"#\"+\"/user/login\"\n\n            return Promise.reject(response.data.errorMsg);\n        }else if(response.data.isSuccess===\"1\"){\n            return Promise.reject(response.data.errorMsg);\n        }else if(response.data.isSuccess===\"0\"){\n            return Promise.resolve(response.data.data);\n        }\n    },\n    error => {\n        let errorMsg=\"请求异常\"\n        if(error.message && error.message==='Network Error'){\n            errorMsg=\"网络异常\"\n        }else if(error.response.status===404){\n            errorMsg=\"请求地址不存在\"\n        }\n\n\n        return Promise.reject(errorMsg)\n    }\n);\n\nexport default axios;\n","import axios from './axios'\nimport Util from '../assets/js/Util'\n\n\n// 用户\nexport function login(params = {}) {\n\n    return axios.post('login/login', params)\n\n\n}\n\n\nexport function forgetPassword(params = {}) {\n\n    return axios.post('login/forgetPassword', params)\n\n\n}\n\nexport function register(params = {}) {\n\n    return axios.post('login/register', params)\n\n\n}\n\nexport function updateUser(params = {}) {\n\n    return axios.post('user/update', params)\n\n\n}\n\nexport function getUserById(params = {}) {\n\n    return axios.post('user/getById', params)\n\n\n}\n\nexport function getUserList(params = {}) {\n\n    return axios.post('user/list', params)\n\n\n}\n\nexport function deleteUser(params = {}) {\n\n    return axios.post('user/delete', params)\n\n\n}\n\nexport function addUser(params = {}) {\n\n    return axios.post('user/add', params)\n\n\n}\n\nexport function updatePassword(params = {}) {\n\n    return axios.post('user/updatePassword', params)\n\n\n}\n\n// 分部\n\nexport function getDivisionList(params = {}) {\n\n    return axios.post('division/list', params)\n\n\n}\n\nexport function addDivision(params = {}) {\n\n    return axios.post('division/add', params)\n\n\n}\n\nexport function updateDivision(params = {}) {\n\n    return axios.post('division/update', params)\n\n\n}\n\nexport function deleteDivision(params = {}) {\n\n    return axios.post('division/delete', params)\n\n\n}\n\n// 分部管理员\nexport function getDivisionAdminList(params = {}) {\n\n    return axios.post('divisionAdmin/list', params)\n\n\n}\nexport function deleteDivisionAdmin(params = {}) {\n\n    return axios.post('divisionAdmin/delete', params)\n\n\n}\n\nexport function addDivisionAdmin(params = {}) {\n\n    return axios.post('divisionAdmin/add', params)\n\n\n}\n\nexport function updateDivisionAdmin(params = {}) {\n\n    return axios.post('user/update', params)\n\n\n}\n\n\n// 流派\nexport function getSchoolTypeList(params = {}) {\n\n    return axios.post('schooltype/list', params)\n\n\n}\n\nexport function addSchoolType(params = {}) {\n\n    return axios.post('schooltype/add', params)\n\n\n}\n\nexport function updateSchoolType(params = {}) {\n\n    return axios.post('schooltype/update', params)\n\n\n}\n\nexport function deleteSchoolType(params = {}) {\n\n    return axios.post('schooltype/delete', params)\n\n\n}\n\n// 资历\nexport function getQualificationTypeList(params = {}) {\n\n    return axios.post('qualificationtype/list', params)\n\n\n}\n\nexport function addQualificationType(params = {}) {\n\n    return axios.post('qualificationtype/add', params)\n\n\n}\n\nexport function updateQualificationType(params = {}) {\n\n    return axios.post('qualificationtype/update', params)\n\n\n}\n\nexport function deleteQualificationType(params = {}) {\n\n    return axios.post('qualificationtype/delete', params)\n\n\n}\n\n// 等级\nexport function getLevelTypeList(params = {}) {\n\n    return axios.post('leveltype/list', params)\n\n\n}\n\nexport function addLevelType(params = {}) {\n\n    return axios.post('leveltype/add', params)\n\n\n}\n\nexport function updateLevelType(params = {}) {\n\n    return axios.post('leveltype/update', params)\n\n\n}\n\nexport function deleteLevelType(params = {}) {\n\n    return axios.post('leveltype/delete', params)\n\n\n}\n\n\n// 预约类型\nexport function getConsultTypeList(params = {}) {\n\n    return axios.post('consulttype/list', params)\n\n\n}\n\nexport function addConsultType(params = {}) {\n\n    return axios.post('consulttype/add', params)\n\n\n}\n\nexport function updateConsultType(params = {}) {\n\n    return axios.post('consulttype/update', params)\n\n\n}\n\nexport function deleteConsultType(params = {}) {\n\n    return axios.post('consulttype/delete', params)\n\n\n}\n\n// 咨询方式\nexport function getMannerTypeList(params = {}) {\n\n    return axios.post('mannertype/list', params)\n\n\n}\n\nexport function addMannerType(params = {}) {\n\n    return axios.post('mannertype/add', params)\n\n\n}\n\nexport function updateMannerType(params = {}) {\n\n    return axios.post('mannertype/update', params)\n\n\n}\n\nexport function deleteMannerType(params = {}) {\n\n    return axios.post('mannertype/delete', params)\n\n\n}\n\n\nexport function getOrderListByTherapistId(params = {}) {\n\n    return axios.post('order/getOrderListByTherapistId', params)\n\n\n}\n\nexport function getOrderListByDivisionAdminId(params = {}) {\n\n    return axios.post('order/getOrderListByDivisionAdminId', params)\n\n\n}\n\n/**\n * 咨询师收益列表（已完结订单）\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getDoneOrderListByTherapistId(params = {}) {\n\n    return axios.post('order/getDoneOrderListByTherapistId', params)\n\n\n}\n\n/**\n * 查询咨询师收益汇总\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getRevenueSumByTherapistId(params = {}) {\n\n    return axios.post('order/getRevenueSumByTherapistId', params)\n\n\n}\n\n/**\n * 订单退款\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function refund(params = {}) {\n\n    return axios.post('order/refund', params)\n\n\n}\n\n\n\n\n// station\nexport function getStationList(params = {}) {\n\n    return axios.post('station/list', params)\n\n\n}\n\nexport function addStation(params = {}) {\n\n    return axios.post('station/add', params)\n\n\n}\n\nexport function updateStation(params = {}) {\n\n    return axios.post('station/update', params)\n\n\n}\n\nexport function deleteStation(params = {}) {\n\n    return axios.post('station/delete', params)\n\n\n}\n\n\n// 案例管理员\nexport function getCasemanagerList(params = {}) {\n\n    return axios.post('stationCasemanagerRelation/list', params)\n\n\n}\n\nexport function addCasemanager(params = {}) {\n\n    return axios.post('stationCasemanagerRelation/add', params)\n\n\n}\n\nexport function deleteCasemanager(params = {}) {\n\n    return axios.post('stationCasemanagerRelation/delete', params)\n\n\n}\n\n// 咨询师\n\n/**\n * 获取工作室所关联的咨询师列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getRelateTherapistList(params = {}) {\n\n    return axios.post('stationTherapistRelation/list', params)\n\n\n}\n\n/**\n * 获取工作室没有关联的咨询师列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getNotRelatedTherapist(params = {}) {\n\n    return axios.post('stationTherapistRelation/getNotRelatedTherapist', params)\n\n\n}\n\n\n\n/**\n * 工作室和咨询师建立关联\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function addRelateTherapist(params = {}) {\n\n    return axios.post('stationTherapistRelation/add', params)\n\n\n}\n\n/**\n * 移除工作室和咨询师关联\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function deleteRelateTherapist(params = {}) {\n\n    return axios.post('stationTherapistRelation/delete', params)\n\n\n}\n\n\n/**\n * 获取预约设置\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getAppointSet(params = {}) {\n\n    return axios.post('therapistAttachRelation/getByTherapistId', params)\n\n\n}\n\n/**\n * 添加预约设置\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function addAppointSet(params = {}) {\n\n    return axios.post('therapistAttachRelation/add', params)\n\n\n}\n\n/**\n * 修改预约设置\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function updateAppointSet(params = {}) {\n\n    return axios.post('therapistAttachRelation/update', params)\n\n\n}\n\n/**\n * 获取咨询师收费配置\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getFeeSet(params = {}) {\n\n    return axios.post('therapistFeeSet/getByTherapistId', params)\n\n\n}\n\n/**\n * 新增咨询师收费配置\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function addFeeSet(params = {}) {\n\n    return axios.post('therapistFeeSet/add', params)\n\n\n}\n\n/**\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function updateFeeSet(params = {}) {\n\n    return axios.post('therapistFeeSet/update', params)\n\n\n}\n\n/**\n * 修改咨询师可用时段设置\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function updateTherapistPeriodSet(params = {}) {\n\n    return axios.post('therapistPeriodSet/updateByTherapistId', params)\n\n\n}\n\n/**\n * 获取咨询师可用时段设置\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getTherapistPeriodSet(params = {}) {\n\n    return axios.post('therapistPeriodSet/getByTherapistId', params)\n\n\n}\n\n\n/**\n * 获取给定工作室下的房间列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getRoomList(params = {}) {\n\n    return axios.post('room/list', params)\n\n\n}\n\n/**\n * 删除房间\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function deleteRoom(params = {}) {\n\n    return axios.post('room/delete', params)\n\n\n}\n\n/**\n * 新增房间\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function addRoom(params = {}) {\n\n    return axios.post('room/add', params)\n\n\n}\n\n/**\n * 修改房间\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function updateRoom(params = {}) {\n\n    return axios.post('room/update', params)\n\n\n}\n\n/**\n * 启用停用房间\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function onOffRoom(params = {}) {\n\n    return axios.post('room/onOff', params)\n\n\n}\n\n/**\n * 更新给定工作室的房间的可用时段设置\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function updateRoomPeriodSet(params = {}) {\n\n    return axios.post('room/updateUseablePeriodSet', params)\n\n\n}\n\n/**\n * 获取给定工作室的房间的可用时段设置\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getRoomPeriodSet(params = {}) {\n\n    return axios.post('room/getUseablePeriodSet', params)\n\n\n}\n\n\n\n// 伦理公告\n/**\n * 新增伦理公告\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function addEthicsnotice(params = {}) {\n\n    return axios.post('ethicsnotice/add', params)\n\n\n}\n\n/**\n * 删除伦理公告\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function deleteEthicsnotice(params = {}) {\n\n    return axios.post('ethicsnotice/delete', params)\n\n\n}\n\n/**\n * 修改伦理公告\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function updateEthicsnotice(params = {}) {\n\n    return axios.post('ethicsnotice/update', params)\n\n\n}\n\n/**\n * 启用停用伦理公告\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function onOffEthicsnotice(params = {}) {\n\n    return axios.post('ethicsnotice/onOff', params)\n\n\n}\n\n/**\n * 查询伦理公告列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getEthicsnoticeList(params = {}) {\n\n    return axios.post('ethicsnotice/list', params)\n\n\n}\n\n/**\n * 查询用户投诉咨询师列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getUserComplaints(params = {}) {\n\n    return axios.post('complaint/getUserComplaints', params)\n\n\n}\n\n/**\n * 添加一条投诉（咨询师投诉客户）\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function addComplaint(params = {}) {\n\n    return axios.post('complaint/add', params)\n\n\n}\n\n/**\n * 查询咨询师投诉用户列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getTherapistComplaints(params = {}) {\n\n    return axios.post('complaint/getTherapistComplaints', params)\n\n\n}\n\n/**\n * 根据咨询师ID查询咨询师投诉用户列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getTherapistComplaintsByTId(params = {}) {\n\n    return axios.post('complaint/getTherapistComplaintsByTId', params)\n\n\n}\n\n/**\n * 查询咨询师投诉用户列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function saveResearchReport(params = {}) {\n\n    return axios.post('complaint/saveResearchReport', params)\n\n\n}\n\n/**\n * 驳回咨询师的投诉\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function rejectComplaint(params = {}) {\n\n    return axios.post('complaint/reject', params)\n\n\n}\n\n/**\n * 添加黑名单\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function addBlacklist(params = {}) {\n\n    return axios.post('complaint/addBlacklist', params)\n\n\n}\n\n/**\n * 移除黑名单\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function deleteBlacklist(params = {}) {\n\n    return axios.post('blacklist/delete', params)\n\n\n}\n\n/**\n * 黑名单列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getBlackList(params = {}) {\n\n    return axios.post('blacklist/getList', params)\n\n\n}\n\n/**\n * 根据房间ID获取生效中的预约列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getAppointmentsOfUsingByRoomId(params = {}) {\n\n    return axios.post('appointment/getListOfUsingByRoomId', params)\n\n\n}\n\n/**\n * 根据咨询师ID获取生效中的预约列表\n * @param params\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport function getAppointmentsOfUsingByTherapistId(params = {}) {\n\n    return axios.post('appointment/getListOfUsingByTherapistId', params)\n\n\n}\n\n\n\n\n// 预检表量表\n\nexport function getMeasureList(params = {}) {\n\n    return axios.post('measure/list', params)\n\n\n}\n\nexport function addMeasure(params = {}) {\n\n    return axios.post('measure/add', params)\n\n\n}\n\nexport function deleteMeasure(params = {}) {\n\n    return axios.post('measure/delete', params)\n\n\n}\n\nexport function updateMeasure(params = {}) {\n\n    return axios.post('measure/update', params)\n\n\n}\n\n\nexport function getMeasureById(params = {}) {\n\n    return axios.post('measure/getById', params)\n\n\n}\n\nexport function getQuestionList(params = {}) {\n\n    return axios.post('question/list', params)\n\n\n}\n\nexport function addQuestion(params = {}) {\n\n    return axios.post('question/add', params)\n\n\n}\n\nexport function updateQuestion(params = {}) {\n\n    return axios.post('question/update', params)\n\n\n}\n\nexport function updateBatchQuestion(params = {}) {\n\n    return axios.post('question/updateBatch', params)\n\n\n}\n\nexport function addBatchQuestion(params = {}) {\n\n    return axios.post('question/addBatch', params)\n\n\n}\n\nexport function upLoadFile(params = {}) {\n\n    return axios.post('question/upLoadFile', params)\n\n\n}\n\nexport function deleteQuestion(params = {}) {\n\n    return axios.post('question/delete', params)\n\n\n}\n\n\n\n\n\n\n","import {Modal, message} from 'antd';\nimport {deleteDivision} from \"../../http/service\";\nimport moment from \"moment\";\n\n\nclass Util {\n\n    constructor() {\n\n    }\n\n    static error(str, duration=3) {\n        message.error(str,duration)\n    }\n\n    static success(str, duration=3) {\n        message.success(str,duration)\n    }\n\n    static warning(str, duration=3) {\n        message.warning(str,duration)\n    }\n\n    static info(str, duration=3) {\n        message.info(str,duration)\n    }\n\n    static confirm(obj) {\n        Modal.confirm({\n            title:obj.title||'',\n            content:obj.content||'',\n            onOk:obj.onOk?obj.onOk:null,\n            onCancel:obj.onCancel?obj.onCancel:null,\n        })\n    }\n\n\n\n\n    /**\n     * 判断给定字符是否是中文\n     * @param temp\n     * @returns {Boolean}\n     */\n    static isChinese(s) {\n        var patrn = /[\\u4E00-\\u9FA5]|[\\uFE30-\\uFFA0]/gi\n        var flag = true\n        if (!patrn.exec(s)) {\n            flag = false\n        }\n        return flag\n    }\n\n    /**\n     * 验证给定字符是否是A-Za-z之间的英文字母\n     */\n    static isEnglish(value) {\n        var str = /^[A-Za-z]*$/\n        var flag = false\n        if (str.test(value)) {\n            flag = true\n        }\n        return flag\n    }\n\n\n    /**\n     * 是否全是数字\n     * @param p\n     * @returns\n     */\n    static isAllNum(p) {\n        var re = /^\\d*$/\n        return re.test(p)\n    }\n\n    /**\n     * 验证手机号\n     */\n    static isValidPhone(p) {\n        var re = /^1\\d{10}$/\n        return re.test(p)\n    }\n\n    /**\n     * 验证身份证号\n     */\n    static isValidID(p) {\n        p = String(p).toUpperCase()\n        var re = /(^\\d{15}$)|(^\\d{17}([0-9]|X$))/\n        return re.test(p)\n    }\n\n    static isValidNum(value) {\n\n        var str = /^(-|\\+)?\\d+$/\n        var flag = false\n        if (str.test(value)) {\n            flag = true\n        }\n        return flag\n\n\n    }\n\n    /**\n     * 验证邮箱地址合法性\n     * @param temp\n     * @returns {Boolean}\n     */\n    static isValidEmail(s) {\n        var re = /^(\\w-*\\.*)+@(\\w-?)+(\\.\\w{2,})+$/;\n        return re.test(s);\n    }\n\n    /**\n     * 取得url后边的参数\n     * @param name\n     * @returns\n     */\n    static getUrlParam(name) {\n        var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i')\n        var r = window.location.search.substr(1).match(reg)\n        if (r !== null) return unescape(r[2])\n        return null\n    }\n\n    static uuid() {\n        return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = (Math.random() * 16) | 0,\n                v = c == 'x' ? r : (r & 0x3) | 0x8\n            return v.toString(16)\n        })\n    }\n\n    /**\n     * 数组转对象\n     * @param array\n     * @param key\n     */\n    static array2Object(array, key = 'id') {\n        let obj = {}\n\n        array.forEach(item => {\n            obj[item[key]] = item;\n        })\n\n        return obj;\n    }\n\n    /**\n     * 获取某年某月有多少天\n     * @param year\n     * @param month 0-11\n     * @returns {number}\n     */\n    static getDaysOfMonth(year, month) {\n        month += 1;\n        let d = new Date(year, month, 0);\n        return d.getDate();\n    }\n\n    static fixZero(val) {\n        if (val < 10) {\n            return '0' + val;\n        } else {\n            return val;\n        }\n    }\n\n    static getAppointmentPeriodStr(period) {\n\n        let str = '';\n        if(!period){\n            return str;\n        }\n        period.split(',').forEach(item => {\n            str += (`${Util.fixZero(item)}:00-${Util.fixZero(item)}:50 `)\n        })\n\n\n        return str;\n    }\n\n    /**\n     * 将下拉选择后台数据转为下拉列表需要的数组格式\n     * @param dataArray\n     * @param valueKey\n     * @param nameKey\n     * @returns {[]}\n     */\n    static getPopupPickerOptions(dataArray, valueKey, nameKey) {\n        let array = [];\n        dataArray.forEach(item => {\n            array.push({\n                value: item[valueKey],\n                label: item[nameKey],\n            })\n        })\n        return array;\n    }\n\n\n    static back(){\n        window.history.back();\n    }\n\n    static getDateFromMoment(dateStr){\n        return moment(dateStr).format('yyyy-MM-DD');\n    }\n\n    static getRealDateFromMoment(dateStr){\n        return new Date(moment(dateStr));\n    }\n\n    static getDateTimeFromMoment(dateStr){\n        return moment(dateStr).format('yyyy-MM-DD HH:MM:SS');\n    }\n\n    static clone(obj) {\n\n        if(!obj){\n            return obj;\n        }else if (typeof obj === 'object') {\n            let returnObj = null\n            if (Array.isArray(obj)) {\n                returnObj = []\n                for (let i = 0; i < obj.length; i++) returnObj.push(obj[i])\n            }else if(obj instanceof Date){\n                returnObj=new Date(obj.getTime())\n            }else {\n                returnObj = {}\n                for (let key in obj) {\n                    returnObj[key] = Util.clone(obj[key])\n                }\n            }\n            return returnObj\n        }\n        return obj\n    }\n\n\n\n\n\n\n\n}\nUtil.questionScoreArray = [0, 1, 2, 3, 4, 5, 6, 7]\n\nUtil.suffixArrayOfMusic = [\"mp3\", \"wave\"]\n\nUtil.suffixArrayOfPicture = [\"jpg\", \"jpeg\", \"png\"]\n\nUtil.backendUrl = location.href.indexOf(\"localhost\") > -1 ? 'http://127.0.0.1:8350' : 'http://' + location.hostname+'/appoint_wx'\n\n\nUtil.genderOptions = [\n    {\n        label: '男',\n        value: 'male',\n    },\n    {\n        label: '女',\n        value: 'female',\n    },\n];\n\nUtil.pageSize = 10;\nexport default Util\n","import React, {Component} from 'react';\n\nimport {Form, Input, Button, Modal, Row, Col, Card, message} from 'antd';\n\nimport Util from \"../../../assets/js/Util\";\n\nimport {login,forgetPassword} from \"../../../http/service\";\n\nimport Role from \"../../../assets/js/Role\";\n\nimport store from \"../../../store\";\n\nimport './index.less'\n\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            isShowForgetModal:false,\n            phone:''\n        }\n    }\n\n    register=()=>{\n        this.props.history.push('/user/register');\n    }\n\n\n    goAfterLogin = () => {\n        const role = store.getState().role;\n\n        switch (role) {\n            case Role.admin:\n                this.props.history.push('/division/list');\n                break;\n            case Role.divisionManager:\n                this.props.history.push('/station/list');\n                break;\n            case Role.caseManager:\n                this.props.history.push('/room/list');\n                break;\n            case Role.therapist:\n                this.props.history.push('/therapist/orderList');\n                break;\n        }\n\n    }\n    login = (form) => {\n\n\n        if (!Util.isValidPhone(form.phone)) {\n            message.warning('手机号格式不正确！')\n        } else {\n            login(form).then((data) => {\n\n                let userInfo = data.userInfo;\n                let token = data.token;\n\n                let user_id = userInfo.user_id;\n                let user_name = userInfo.name;\n                let role = userInfo.role;\n\n                if (role === Role.client) {\n                    message.error('无权限！！！')\n                } else {\n                    sessionStorage.token = data.token;\n                    sessionStorage.user_id = user_id\n                    sessionStorage.role = role\n\n                    let batchArray=[{\n                        type: 'login',\n                        payload: true\n                    }, {\n                        type: 'user_id',\n                        payload: user_id\n                    }, {\n                        type: 'user_name',\n                        payload: user_name\n                    }, {\n                        type: 'role',\n                        payload: role\n                    }, {\n                        type: 'token',\n                        payload: token\n                    }]\n\n                    if(role===Role.caseManager){\n                        batchArray.push({\n                            type: 'station_id',\n                            payload: userInfo.station_id\n                        })\n                        batchArray.push({\n                            type: 'station_name',\n                            payload: userInfo.station_name\n                        })\n                    }\n                    store.batchDispatch(batchArray)\n\n                    message.success(\"登录成功\")\n\n                    this.goAfterLogin()\n                }\n\n\n            }).catch(err => {\n                message.error(err)\n            })\n        }\n\n\n    }\n\n    forgetPassword=()=>{\n        let phone=this.state.phone;\n        if(phone && Util.isValidPhone(phone)){\n\n            forgetPassword( {\n                phone\n            }).then((data) => {\n\n                this.setState({\n                    isShowForgetModal:false\n                })\n\n                message.success(`新的随机密码已发送至手机号${phone}对应的邮箱${data.email}，请注意查收！`)\n\n            }).catch(err => {\n                message.error(err)\n            })\n\n        }else{\n            message.warning(`请填写正确的手机号！`)\n        }\n    }\n\n    render() {\n\n        const layout = {\n            labelCol: {\n                span: 8,\n            },\n            wrapperCol: {\n                span: 16,\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n\n        return (\n            <section>\n                <Modal\n                    title=\"密码找回\"\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                    visible={this.state.isShowForgetModal}\n                    onOk={this.forgetPassword}\n                    onCancel={()=>{\n                        this.setState({\n                            isShowForgetModal:false\n                        })\n                    }}\n                >\n                    <Form>\n                        <Form.Item\n                            label=\"手机号\"\n                        >\n                            <Input maxLength={11} value={this.state.phone} placeholder='请输入手机号' onChange={(e)=>{\n                                this.setState({\n                                    phone:e.target.value\n                                })\n                            }}/>\n                        </Form.Item>\n\n\n                    </Form>\n                </Modal>\n\n                <Row align={'middle'} className='login_wraper'>\n                    <Col span={6} offset={9}>\n                        <Card title=\"预约管理系统\">\n                            <Form\n                                {...layout}\n                                name=\"basic\"\n                                onFinish={this.login}\n                            >\n                                <Form.Item\n                                    label=\"手机号\"\n                                    name=\"phone\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: '请输入手机号！',\n                                        },\n                                    ]}\n                                >\n                                    <Input maxLength={11}/>\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"密码\"\n                                    name=\"password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: '请输入密码！',\n                                        },\n                                    ]}\n                                >\n                                    <Input.Password maxLength={30}/>\n                                </Form.Item>\n\n                                <div className='forget-password' onClick={()=>{\n                                    this.setState({\n                                        isShowForgetModal:true\n                                    })\n                                }}>忘记密码？</div>\n\n                                <Form.Item {...tailLayout}>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        登录\n                                    </Button>\n                                    <Button type=\"default\" className='register-btn' onClick={this.register}>\n                                        注册\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n\n\n                    </Col>\n                </Row>\n            </section>\n\n        );\n    }\n}\n\nexport default Index\n\n","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, Space, message, Divider, DatePicker, Card} from \"antd\";\nimport {register} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport moment from 'moment'\nimport './index.less'\n\nconst {Option} = Select;\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            formItem: {}\n        }\n\n    }\n\n\n    back = () => {\n        this.props.history.push('/user/login')\n    }\n    operate = (form) => {\n\n        form.birthday = moment(form.birthday).format('yyyy-MM-DD');\n\n        this.setState({\n            formItem: Object.assign(this.state.formItem, form)\n        })\n\n\n        if (!Util.isValidPhone(this.state.formItem.phone)) {\n            Util.warning(\"请输入合法的手机号！\")\n            return;\n        }\n\n        if (!Util.isValidEmail(this.state.formItem.email)) {\n            Util.warning(\"请输入合法的电子邮箱！\")\n            return;\n        }\n\n        if (!Util.isValidID(this.state.formItem.identification_no)) {\n            Util.warning(\"请输入合法的身份证号！\")\n            return;\n        }\n\n        register(this.state.formItem).then((data) => {\n            Util.success(\"注册成功！\")\n\n            this.back()\n\n        }).catch(err => {\n            Util.error(err)\n        })\n\n\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row align={'middle'} className='login_wraper'>\n                    <Col span={8} offset={8}>\n                        <Card title=\"咨询师注册\">\n                            <Form\n                                layout=\"horizontal\"\n                                labelCol={{span: 4}}\n                                wrapperCol={{span: 20}}\n                                initialValues={this.state.formItem}\n                                onFinish={this.operate}\n                            >\n                                <Form.Item\n                                    label=\"手机号\"\n                                    name=\"phone\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: '手机号不能为空!',\n                                        },\n                                    ]}\n                                >\n                                    <Input placeholder={'请输入手机号'} maxLength={11}/>\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"身份证号\"\n                                    name=\"identification_no\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: '身份证号不能为空!',\n                                        },\n                                    ]}\n                                >\n                                    <Input placeholder={'请输入身份证号'} maxLength={21}/>\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"密码\"\n                                    name=\"password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: '密码不能为空!',\n                                        },\n                                    ]}\n                                >\n                                    <Input.Password placeholder={'请输入密码'} maxLength={20}/>\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"姓名\"\n                                    name=\"name\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: '姓名不能为空!',\n                                        },\n                                    ]}\n                                >\n                                    <Input placeholder={'请输入姓名'} maxLength={20}/>\n                                </Form.Item>\n\n\n                                <Form.Item name=\"gender\" label=\"性别\"\n                                           rules={[{required: true, message: '性别不能为空!'}]}>\n                                    <Select\n                                        placeholder=\"请选择性别\"\n                                        value={this.state.formItem.gender}\n                                    >\n                                        <Option key={1} value='male'>男</Option>\n                                        <Option key={2} value='female'>女</Option>\n\n                                    </Select>\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"电子邮箱\"\n                                    name=\"email\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: '电子邮箱不能为空!',\n                                        },\n                                    ]}\n                                >\n                                    <Input placeholder={'请输入电子邮箱'} maxLength={50}/>\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"出生日期\"\n                                    name=\"birthday\"\n                                    format=\"YYYY-MM-DD\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: '出生日期不能为空!',\n                                        },\n                                    ]}\n                                >\n                                    <DatePicker/>\n                                </Form.Item>\n\n\n                                <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                    <Space>\n                                        <Button style={{width: '6em'}} type=\"default\" onClick={this.back}>\n                                            返回登录\n                                        </Button>\n                                        <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                            注册\n                                        </Button>\n                                    </Space>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, Space, message, Divider, DatePicker, Card} from \"antd\";\nimport {updateUser, getUserById} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport moment from 'moment'\nimport './index.less'\nconst {Option} = Select;\n\nclass Index extends Component {\n\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            formItem: {}\n        }\n\n    }\n\n    componentDidMount() {\n        this.getUserById()\n    }\n\n\n    getUserById = () => {\n        getUserById().then((data) => {\n\n            data.birthday=moment(data.birthday)\n\n            this.formRef.current.setFieldsValue(data)\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n    operate = (form) => {\n\n        form.birthday = Util.getDateFromMoment(form.birthday)\n\n        this.setState({\n            formItem: Object.assign(this.state.formItem, form)\n        })\n\n\n        if (!Util.isValidPhone(this.state.formItem.phone)) {\n            Util.warning(\"请输入合法的手机号！\")\n            return;\n        }\n\n        if (!Util.isValidEmail(this.state.formItem.email)) {\n            Util.warning(\"请输入合法的电子邮箱！\")\n            return;\n        }\n\n        if (!Util.isValidID(this.state.formItem.identification_no)) {\n            Util.warning(\"请输入合法的身份证号！\")\n            return;\n        }\n\n        updateUser(this.state.formItem).then((data) => {\n            Util.success(\"操作成功！\")\n\n            this.getUserById()\n\n        }).catch(err => {\n            Util.error(err)\n        })\n\n\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>个人信息</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={8} offset={8}>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"horizontal\"\n                            labelCol={{span: 4}}\n                            wrapperCol={{span: 20}}\n                            onFinish={this.operate}\n                        >\n                            <Form.Item\n                                label=\"手机号\"\n                                name=\"phone\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '手机号不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input key={1} placeholder={'请输入手机号'} maxLength={11}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"身份证号\"\n                                name=\"identification_no\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '身份证号不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入身份证号'} maxLength={21}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"姓名\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '姓名不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入姓名'} maxLength={20}/>\n                            </Form.Item>\n\n\n                            <Form.Item name=\"gender\" label=\"性别\"\n                                       rules={[{required: true, message: '性别不能为空!'}]}>\n                                <Select\n                                    placeholder=\"请选择性别\"\n                                >\n                                    <Option key={1} value='male'>男</Option>\n                                    <Option key={2} value='female'>女</Option>\n\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"电子邮箱\"\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '电子邮箱不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入电子邮箱'} maxLength={50}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"出生日期\"\n                                name=\"birthday\"\n                                format=\"YYYY-MM-DD\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '出生日期不能为空!',\n                                    },\n                                ]}\n                            >\n                                <DatePicker/>\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                    确定\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, Space, message, Divider, DatePicker, Card, Modal} from \"antd\";\nimport { updatePassword} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport './index.less'\nimport store from \"../../../store\";\n\nclass Index extends Component {\n\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            visible:true,\n            formItem: {}\n        }\n\n    }\n\n    componentDidMount() {\n    }\n\n\n    operate = (form) => {\n\n        const {password,newPassword,confirmPassword}=form;\n\n        if(password===newPassword){\n            Util.warning(\"新密码不能和原密码相同！\")\n            return;\n        }\n\n        if(confirmPassword!==newPassword){\n            Util.warning(\"确认新密码和新密码不相同！\")\n            return;\n        }\n\n        this.setState({\n            formItem: Object.assign(this.state.formItem, form)\n        })\n\n        updatePassword(this.state.formItem).then((data) => {\n            Util.success(\"密码修改成功，请重新登录！\")\n\n            store.clear()\n            this.props.history.push('/user/login')\n\n        }).catch(err => {\n            Util.error(err)\n        })\n\n\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>密码修改</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={8} offset={8}>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"horizontal\"\n                            labelCol={{span: 4}}\n                            wrapperCol={{span: 20}}\n                            onFinish={this.operate}\n                        >\n                            <Form.Item name={'password'} label={'原密码'} rules={[\n                                {\n                                    required: true,\n                                    message: '原密码不能为空!',\n                                },\n                            ]}>\n                                <Input type={\"password\"} placeholder='请输入原始密码' minLength={6} maxLength={50}></Input>\n                            </Form.Item>\n\n                            <Form.Item name={'newPassword'} label={'新密码'} rules={[\n                                {\n                                    required: true,\n                                    message: '新密码不能为空!',\n                                },\n                            ]}>\n                                <Input type={\"password\"} placeholder='请输入原始密码' minLength={6} maxLength={50}></Input>\n                            </Form.Item>\n\n                            <Form.Item name={'confirmPassword'} label={'确认新密码'} rules={[\n                                {\n                                    required: true,\n                                    message: '确认新密码不能为空!',\n                                },\n                            ]}>\n                                <Input type={\"password\"} placeholder='请输入原始密码' minLength={6} maxLength={50}></Input>\n                            </Form.Item>\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                    确定\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport {Row,Col,Button,Table,Space,message,Modal,Divider} from \"antd\";\n\nimport Util from \"../../../assets/js/Util\";\n\nimport Role from \"../../../assets/js/Role\";\n\nimport {getDivisionList,deleteDivision} from \"../../../http/service\";\n\nclass Index extends Component {\n\n    constructor() {\n        super();\n        this.state={\n            datalist:[]\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n    getList=(page)=> {\n\n        page=page||1;\n\n        let pageSize=Util.pageSize\n\n        getDivisionList( {\n            role:Role.divisionManager,\n            page,\n            pageSize\n\n        }).then((data) => {\n\n            this.setState({\n                datalist:data\n            })\n\n        }).catch(err => {\n            message.warning(err)\n        })\n    }\n    add=()=> {\n        this.props.history.push('/division/operate')\n    }\n    adminList=(division_id)=>{\n\n        this.props.history.push({\n            pathname:'/division/adminList',\n            state:{\n                division_id\n            }\n        })\n    }\n    edit=(row)=>{\n\n        this.props.history.push({\n            pathname:'/division/operate',\n            state:{\n                opType:'edit',\n                formItem:row\n            }\n        })\n    }\n    delete=(division_id)=>{\n\n        Util.confirm({\n            title:'您确认删除吗？',\n            onOk:()=>{\n                deleteDivision({\n                    division_id\n                }).then(()=>{\n                    message.success(\"删除成功\")\n                    this.getList()\n                }).catch(err=>{\n                    message.warning(err)\n                })\n            }\n        })\n\n    }\n\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return index+1;\n                }\n            },\n            {\n                title: '分部名称',\n                dataIndex: 'division_name',\n            },\n            {\n                title: '功能等级',\n                dataIndex: 'function_level',\n                render:(text)=>{\n                    let state=''\n                    switch (text) {\n                        case 0:\n                            state='基础功能'\n                            break;\n                        case 1:\n                            state='预约管理'\n                            break;\n                        case 2:\n                            state='账单生成'\n                            break;\n                        case 3:\n                            state='线上支付'\n                            break;\n                    }\n                    return state;\n                }\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'create_date',\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        <Button type={\"primary\"} size={\"small\"} onClick={this.edit.bind(this,row)}>编辑</Button>\n                        <Button type={\"primary\"} size={\"small\"} danger onClick={this.delete.bind(this,row.division_id)}>删除</Button>\n                        <Button type={\"primary\"} size={\"small\"} onClick={this.adminList.bind(this,row.division_id)}>分部管理员</Button>\n                    </Space>\n                ),\n            },\n        ];\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>分部管理</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                   <Col span={24}>\n                       <Table dataSource={this.state.datalist} columns={columns} rowKey=\"division_id\" pagination={false}/>\n                   </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","/**\n * 分部的功能等级\n * @type {{APPOINT: number, ONLINEPAY: number, STATISTICS: number, BASE: number}}\n */\nlet FUNCTION_LEVEL = {\n    BASE: 0,        //基础功能\n    APPOINT: 1,       //预约\n    STATISTICS: 2,      //账单功能\n    ONLINEPAY: 3,      //在线支付\n};\n\n\nexport default FUNCTION_LEVEL\n","/**\n * 在线支付时的收款方\n * @type {{SYSTEM: number, SELF: number}}\n */\nlet RECEIVE_SIDE = {\n    SYSTEM: 0,        //系统代收（新航图）\n    SELF: 1,       //商户自己收款\n};\n\n\nexport default RECEIVE_SIDE\n","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, Space, message, Divider, DatePicker,Radio} from \"antd\";\nimport {addDivision, updateDivision} from \"../../../http/service\";\nimport FUNCTION_LEVEL from \"../../../assets/js/constants/FUNCTION_LEVEL\";\nimport RECEIVE_SIDE from \"../../../assets/js/constants/RECEIVE_SIDE\";\n\nconst {Option} = Select;\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = this.props.location.state && this.props.location.state.opType === 'edit'\n\n\n        this.state = {\n            formItem: this.isEdit?this.props.location.state.formItem:{}\n        }\n    }\n\n\n    back = () => {\n        this.props.history.push('/division/list')\n    }\n\n    operate = (values) => {\n\n        this.setState({\n            formItem: Object.assign(this.state.formItem,values)\n        })\n\n        if (this.isEdit) {\n\n            updateDivision(this.state.formItem).then((data) => {\n\n                message.success(\"修改成功！\")\n                this.back()\n\n\n            }).catch(err => {\n                message.error(err)\n            })\n        } else {\n\n            addDivision(this.state.formItem).then((data) => {\n\n                message.success(\"新增成功！\")\n                this.back()\n\n            }).catch(err => {\n                message.error(err)\n            })\n        }\n\n\n    }\n\n    render() {\n\n        this.function_level_list = [{\n            value: FUNCTION_LEVEL.BASE,\n            name: '基础功能'\n        }, {\n            value: FUNCTION_LEVEL.APPOINT,\n            name: '预约管理'\n        }, {\n            value: FUNCTION_LEVEL.STATISTICS,\n            name: '账单生成'\n        }, {\n            value: FUNCTION_LEVEL.ONLINEPAY,\n            name: '线上支付'\n        }]\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>分部操作</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col offset={8} span={8}>\n\n                        <Form\n                            name=\"basic\"\n                            labelCol={{span: 6}}\n                            initialValues={this.state.formItem}\n                            onFinish={this.operate}\n                        >\n                            <Form.Item\n                                label=\"分部名称\"\n                                name=\"division_name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '分部名称不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入分部名称'}/>\n                            </Form.Item>\n\n                            <Form.Item name=\"function_level\" label=\"功能等级\"\n                                       rules={[{required: true, message: '功能等级不能为空!'}]}>\n                                <Select\n                                    placeholder=\"请选择功能等级\"\n                                    value={this.state.formItem.function_level}\n                                >\n                                    {\n                                        this.function_level_list.map((item, index) => {\n                                            return <Option key={index} value={item.value}>{item.name}</Option>\n                                        })\n                                    }\n\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.function_level !== currentValues.function_level}\n                            >\n\n                                {({getFieldValue}) => {\n                                    return getFieldValue('function_level') === FUNCTION_LEVEL.ONLINEPAY ? (\n                                        <React.Fragment>\n                                            <Form.Item name=\"receive_side\" label=\"收款方\" rules={[\n                                                {\n                                                    required: true,\n                                                    message: '请选择收款方!',\n                                                },\n                                            ]}>\n                                                <Radio.Group>\n                                                    <Radio.Button value={RECEIVE_SIDE.SYSTEM}>系统代收</Radio.Button>\n                                                    <Radio.Button value={RECEIVE_SIDE.SELF}>自收</Radio.Button>\n                                                </Radio.Group>\n                                            </Form.Item>\n                                        </React.Fragment>\n                                    ) : null\n                                }}\n\n                            </Form.Item>\n\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={true}\n                            >\n\n                                {({getFieldValue}) => {\n                                    return (getFieldValue('receive_side') === RECEIVE_SIDE.SELF  && getFieldValue('function_level') === FUNCTION_LEVEL.ONLINEPAY ) ? (\n                                        <React.Fragment>\n                                            <Form.Item\n                                                label=\"收款微信商户\"\n                                                name=\"sub_mch_id\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message: '收款微信商户号不能为空!',\n                                                    },\n                                                ]}\n                                            >\n                                                <Input placeholder={'请输入收款微信商户号'}/>\n                                            </Form.Item>\n                                        </React.Fragment>\n                                    ) : null\n                                }}\n\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Space>\n                                    <Button type=\"default\" onClick={this.back}>\n                                        返回\n                                    </Button>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        确定\n                                    </Button>\n                                </Space>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport Util from \"../../../assets/js/Util\";\nimport Role from \"../../../assets/js/Role\";\n\nimport {getDivisionAdminList, deleteDivisionAdmin} from \"../../../http/service\";\nimport {Button, Col, Row, Divider, Table, Space,Pagination} from \"antd\";\n\n\nclass Index extends Component {\n\n    constructor(props) {\n\n        super(props);\n        this.division_id = this.props.location.state.division_id\n\n        this.state={\n            data:{\n                data:[]\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n    back = () => {\n        this.props.history.push('/division/list')\n    }\n\n    getList = (page) => {\n\n\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n\n        getDivisionAdminList({\n            role: Role.divisionManager,\n            division_id: this.division_id,\n            page,\n            pageSize\n\n        }).then((data) => {\n\n            this.setState({\n                data:data\n            })\n\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n    add = () => {\n\n        this.props.history.push({\n            pathname: \"/division/adminOperate\",\n            state: {\n                division_id: this.division_id\n            }\n        })\n    }\n    edit = (formItem) => {\n\n\n        this.props.history.push({\n            pathname: \"/division/adminOperate\",\n            state: {\n                division_id: this.division_id,\n                formItem,\n                opType: 'edit'\n            }\n        })\n    }\n    delete = (user_id) => {\n\n        Util.confirm({\n            title: '您确认删除吗？',\n            content: '',\n            onOk: () => {\n\n                deleteDivisionAdmin({\n                    user_id,\n                    division_id: this.division_id\n                }).then(() => {\n                    Util.success(\"删除成功\")\n                    this.getList()\n                }).catch(err => {\n                    Util.error(err)\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n            },\n            {\n                title: '手机号',\n                dataIndex: 'phone',\n            },\n            {\n                title: '性别',\n                dataIndex: 'gender',\n                render:(text)=>{\n                    return text === 'male' ? '男' : '女'\n                }\n            },\n            {\n                title: '电子邮箱',\n                dataIndex: 'email',\n            },\n            {\n                title: '出生日期',\n                dataIndex: 'birthday',\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        <Button size={\"small\"} type={\"primary\"} onClick={this.edit.bind(this,row)}>编辑</Button>\n                        <Button size={\"small\"} type={\"primary\"} danger onClick={this.delete.bind(this,row.user_id)}>删除</Button>\n                    </Space>\n                ),\n            },\n        ];\n\n        return (\n            <div>\n                <Row>\n                    <Col span={20}>\n                        <h3>分部管理员</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"default\"} onClick={this.back}>返回</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"user_id\" pagination={false} />\n                        <Pagination showQuickJumper total={this.state.data.count} onChange={this.getList} />\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, Space, message, Divider, DatePicker} from \"antd\";\nimport {addDivisionAdmin, updateDivisionAdmin} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport Role from \"../../../assets/js/Role\";\nimport moment from 'moment'\n\nconst {Option} = Select;\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = this.props.location.state && this.props.location.state.opType === 'edit'\n        this.division_id = (this.props.location.state && this.props.location.state.division_id) ? this.props.location.state.division_id : ''\n\n        let formItem={}\n        if(this.isEdit){\n            formItem=this.props.location.state.formItem\n            formItem.birthday=moment(formItem.birthday)\n        }\n\n        \n        this.state = {\n            formItem\n        }\n\n    }\n\n\n    back = () => {\n        this.props.history.goBack()\n    }\n    operate = (form) => {\n\n        form.birthday=moment(form.birthday).format('yyyy-MM-DD');\n        form.division_id=this.division_id;\n\n        this.setState({\n            formItem:Object.assign(this.state.formItem,form)\n        })\n\n        if (!Util.isValidPhone(this.state.formItem.phone)) {\n            Util.warning('请输入合法的手机号！')\n            return;\n        }\n\n        if (!Util.isValidEmail(this.state.formItem.email)) {\n            Util.warning('请输入合法的电子邮箱！')\n            return;\n        }\n\n        if (this.isEdit) {\n            updateDivisionAdmin(this.state.formItem).then((data) => {\n\n                Util.success(\"修改成功！\")\n\n                this.props.history.push({\n                    pathname: '/division/adminList',\n                    state: {\n                        division_id: this.division_id\n                    }\n                })\n\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        } else {\n            addDivisionAdmin(this.state.formItem).then((data) => {\n\n                Util.success(\"新增成功！\")\n\n                this.props.history.push({\n                    pathname: '/division/adminList',\n                    state: {\n                        division_id: this.division_id\n                    }\n                })\n\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n\n\n    }\n\n    render() {\n\n\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>分部管理员操作</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col offset={8} span={8}>\n\n                        <Form\n                            layout=\"horizontal\"\n                            labelCol={{span:4}}\n                            wrapperCol={{ span: 20 }}\n                            initialValues={this.state.formItem}\n                            onFinish={this.operate}\n                        >\n                            <Form.Item\n                                label=\"手机号\"\n                                name=\"phone\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '手机号不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入手机号'} maxLength={11}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"姓名\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '姓名不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入姓名'} maxLength={20}/>\n                            </Form.Item>\n\n\n                            <Form.Item name=\"gender\" label=\"性别\"\n                                       rules={[{required: true, message: '性别不能为空!'}]}>\n                                <Select\n                                    placeholder=\"请选择性别\"\n                                    value={this.state.formItem.gender}\n                                >\n                                    <Option key={1} value='male'>男</Option>\n                                    <Option key={2} value='female'>女</Option>\n\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"电子邮箱\"\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '电子邮箱不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入电子邮箱'} maxLength={50}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"出生日期\"\n                                name=\"birthday\"\n                                format=\"YYYY-MM-DD\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '出生日期不能为空!',\n                                    },\n                                ]}\n                            >\n                                <DatePicker/>\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Space>\n                                    <Button type=\"default\" onClick={this.back}>\n                                        返回\n                                    </Button>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        确定\n                                    </Button>\n                                </Space>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Divider, message, Pagination, Row, Space, Table} from \"antd\";\nimport Util from \"../../../assets/js/Util\";\nimport {getEthicsnoticeList, deleteEthicsnotice,onOffEthicsnotice} from \"../../../http/service\";\nimport warning from \"react-redux/lib/utils/warning\";\n\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {\n                data: []\n            }\n\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n    getList = (page) => {\n\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n\n        getEthicsnoticeList({\n            page,\n            pageSize,\n        }).then((data) => {\n\n            this.setState({\n                data: data\n            })\n\n        }).catch(err => {\n            Util.error(err)\n        })\n\n\n    }\n\n\n    add = () => {\n        this.props.history.push('/ethicsNotice/operate')\n    }\n    edit = (row) => {\n        this.props.history.push({\n            pathname: '/ethicsNotice/operate',\n            state: {\n                opType: 'edit',\n                formItem: row\n            }\n        })\n    }\n    onOff=(row)=>{\n        onOffEthicsnotice({\n            ethicsnotice_id:row.ethicsnotice_id,\n            state:row.state===0?1:0\n        }).then(data=>{\n            Util.success(\"操作成功\")\n            this.getList()\n        })\n\n    }\n    delete = (ethicsnotice_id) => {\n\n\n        Util.confirm({\n            title: '您确认删除吗？',\n            content: '',\n            onOk: () => {\n\n                deleteEthicsnotice({\n                    ethicsnotice_id\n                }).then(data=>{\n                    Util.success(\"删除成功\")\n                    this.getList()\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                width:'5em',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '咨询师姓名',\n                width:'10em',\n                dataIndex: 'name',\n            },\n            {\n                title: '添加时间',\n                width:'15em',\n                dataIndex: 'add_date',\n            },\n            {\n                title: '显示方式',\n                dataIndex: 'showManner',\n                width:'15em',\n                render: (text) => {\n                    return text === '0' ? '不显示' : text === '1' ? '永久显示' : '一段时间显示'\n                }\n            },\n            {\n                title: '显示截止日期',\n                dataIndex: 'end_date',\n                width:'10em',\n                render: (text) => {\n\n                    return text?text.split(' ')[0]:text;\n                }\n            },\n            {\n                title: '公告内容',\n                dataIndex: 'content',\n                ellipsis:true\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                width:'5em',\n                render:(state)=>{\n                    return state===0?'启用':'停用'\n                }\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                width:'20em',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        <Button size={\"small\"} type={\"primary\"} onClick={this.edit.bind(this, row)}>编辑</Button>\n                        {\n                            row.state===0?\n                                <Button size={\"small\"} type={\"primary\"} danger onClick={this.onOff.bind(this, row)}>停用</Button>\n                                :\n                                <Button size={\"small\"} type={\"primary\"} onClick={this.onOff.bind(this, row)}>启用</Button>\n                        }\n\n                        <Button size={\"small\"} type={\"primary\"} danger\n                                onClick={this.delete.bind(this, row.ethicsnotice_id)}>删除</Button>\n                    </Space>\n                ),\n            },\n        ];\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>伦理公告列表</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"ethicsnotice_id\" pagination={false}/>\n                        {\n                            this.state.data.count > 0\n                                ?\n                                (<Pagination showQuickJumper\n                                             total={this.state.data.count}\n                                             pageSize={this.state.data.pageSize}\n                                             current={this.state.data.currentPage}\n                                             onChange={this.getList}/>)\n                                :\n                                (null)\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {\n    Button,\n    Col,\n    Row,\n    Form,\n    Input,\n    Select,\n    Space,\n    message,\n    Divider,\n    DatePicker,\n    Table,\n    Pagination,\n    Modal\n} from \"antd\";\nimport {addDivisionAdmin, updateDivisionAdmin} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport Role from \"../../../assets/js/Role\";\nimport {NOTICE_SHOW_TYPE} from \"../../../assets/js/constants/constant\";\nimport {addEthicsnotice,updateEthicsnotice,getUserList} from \"../../../http/service\";\nimport moment from 'moment'\n\nconst {Option} = Select;\n\nclass Index extends Component {\n\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = this.props.location.state && this.props.location.state.opType === 'edit'\n\n        let formItem = {\n            show_manner: 1,\n            therapist_id:''\n        }\n        if (this.isEdit) {\n            formItem = this.props.location.state.formItem\n            formItem.therapist_name=formItem.name;\n            if(formItem.end_date){\n                formItem.end_date = moment(formItem.end_date)\n            }\n\n        }\n\n\n        this.state = {\n            formItem,\n            therapistListData: {\n              data:[]\n            },\n            visible:false,\n        }\n\n    }\n\n    componentDidMount() {\n        this.getTherapistList()\n    }\n\n\n\n    getTherapistList=(page)=>{\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n\n        getUserList({\n            role:Role.therapist,\n            page,\n            pageSize\n        }).then(data=>{\n            this.setState({\n                therapistListData:data\n            })\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n\n    back = () => {\n        this.props.history.goBack()\n    }\n\n    close = () => {\n        this.setState({\n            visible:false\n        })\n    }\n    operate = (form) => {\n        form.end_date = Util.getDateFromMoment(form.end_date);\n\n\n        this.setState({\n            formItem: Object.assign(this.state.formItem, form)\n        })\n\n\n        if (this.isEdit) {\n\n            updateEthicsnotice(this.state.formItem).then(data=>{\n                Util.success(\"操作成功！\")\n                this.back()\n            }).catch(err => {\n                Util.error(err)\n            })\n\n        } else {\n            addEthicsnotice(this.state.formItem).then(data=>{\n                Util.success(\"操作成功！\")\n                this.back()\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n\n\n    }\n\n    relate=(row)=>{\n\n\n        this.formRef.current.setFieldsValue({\n\n            therapist_name:row.name,\n        })\n\n        this.setState({\n            formItem:{\n                therapist_id:row.user_id,\n            },\n        })\n\n        this.close()\n    }\n\n    render() {\n\n        const allColumns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '咨询师姓名',\n                dataIndex: 'name',\n            },\n            {\n                title: '手机号',\n                dataIndex: 'phone',\n            },\n            {\n                title: '性别',\n                dataIndex: 'gender',\n                render: (text) => {\n                    return text === 'male' ? '男' : '女'\n                }\n            },\n            {\n                title: '电子邮箱',\n                dataIndex: 'email',\n            },\n            {\n                title: '出生日期',\n                dataIndex: 'birthday',\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        <Button size={\"small\"} type={\"primary\"}\n                                onClick={this.relate.bind(this, row)}>选择</Button>\n                    </Space>\n                ),\n            },\n        ];\n\n\n        return (\n            <div>\n                <Modal\n                    width='50vw'\n                    visible={this.state.visible}\n                    title=\"选择咨询师\"\n                    onCancel={()=>{\n                        this.close()\n                    }}\n                    footer={[\n                        <Button key={1} onClick={() => {\n                            this.close()\n                        }}>关闭</Button>\n                    ]}\n                >\n                    <Table dataSource={this.state.therapistListData.data} columns={allColumns} rowKey='user_id'\n                           pagination={false}/>\n                    {\n                        this.state.therapistListData.count > 0\n                            ?\n                            (<Pagination showQuickJumper total={this.state.therapistListData.count}\n                                         pageSize={this.state.therapistListData.pageSize}\n                                         current={this.state.therapistListData.currentPage}\n                                         onChange={this.getTherapistList}/>)\n                            :\n                            (null)\n                    }\n                </Modal>\n\n                <Row>\n                    <Col span={22}>\n                        <h3>伦理公告操作</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col offset={8} span={8}>\n\n                        <Form\n                            ref={this.formRef}\n                            layout=\"horizontal\"\n                            labelCol={{span: 4}}\n                            wrapperCol={{span: 20}}\n                            initialValues={this.state.formItem}\n                            onFinish={this.operate}\n                        >\n                            {\n                                !this.isEdit?\n                                    (\n                                        <Form.Item label=\"选择咨询师\">\n                                            <Button type={\"dashed\"} onClick={()=>{this.setState({visible:true})}}>选择咨询师</Button>\n                                        </Form.Item>\n                                    )\n                                    :\n                                    (\n                                       null\n                                    )\n\n                            }\n\n                            <Form.Item name=\"therapist_name\" label=\"咨询师\"\n                                       rules={[{required: true, message: '咨询师不能为空!'}]}>\n                                <Input placeholder={'请选择咨询师'} readOnly />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"公告内容\"\n                                name=\"content\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '公告内容不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input.TextArea rows={5} placeholder={'请输入公告内容'} maxLength={500}/>\n                            </Form.Item>\n\n                            <Form.Item name=\"show_manner\" label=\"显示方式\"\n                                       rules={[{required: true, message: '显示方式不能为空!'}]}>\n                                <Select\n                                    placeholder=\"请选择显示方式\"\n                                >\n                                    <Option value={0}>不显示</Option>\n                                    <Option value={1}>永久显示</Option>\n                                    <Option value={2}>一段时间显示</Option>\n\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currentValues) => prevValues.show_manner !== currentValues.show_manner}\n                            >\n\n                                {({getFieldValue}) => {\n                                    return getFieldValue('show_manner') === 2 ? (\n                                        <Form.Item\n                                            label=\"截止日期\"\n                                            name=\"end_date\"\n                                            format=\"YYYY-MM-DD\"\n                                            rules={[\n                                                {\n                                                    required: true,\n                                                    message: '截止日期不能为空!',\n                                                },\n                                            ]}\n                                        >\n                                            <DatePicker/>\n                                        </Form.Item>\n                                    ) : null\n                                }}\n\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Space>\n                                    <Button type=\"default\" onClick={this.back}>\n                                        返回\n                                    </Button>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        确定\n                                    </Button>\n                                </Space>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Divider, Pagination, Row, Space, Table} from \"antd\";\nimport Util from \"../../../assets/js/Util\";\nimport {getBlackList,deleteBlacklist} from \"../../../http/service\";\n\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n    getList = (page) => {\n        page=page||1;\n\n        getBlackList({\n            page,\n            pageSize:Util.pageSize\n        }).then(data=>{\n            this.setState({\n                data: data,\n                count: data.length\n            })\n        })\n\n    }\n\n\n    delete = (blacklist_id) => {\n\n\n        Util.confirm({\n            title: '您确认移除吗？',\n            content: '',\n            onOk: () => {\n\n                deleteBlacklist({\n                    blacklist_id\n                }).then(()=>{\n                    Util.success(\"移除成功\")\n                    this.getList()\n                }).catch(err=>{\n                    Util.error(err)\n                })\n\n\n            },\n            onCancel: () => {\n            }\n        });\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '用户姓名',\n                dataIndex: 'name',\n            },\n            {\n                title: '用户手机号',\n                dataIndex: 'phone',\n            },\n            {\n                title: '添加黑名单时间',\n                dataIndex: 'add_date',\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Button size={\"small\"} type={\"primary\"} danger\n                            onClick={this.delete.bind(this, row.blacklist_id)}>移除黑名单</Button>\n\n                ),\n            },\n        ];\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>用户黑名单列表</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"user_id\" pagination={false}/>\n                        {\n                            this.state.data.count > 0\n                                ?\n                                (<Pagination showQuickJumper total={this.state.data.count} onChange={this.getList}/>)\n                                :\n                                (null)\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","/**\n * 咨询师投诉用户的投诉状态\n * @type {{UN_PAY: number, PAYED: number, UNFUNDED: number, CANCELED: number, EXPIRED: number}}\n */\nlet COMPLAINT_STATE = {\n    UNHANDLED: 0,      //未处理\n    REJECTED: 1,      //已驳回\n    ADD_BLACKLIST: 2,      //已添加黑名单\n    REMOVED: 3,      //已移除黑名单\n};\n\n\n\nexport default COMPLAINT_STATE\n","/**\n * 投诉状态描述\n * @type {{\"0\": string, \"1\": string, \"2\": string, \"3\": string}}\n */\nlet COMPLAINT_STATE_DESC = {\n    0: '未处理',      //\n    1: '已驳回',       //\n    2: '已添加黑名单',    //\n    3: '已移除黑名单',    //\n\n\n};\n\n\n\nexport default COMPLAINT_STATE_DESC\n","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Divider, Form, Input, Pagination, Row, Modal, Space, Table} from \"antd\";\nimport Util from \"../../../assets/js/Util\";\nimport {getTherapistComplaints,saveResearchReport,rejectComplaint,addBlacklist} from \"../../../http/service\";\nimport COMPLAINT_STATE from \"../../../assets/js/constants/COMPLAINT_STATE\";\nimport COMPLAINT_STATE_DESC from \"../../../assets/js/constants/COMPLAINT_STATE_DESC\";\n\nconst {RangePicker} = DatePicker;\n\nclass Index extends Component {\n    formRef = React.createRef();\n    modalRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            visible: false,\n            reportContent: '',\n            form: {},\n\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n    getList = (page) => {\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n        getTherapistComplaints(Object.assign({\n            page,\n            pageSize,\n\n        }, this.state.form)).then(data => {\n            this.setState({\n                data: data,\n            })\n        }).catch(err => {\n            Util.error(err)\n        })\n\n\n    }\n\n    query = (form) => {\n\n        let obj = Object.assign({}, this.state.form, form)\n        if (obj.date) {\n            obj.startDate = Util.getDateFromMoment(obj.date[0])\n            obj.endDate = Util.getDateFromMoment(obj.date[1]) + ` 23:59:59`\n\n        } else {\n            obj.startDate = ''\n            obj.endDate = ''\n        }\n\n        this.setState({\n            form: obj\n        })\n\n        this.getList()\n    }\n\n\n    checkReport = () => {\n\n        this.modalRef.current.submit();\n\n\n    }\n\n    saveReport=(form)=>{\n        saveResearchReport({\n            complaint_id:this.modalRef.current.getFieldValue('complaint_id'),\n            report_content:form.report_content\n        }).then(data => {\n            Util.success(`操作成功！`)\n            this.close()\n            this.getList(this.state.data.currentPage)\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n\n    /**\n     * 驳回\n     * @param params\n     */\n    reject = (row) => {\n        Util.confirm({\n            title: '您确认驳回此投诉吗？',\n            content: '',\n            onOk: () => {\n\n                rejectComplaint({\n                    complaint_id:row.complaint_id\n                }).then(data => {\n                    Util.success(`已驳回！`)\n                    this.getList(this.state.data.currentPage)\n                }).catch(err => {\n                    Util.error(err)\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n    }\n    /**\n     * 添加黑名单\n     * @param params\n     */\n    addBlackList = (row) => {\n        Util.confirm({\n            title: '您确认添加此用户到黑名单吗？',\n            content: '',\n            onOk: () => {\n\n                addBlacklist({\n                    complaint_id:row.complaint_id,\n                    user_id:row.user_id,\n                }).then(data => {\n                    Util.success(`已添加！`)\n                    this.getList(this.state.data.currentPage)\n                }).catch(err => {\n                    Util.error(err)\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n    }\n\n    close=()=>{\n        this.setState({\n            visible:false,\n        })\n    }\n\n    show=(row)=>{\n        this.setState({\n            visible:true,\n        })\n        setTimeout(()=>{\n            this.modalRef.current.setFieldsValue(row)\n        })\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n                {\n                    title: '序号',\n                    dataIndex: 'index',\n                    render:(text,row,index)=>{\n                        return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                    }\n                },\n                {\n                    title: '咨询师姓名',\n                    dataIndex: 'therapist_name',\n                },\n                {\n                    title: '咨询师手机号',\n                    dataIndex: 'therapist_phone',\n                },\n                {\n                    title: '用户姓名',\n                    dataIndex: 'name',\n                },\n                {\n                    title: '用户手机号',\n                    dataIndex: 'phone',\n                },\n                {\n                    title: '投诉时间',\n                    dataIndex: 'complaint_date',\n                },\n                {\n                    title: '投诉内容',\n                    dataIndex: 'content',\n                },\n                {\n                    title: '状态',\n                    dataIndex: 'state',\n                    render: (text) => {\n                        return COMPLAINT_STATE_DESC[text]\n                    }\n                },\n                {\n                    title: '操作',\n                    dataIndex: 'action',\n                    render: (text, row) => {\n                        return (row.state === COMPLAINT_STATE.UNHANDLED || row.state === COMPLAINT_STATE.REMOVED) ?\n                            <Space size=\"middle\">\n                                <Button size={\"small\"} type={\"primary\"}\n                                        onClick={this.addBlackList.bind(this, row)}>添加黑名单</Button>\n                                <Button size={\"small\"} type={\"primary\"} onClick={this.reject.bind(this, row)}\n                                        danger>驳回</Button>\n\n                                <Button size={\"small\"} type={\"primary\"}\n                                        onClick={this.show.bind(this,row)}>调查报告</Button>\n                            </Space>\n                            :\n                            <Space size=\"middle\">\n                                <Button size={\"small\"} type={\"primary\"}\n                                        onClick={this.show.bind(this,row)}>调查报告</Button>\n                            </Space>\n\n                    }\n                }\n            ]\n        ;\n\n\n        return (\n\n            <div>\n\n                <Modal\n                    title=\"调查报告\"\n                    visible={this.state.visible}\n                    onOk={this.checkReport}\n                    onCancel={this.close}\n                >\n                    <Form ref={this.modalRef}\n                          onFinish={this.saveReport}\n\n                    >\n                        <Form.Item name={'report_content'} rules={[\n                            {\n                                required: true,\n                                message: '调查报告内容不能为空!',\n                            },\n                        ]}>\n                            <Input.TextArea rows={5} placeholder={'请输入调查报告内容'}></Input.TextArea>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n\n                <Row>\n                    <Col span={22}>\n                        <h3>咨询师投诉用户列表</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"inline\"\n                            labelCol={{span: 10}}\n                            wrapperCol={{span: 14}}\n                            onFinish={this.query}\n                        >\n                            <Form.Item\n                                label=\"咨询师姓名\"\n                                name=\"therapistName\"\n                            >\n                                <Input key={1} placeholder={'请输入咨询师姓名'} maxLength={11}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"用户姓名\"\n                                name=\"userName\"\n                            >\n                                <Input placeholder={'请输入用户姓名'} maxLength={21}/>\n                            </Form.Item>\n\n\n                            <Form.Item\n                                label=\"投诉时间\"\n                                name=\"date\"\n                                format=\"YYYY-MM-DD\"\n                            >\n                                <RangePicker style={{width:'20em'}}/>\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                    查询\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n                <Divider/>\n\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"user_id\" pagination={false}/>\n                        {\n                            this.state.data.count > 0\n                                ?\n                                (<Pagination showQuickJumper total={this.state.data.count} onChange={this.getList}/>)\n                                :\n                                (null)\n                        }\n                    </Col>\n                </Row>\n            </div>\n        )\n            ;\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Divider, Form, Input, Pagination, Row, Modal, Space, Table} from \"antd\";\nimport Util from \"../../../assets/js/Util\";\nimport {getUserComplaints} from \"../../../http/service\";\n\nconst {RangePicker} = DatePicker;\n\nclass Index extends Component {\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            reportContent: '',\n            form: {}\n\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n    getList = (page) => {\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n        getUserComplaints(Object.assign({\n            page,\n            pageSize,\n\n        }, this.state.form)).then(data => {\n            this.setState({\n                data: data,\n            })\n        }).catch(err => {\n            Util.error(err)\n        })\n\n\n    }\n\n    query = (form) => {\n\n        let obj = Object.assign({}, this.state.form, form)\n        if (obj.date) {\n            obj.startDate = Util.getDateFromMoment(obj.date[0])\n            obj.endDate = Util.getDateFromMoment(obj.date[1])+` 23:59:59`\n\n        }else{\n            obj.startDate =''\n            obj.endDate = ''\n        }\n\n        this.setState({\n            form: obj\n        })\n\n\n        this.getList()\n    }\n\n\n    render() {\n\n        const columns = [\n                {\n                    title: '序号',\n                    dataIndex: 'index',\n                    render:(text,row,index)=>{\n                        return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                    }\n                },\n\n                {\n                    title: '用户姓名',\n                    dataIndex: 'name',\n                },\n                {\n                    title: '用户手机号',\n                    dataIndex: 'phone',\n                },\n                {\n                    title: '咨询师姓名',\n                    dataIndex: 'therapist_name',\n                },\n                {\n                    title: '咨询师手机号',\n                    dataIndex: 'therapist_phone',\n                },\n                {\n                    title: '投诉时间',\n                    dataIndex: 'complaint_date',\n                },\n                {\n                    title: '投诉内容',\n                    dataIndex: 'content',\n                },\n            ]\n        ;\n\n\n        return (\n\n            <div>\n\n                <Row>\n                    <Col span={22}>\n                        <h3>用户投诉咨询师列表</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"inline\"\n                            labelCol={{span: 10}}\n                            wrapperCol={{span: 14}}\n                            onFinish={this.query}\n                        >\n\n                            <Form.Item\n                                label=\"用户姓名\"\n                                name=\"userName\"\n                            >\n                                <Input placeholder={'请输入用户姓名'} maxLength={21}/>\n                            </Form.Item>\n\n\n                            <Form.Item\n                                label=\"咨询师姓名\"\n                                name=\"therapistName\"\n                            >\n                                <Input key={1} placeholder={'请输入咨询师姓名'} maxLength={11}/>\n                            </Form.Item>\n\n\n                            <Form.Item\n                                label=\"投诉时间\"\n                                name=\"date\"\n                                format=\"YYYY-MM-DD\"\n                            >\n                                <RangePicker style={{width:'20em'}}/>\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                    查询\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"user_id\" pagination={false}/>\n                        {\n                            this.state.data.count > 0\n                                ?\n                                (<Pagination showQuickJumper total={this.state.data.count} onChange={this.getList}/>)\n                                :\n                                (null)\n                        }\n                    </Col>\n                </Row>\n            </div>\n        )\n            ;\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Divider, Form, Input, Pagination, Row, Modal, Space, Table} from \"antd\";\nimport Util from \"../../../assets/js/Util\";\n\nimport {getSchoolTypeList, addSchoolType, updateSchoolType, deleteSchoolType} from \"../../../http/service\";\n\n\nclass Index extends Component {\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = false;\n        this.state = {\n            data: [],\n            visible: false,\n\n        }\n    }\n\n    componentDidMount() {\n        this.getList()\n    }\n\n\n    close = () => {\n        this.formRef.current.resetFields()\n        this.setState({\n            visible: false\n        })\n    }\n\n    open = () => {\n        this.setState({\n            visible: true\n        })\n    }\n\n\n    getList = () => {\n\n        getSchoolTypeList().then((data) => {\n\n            this.setState({\n                data\n            })\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n\n    addOrUpdate = () => {\n\n        let school_type_name = this.formRef.current.getFieldValue('school_type_name')\n        let school_type_id = this.formRef.current.getFieldValue('school_type_id')\n\n        if (!this.isEdit) {\n\n            addSchoolType({\n                school_type_name\n            }).then(() => {\n                Util.success(\"操作成功\")\n                this.close()\n                this.getList()\n            }).catch(err => {\n                Util.error(err)\n            })\n        } else {\n\n\n            updateSchoolType({\n                school_type_id,\n                school_type_name\n            }).then(() => {\n                Util.success(\"操作成功\")\n                this.close()\n                this.getList()\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n    }\n\n    modalOnOk = () => {\n        this.formRef.current.submit()\n    }\n\n    add = () => {\n        this.isEdit = false;\n        this.open()\n\n    }\n    edit = (row) => {\n        this.open();\n        setTimeout(() => {\n            this.isEdit = true;\n            this.formRef.current.resetFields();\n            this.formRef.current.setFieldsValue(row)\n        })\n\n    }\n    delete = (row) => {\n\n        Util.confirm({\n            title: '您确认删除吗？',\n            content: '',\n            onOk: () => {\n\n                deleteSchoolType({\n                    school_type_id: row.school_type_id\n                }).then(() => {\n                    Util.success(\"删除成功\")\n                    this.getList()\n                }).catch(err => {\n                    Util.error(err)\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n                {\n                    title: '序号',\n                    dataIndex: 'index',\n                    render:(text,row,index)=>{\n                        return index+1;\n                    }\n                },\n                {\n                    title: '流派类型',\n                    dataIndex: 'school_type_name',\n                },\n                {\n                    title: '操作',\n                    dataIndex: 'action',\n                    render: (text, row) => {\n                        return (\n                            <Space size=\"middle\">\n                                <Button size={\"small\"} type={\"primary\"} onClick={this.edit.bind(this, row)}>编辑</Button>\n                                <Button size={\"small\"} type={\"primary\"} danger onClick={this.delete.bind(this, row)}>删除</Button>\n                            </Space>\n                        )\n\n\n                    }\n                }\n            ]\n        ;\n\n\n        return (\n\n            <div>\n\n                <Modal\n                    title=\"流派类型\"\n                    visible={this.state.visible}\n                    onOk={this.modalOnOk}\n                    onCancel={this.close}\n                >\n                    <Form ref={this.formRef}\n                          labelCol={{span:4}}\n                          onFinish={this.addOrUpdate}\n\n                    >\n                        <Form.Item name={'school_type_name'} label={'流派类型'} rules={[\n                            {\n                                required: true,\n                                message: '流派类型不能为空!',\n                            },\n                        ]}>\n                            <Input placeholder='请输入流派类型'></Input>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n\n                <Row>\n                    <Col span={22}>\n                        <h3>流派类型管理</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data} columns={columns} rowKey=\"school_type_id\"\n                               pagination={false}/>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Divider, Form, Input, Pagination, Row, Modal, Space, Table} from \"antd\";\nimport Util from \"../../../assets/js/Util\";\n\nimport {getQualificationTypeList, addQualificationType, updateQualificationType, deleteQualificationType} from \"../../../http/service\";\n\n\nclass Index extends Component {\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = false;\n        this.state = {\n            data: [],\n            visible: false,\n\n        }\n    }\n\n    componentDidMount() {\n        this.getList()\n    }\n\n\n    close = () => {\n        this.formRef.current.resetFields()\n        this.setState({\n            visible: false\n        })\n    }\n\n    open = () => {\n        this.setState({\n            visible: true\n        })\n    }\n\n\n    getList = () => {\n\n        getQualificationTypeList().then((data) => {\n\n            this.setState({\n                data\n            })\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n\n    addOrUpdate = () => {\n\n        let qualification_type_name = this.formRef.current.getFieldValue('qualification_type_name')\n        let qualification_type_id = this.formRef.current.getFieldValue('qualification_type_id')\n\n        if (!this.isEdit) {\n\n            addQualificationType({\n                qualification_type_name\n            }).then(() => {\n                Util.success(\"操作成功\")\n                this.close()\n                this.getList()\n            }).catch(err => {\n                Util.error(err)\n            })\n        } else {\n\n\n            updateQualificationType({\n                qualification_type_id,\n                qualification_type_name\n            }).then(() => {\n                Util.success(\"操作成功\")\n                this.close()\n                this.getList()\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n    }\n\n    modalOnOk = () => {\n        this.formRef.current.submit()\n    }\n\n    add = () => {\n        this.isEdit = false;\n        this.open()\n\n    }\n    edit = (row) => {\n        this.open();\n        setTimeout(() => {\n            this.isEdit = true;\n            this.formRef.current.resetFields();\n            this.formRef.current.setFieldsValue(row)\n        })\n\n    }\n    delete = (row) => {\n\n        Util.confirm({\n            title: '您确认删除吗？',\n            content: '',\n            onOk: () => {\n\n                deleteQualificationType({\n                    qualification_type_id: row.qualification_type_id\n                }).then(() => {\n                    Util.success(\"删除成功\")\n                    this.getList()\n                }).catch(err => {\n                    Util.error(err)\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n                {\n                    title: '序号',\n                    dataIndex: 'index',\n                    render:(text,row,index)=>{\n                        return index+1;\n                    }\n                },\n                {\n                    title: '资历类型',\n                    dataIndex: 'qualification_type_name',\n                },\n                {\n                    title: '操作',\n                    dataIndex: 'action',\n                    render: (text, row) => {\n                        return (\n                            <Space size=\"middle\">\n                                <Button size={\"small\"} type={\"primary\"} onClick={this.edit.bind(this, row)}>编辑</Button>\n                                <Button size={\"small\"} type={\"primary\"} danger onClick={this.delete.bind(this, row)}>删除</Button>\n                            </Space>\n                        )\n\n\n                    }\n                }\n            ]\n        ;\n\n\n        return (\n\n            <div>\n\n                <Modal\n                    title=\"资历类型\"\n                    visible={this.state.visible}\n                    onOk={this.modalOnOk}\n                    onCancel={this.close}\n                >\n                    <Form ref={this.formRef}\n                          labelCol={{span: 6}}\n                          onFinish={this.addOrUpdate}\n\n                    >\n                        <Form.Item name={'qualification_type_name'} label={'资历类型'} rules={[\n                            {\n                                required: true,\n                                message: '资历类型不能为空!',\n                            },\n                        ]}>\n                            <Input placeholder='请输入资历类型'></Input>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n\n                <Row>\n                    <Col span={22}>\n                        <h3>资历类型管理</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data} columns={columns} rowKey=\"qualification_type_id\"\n                               pagination={false}/>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Divider, Form, Input, Pagination, Row, Modal, Space, Table} from \"antd\";\nimport Util from \"../../../assets/js/Util\";\n\nimport {getConsultTypeList, addConsultType, updateConsultType, deleteConsultType} from \"../../../http/service\";\n\n\nclass Index extends Component {\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = false;\n        this.state = {\n            data: [],\n            visible: false,\n\n        }\n    }\n\n    componentDidMount() {\n        this.getList()\n    }\n\n\n    close = () => {\n        this.formRef.current.resetFields()\n        this.setState({\n            visible: false\n        })\n    }\n\n    open = () => {\n        this.setState({\n            visible: true\n        })\n    }\n\n\n    getList = () => {\n\n        getConsultTypeList().then((data) => {\n\n            this.setState({\n                data\n            })\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n\n    addOrUpdate = () => {\n\n        let consult_type_name = this.formRef.current.getFieldValue('consult_type_name')\n        let consult_type_id = this.formRef.current.getFieldValue('consult_type_id')\n        let remark = this.formRef.current.getFieldValue('remark')\n\n        if (!this.isEdit) {\n\n            addConsultType({\n                consult_type_name,\n                remark\n            }).then(() => {\n                Util.success(\"操作成功\")\n                this.close()\n                this.getList()\n            }).catch(err => {\n                Util.error(err)\n            })\n        } else {\n\n\n            updateConsultType({\n                consult_type_id,\n                consult_type_name,\n                remark\n            }).then(() => {\n                Util.success(\"操作成功\")\n                this.close()\n                this.getList()\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n    }\n\n    modalOnOk = () => {\n        this.formRef.current.submit()\n    }\n\n    add = () => {\n        this.isEdit = false;\n        this.open()\n\n    }\n    edit = (row) => {\n        this.open();\n        setTimeout(() => {\n            this.isEdit = true;\n            this.formRef.current.resetFields();\n            this.formRef.current.setFieldsValue(row)\n        })\n\n    }\n    delete = (row) => {\n\n        Util.confirm({\n            title: '您确认删除吗？',\n            content: '',\n            onOk: () => {\n\n                deleteConsultType({\n                    consult_type_id: row.consult_type_id\n                }).then(() => {\n                    Util.success(\"删除成功\")\n                    this.getList()\n                }).catch(err => {\n                    Util.error(err)\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n                {\n                    title: '序号',\n                    dataIndex: 'index',\n                    render:(text,row,index)=>{\n                        return index+1;\n                    }\n                },\n                {\n                    title: '预约类型',\n                    dataIndex: 'consult_type_name',\n                },\n                {\n                    title: '备注',\n                    dataIndex: 'remark',\n                },\n                {\n                    title: '操作',\n                    dataIndex: 'action',\n                    render: (text, row) => {\n                        return (\n                            <Space size=\"middle\">\n                                <Button size={\"small\"} type={\"primary\"} onClick={this.edit.bind(this, row)}>编辑</Button>\n                                <Button size={\"small\"} type={\"primary\"} danger\n                                        onClick={this.delete.bind(this, row)}>删除</Button>\n                            </Space>\n                        )\n\n\n                    }\n                }\n            ]\n        ;\n\n\n        return (\n\n            <div>\n\n                <Modal\n                    title=\"预约类型\"\n                    visible={this.state.visible}\n                    onOk={this.modalOnOk}\n                    onCancel={this.close}\n                >\n                    <Form ref={this.formRef}\n                          labelCol={{span: 6}}\n                          onFinish={this.addOrUpdate}\n\n                    >\n                        <Form.Item name={'consult_type_name'} label={'预约类型'} rules={[\n                            {\n                                required: true,\n                                message: '预约类型不能为空!',\n                            },\n                        ]}>\n                            <Input placeholder='请输入预约类型'></Input>\n                        </Form.Item>\n                        <Form.Item name={'remark'} label={'备注'}>\n                            <Input.TextArea rows={5} placeholder='请输入备注'></Input.TextArea>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n\n                <Row>\n                    <Col span={22}>\n                        <h3>预约类型管理</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data} columns={columns} rowKey=\"consult_type_id\"\n                               pagination={false}/>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Divider, Form, Input, InputNumber, Row, Modal, Space, Table} from \"antd\";\nimport Util from \"../../../assets/js/Util\";\n\nimport {getLevelTypeList, addLevelType, updateLevelType, deleteLevelType} from \"../../../http/service\";\n\n\nclass Index extends Component {\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = false;\n        this.state = {\n            data: [],\n            visible: false,\n\n        }\n    }\n\n    componentDidMount() {\n        this.getList()\n    }\n\n\n    close = () => {\n        this.formRef.current.resetFields()\n        this.setState({\n            visible: false\n        })\n    }\n\n    open = () => {\n        this.setState({\n            visible: true\n        })\n    }\n\n\n    getList = () => {\n\n        getLevelTypeList().then((data) => {\n\n            this.setState({\n                data\n            })\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n\n    addOrUpdate = () => {\n\n        let level_type_name = this.formRef.current.getFieldValue('level_type_name')\n        let level_type_id = this.formRef.current.getFieldValue('level_type_id')\n        let divide_ratio = this.formRef.current.getFieldValue('divide_ratio')\n\n        if (!this.isEdit) {\n\n            addLevelType({\n                level_type_name,\n                divide_ratio\n            }).then(() => {\n                Util.success(\"操作成功\")\n                this.close()\n                this.getList()\n            }).catch(err => {\n                Util.error(err)\n            })\n        } else {\n\n\n            updateLevelType({\n                level_type_id,\n                level_type_name,\n                divide_ratio\n            }).then(() => {\n                Util.success(\"操作成功\")\n                this.close()\n                this.getList()\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n    }\n\n    modalOnOk = () => {\n        this.formRef.current.submit()\n    }\n\n    add = () => {\n        this.isEdit = false;\n        this.open()\n\n    }\n    edit = (row) => {\n        this.open();\n        setTimeout(() => {\n            this.isEdit = true;\n            this.formRef.current.resetFields();\n            this.formRef.current.setFieldsValue(row)\n        })\n\n    }\n    delete = (row) => {\n\n        Util.confirm({\n            title: '您确认删除吗？',\n            content: '',\n            onOk: () => {\n\n                deleteLevelType({\n                    level_type_id: row.level_type_id\n                }).then(() => {\n                    Util.success(\"删除成功\")\n                    this.getList()\n                }).catch(err => {\n                    Util.error(err)\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n                {\n                    title: '序号',\n                    dataIndex: 'index',\n                    render:(text,row,index)=>{\n                        return index+1;\n                    }\n                },\n                {\n                    title: '咨询师等级',\n                    dataIndex: 'level_type_name',\n                },\n                {\n                    title: '分成比例（%）',\n                    dataIndex: 'divide_ratio',\n                },\n                {\n                    title: '操作',\n                    dataIndex: 'action',\n                    render: (text, row) => {\n                        return (\n                            <Space size=\"middle\">\n                                <Button size={\"small\"} type={\"primary\"} onClick={this.edit.bind(this, row)}>编辑</Button>\n                                <Button size={\"small\"} type={\"primary\"} danger\n                                        onClick={this.delete.bind(this, row)}>删除</Button>\n                            </Space>\n                        )\n\n\n                    }\n                }\n            ]\n        ;\n\n\n        return (\n\n            <div>\n\n                <Modal\n                    title=\"咨询师等级\"\n                    visible={this.state.visible}\n                    onOk={this.modalOnOk}\n                    onCancel={this.close}\n                >\n                    <Form ref={this.formRef}\n                          labelCol={{span: 6}}\n                          onFinish={this.addOrUpdate}\n\n                    >\n                        <Form.Item name={'level_type_name'} label={'咨询师等级'} rules={[\n                            {\n                                required: true,\n                                message: '咨询师等级不能为空!',\n                            },\n                        ]}>\n                            <Input placeholder='请输入咨询师等级'></Input>\n                        </Form.Item>\n\n                        <Form.Item name={'divide_ratio'} label={'分成比例（%）'} rules={[\n                            {\n                                required: true,\n                                message: '分成比例不能为空!',\n                            },\n                        ]}>\n                            <InputNumber\n                                min={0}\n                                max={100}\n                                precision={2}\n                                step={0.01}\n                                style={{width: '100%'}}\n                                // onChange={onChange}\n                            />\n                        </Form.Item>\n\n                    </Form>\n                </Modal>\n\n\n                <Row>\n                    <Col span={22}>\n                        <h3>咨询师等级管理</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data} columns={columns} rowKey=\"level_type_id\"\n                               pagination={false}/>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Divider, Form, Input, Pagination, Row, Modal, Space, Table} from \"antd\";\nimport Util from \"../../../assets/js/Util\";\n\nimport {getMannerTypeList, addMannerType, updateMannerType, deleteMannerType} from \"../../../http/service\";\n\n\nclass Index extends Component {\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = false;\n        this.state = {\n            data: [],\n            visible: false,\n\n        }\n    }\n\n    componentDidMount() {\n        this.getList()\n    }\n\n\n    close = () => {\n        this.formRef.current.resetFields()\n        this.setState({\n            visible: false\n        })\n    }\n\n    open = () => {\n        this.setState({\n            visible: true\n        })\n    }\n\n\n    getList = () => {\n\n        getMannerTypeList().then((data) => {\n\n            this.setState({\n                data\n            })\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n\n    addOrUpdate = () => {\n\n        let manner_type_name = this.formRef.current.getFieldValue('manner_type_name')\n        let manner_type_id = this.formRef.current.getFieldValue('manner_type_id')\n\n        if (!this.isEdit) {\n\n            addMannerType({\n                manner_type_name\n            }).then(() => {\n                Util.success(\"操作成功\")\n                this.close()\n                this.getList()\n            }).catch(err => {\n                Util.error(err)\n            })\n        } else {\n\n\n            updateMannerType({\n                manner_type_id,\n                manner_type_name\n            }).then(() => {\n                Util.success(\"操作成功\")\n                this.close()\n                this.getList()\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n    }\n\n    modalOnOk = () => {\n        this.formRef.current.submit()\n    }\n\n    add = () => {\n        this.isEdit = false;\n        this.open()\n\n    }\n    edit = (row) => {\n        this.open();\n        setTimeout(() => {\n            this.isEdit = true;\n            this.formRef.current.resetFields();\n            this.formRef.current.setFieldsValue(row)\n        })\n\n    }\n    delete = (row) => {\n\n        Util.confirm({\n            title: '您确认删除吗？',\n            content: '',\n            onOk: () => {\n\n                deleteMannerType({\n                    manner_type_id: row.manner_type_id\n                }).then(() => {\n                    Util.success(\"删除成功\")\n                    this.getList()\n                }).catch(err => {\n                    Util.error(err)\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n                {\n                    title: '序号',\n                    dataIndex: 'index',\n                    render:(text,row,index)=>{\n                        return index+1;\n                    }\n                },\n                {\n                    title: '咨询方式',\n                    dataIndex: 'manner_type_name',\n                },\n                {\n                    title: '操作',\n                    dataIndex: 'action',\n                    render: (text, row) => {\n                        return (\n                            <Space size=\"middle\">\n                                <Button size={\"small\"} type={\"primary\"} onClick={this.edit.bind(this, row)}>编辑</Button>\n                                <Button size={\"small\"} type={\"primary\"} danger onClick={this.delete.bind(this, row)}>删除</Button>\n                            </Space>\n                        )\n\n\n                    }\n                }\n            ]\n        ;\n\n\n        return (\n\n            <div>\n\n                <Modal\n                    title=\"咨询方式\"\n                    visible={this.state.visible}\n                    onOk={this.modalOnOk}\n                    onCancel={this.close}\n                >\n                    <Form ref={this.formRef}\n                          labelCol={{span: 6}}\n                          onFinish={this.addOrUpdate}\n\n                    >\n                        <Form.Item name={'manner_type_name'} label={'咨询方式'} rules={[\n                            {\n                                required: true,\n                                message: '咨询方式不能为空!',\n                            },\n                        ]}>\n                            <Input placeholder='请输入咨询方式'></Input>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n\n                <Row>\n                    <Col span={22}>\n                        <h3>咨询方式管理</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data} columns={columns} rowKey=\"manner_type_id\"\n                               pagination={false}/>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport {Row, Col, Button, Table, Space, message, Modal, Divider, Pagination} from \"antd\";\n\nimport Util from \"../../../assets/js/Util\";\n\nimport Role from \"../../../assets/js/Role\";\n\nimport {getCasemanagerList,deleteCasemanager} from \"../../../http/service\";\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n        this.station_id=this.props.location.state.station_id\n        this.station_name=this.props.location.state.station_name\n        this.state={\n            data:{\n                data:[]\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n    back=()=>{\n        this.props.history.goBack()\n    }\n\n    getList=(page)=> {\n\n        page=page||1;\n\n        let pageSize=Util.pageSize\n        pageSize=2;\n\n        getCasemanagerList( {\n            role:Role.caseManager,\n            page,\n            pageSize,\n            station_id:this.station_id\n        }).then((data) => {\n\n            this.setState({\n                data:data\n            })\n\n        }).catch(err => {\n            message.warning(err)\n        })\n    }\n    add=()=> {\n        this.props.history.push({\n            pathname:'/caseManager/operate',\n            state:{\n                station_id:this.station_id\n            }\n        })\n    }\n    edit=(row)=>{\n\n        this.props.history.push({\n            pathname:'/caseManager/operate',\n            state:{\n                opType:'edit',\n                formItem:row,\n                station_id:this.station_id\n            }\n        })\n    }\n    delete=(casemanager_id)=>{\n\n        Util.confirm({\n            title:'您确认删除吗？',\n            onOk:()=>{\n                deleteCasemanager({\n                    casemanager_id,\n                    station_id:this.station_id\n                }).then(()=>{\n                    message.success(\"删除成功\")\n                    this.getList()\n                }).catch(err=>{\n                    message.warning(err)\n                })\n            }\n        })\n\n    }\n\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n            },\n            {\n                title: '手机号',\n                dataIndex: 'phone',\n            },\n            {\n                title: '性别',\n                dataIndex: 'gender',\n                render:(text)=>{\n                    return text==='male'?'男':'女'\n                }\n            },\n            {\n                title: '电子邮箱',\n                dataIndex: 'email',\n            },\n            {\n                title: '出生日期',\n                dataIndex: 'birthday',\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        <Button type={\"primary\"} onClick={this.edit.bind(this,row)}>编辑</Button>\n                        <Button type={\"primary\"} danger onClick={this.delete.bind(this,row.user_id)}>删除</Button>\n                    </Space>\n                ),\n            },\n        ];\n\n        return (\n            <div>\n                <Row>\n                    <Col span={20}>\n                        <h3>{this.station_name} / 案例管理员管理</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"default\"} onClick={this.back}>返回</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"user_id\" pagination={false}/>\n                        {\n                            this.state.data.count > 0\n                                ?\n                                (<Pagination showQuickJumper total={this.state.data.count} pageSize={this.state.data.pageSize} current={this.state.data.currentPage} onChange={this.getList}/>)\n                                :\n                                (null)\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, Space, message, Divider, DatePicker, Card} from \"antd\";\nimport {updateUser, addCasemanager} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport moment from 'moment'\nimport Role from \"../../../assets/js/Role\";\nimport './index.less'\nconst {Option} = Select;\n\nclass Index extends Component {\n\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = this.props.location.state && this.props.location.state.opType === 'edit'\n        this.station_id = this.props.location.state.station_id\n\n\n        this.state = {\n            formItem: this.isEdit?this.props.location.state.formItem:{}\n        }\n\n    }\n\n    componentDidMount() {\n        if(this.isEdit){\n            let formItem=this.state.formItem;\n            formItem.birthday=moment(formItem.birthday)\n            this.formRef.current.setFieldsValue(formItem)\n        }\n    }\n\n    back=()=>{\n        this.props.history.goBack();\n    }\n\n\n\n\n    operate = (form) => {\n\n        form.birthday = Util.getDateFromMoment(form.birthday)\n\n        this.setState({\n            formItem: Object.assign({\n                role:Role.caseManager,\n                station_id:this.station_id\n            },this.state.formItem, form)\n        })\n\n\n        if (!Util.isValidPhone(this.state.formItem.phone)) {\n            Util.warning(\"请输入合法的手机号！\")\n            return;\n        }\n\n        if (!Util.isValidEmail(this.state.formItem.email)) {\n            Util.warning(\"请输入合法的电子邮箱！\")\n            return;\n        }\n\n\n        if(this.isEdit){\n            updateUser(this.state.formItem).then((data) => {\n                Util.success(\"操作成功！\")\n\n                this.back()\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        }else{\n            addCasemanager(this.state.formItem).then((data) => {\n                Util.success(\"操作成功！\")\n\n                this.back()\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n\n\n\n\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>案例管理员操作</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={8} offset={8}>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"horizontal\"\n                            labelCol={{span: 4}}\n                            wrapperCol={{span: 20}}\n                            onFinish={this.operate}\n                        >\n\n                            <Form.Item\n                                label=\"姓名\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '姓名不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入姓名'} maxLength={20}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"手机号\"\n                                name=\"phone\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '手机号不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input key={1} placeholder={'请输入手机号'} maxLength={11}/>\n                            </Form.Item>\n\n                            <Form.Item name=\"gender\" label=\"性别\"\n                                       rules={[{required: true, message: '性别不能为空!'}]}>\n                                <Select\n                                    placeholder=\"请选择性别\"\n                                >\n                                    <Option key={1} value='male'>男</Option>\n                                    <Option key={2} value='female'>女</Option>\n\n                                </Select>\n                            </Form.Item>\n\n\n\n                            <Form.Item\n                                label=\"电子邮箱\"\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '电子邮箱不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入电子邮箱'} maxLength={50}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"出生日期\"\n                                name=\"birthday\"\n                                format=\"YYYY-MM-DD\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '出生日期不能为空!',\n                                    },\n                                ]}\n                            >\n                                <DatePicker/>\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Space>\n                                    <Button style={{width: '6em'}} type=\"default\" onClick={this.back} >\n                                        返回\n                                    </Button>\n                                    <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                        确定\n                                    </Button>\n                                </Space>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport {Row, Col, Button, Table, Space, message, Modal, Divider, Pagination} from \"antd\";\n\nimport Util from \"../../../assets/js/Util\";\n\nimport Role from \"../../../assets/js/Role\";\n\nimport {getUserList,deleteUser} from \"../../../http/service\";\n\nclass Index extends Component {\n\n    constructor() {\n        super();\n        this.state={\n            data:{\n                data:[]\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n    getList=(page)=> {\n\n\n    }\n    detail=(row)=>{\n\n        this.props.history.push({\n            pathname:'/preCheck/operate',\n            state:{\n                opType:'edit',\n                formItem:row\n            }\n        })\n    }\n\n\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n            },\n            {\n                title: '手机号',\n                dataIndex: 'phone',\n            },\n            {\n                title: '性别',\n                dataIndex: 'gender',\n                render:(text)=>{\n                    return text==='male'?'男':'女'\n                }\n            },\n            {\n                title: '答题时间',\n                dataIndex: 'answerDate',\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render:(text)=>{\n                    return text==='0'?'未答题':'已答题'\n                }\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        <Button type={\"primary\"} onClick={this.detail.bind(this,row)}>查看详情</Button>\n                    </Space>\n                ),\n            },\n        ];\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>预检表管理</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"user_id\" pagination={false}/>\n                        {\n                            this.state.data.count > 0\n                                ?\n                                (<Pagination showQuickJumper total={this.state.data.count} pageSize={this.state.data.pageSize} current={this.state.data.currentPage} onChange={this.getList}/>)\n                                :\n                                (null)\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nclass Index extends Component {\n    render() {\n        return (\n            <div>\n                precheck_detail\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport {Row, Col, Button, Table, Space, message, Modal, Divider, Pagination} from \"antd\";\n\nimport Util from \"../../../assets/js/Util\";\n\nimport Role from \"../../../assets/js/Role\";\n\nimport {getStationList,deleteStation} from \"../../../http/service\";\n\nclass Index extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            data: []\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n    getList = (page) => {\n\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n\n        getStationList({\n            role: Role.divisionManager,\n            page,\n            pageSize\n\n        }).then((data) => {\n\n            this.setState({\n                data: data\n            })\n\n        }).catch(err => {\n            message.warning(err)\n        })\n    }\n    add = () => {\n        this.props.history.push('/station/operate')\n    }\n    adminList = (division_id) => {\n\n        this.props.history.push({\n            pathname: '/division/adminList',\n            state: {\n                division_id\n            }\n        })\n    }\n    edit = (row) => {\n\n        this.props.history.push({\n            pathname: '/station/operate',\n            state: {\n                opType: 'edit',\n                formItem: row\n            }\n        })\n    }\n    delete = (station_id) => {\n\n        Util.confirm({\n            title: '您确认删除吗？',\n            onOk: () => {\n                deleteStation({\n                    station_id\n                }).then(()=>{\n                    message.success(\"删除成功\")\n                    this.getList()\n                }).catch(err=>{\n                    message.warning(err)\n                })\n            }\n        })\n\n    }\n\n    go2CaseManagerList = (row) => {\n        this.props.history.push({\n            pathname:'/caseManager/list',\n            state:{\n                station_id:row.station_id,\n                station_name:row.station_name,\n            }\n        })\n    }\n\n    go2TherapistList = (row) => {\n        this.props.history.push({\n            pathname:'/station/relateTherapist',\n            state:{\n                station_id:row.station_id,\n                station_name:row.station_name,\n            }\n        })\n    }\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return index+1;\n                }\n            },\n            {\n                title: '工作室名称',\n                dataIndex: 'station_name',\n            },\n            {\n                title: '地址',\n                dataIndex: 'address',\n            },\n            {\n                title: '联系方式',\n                dataIndex: 'phone',\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        <Button size={\"small\"} type={\"primary\"} onClick={this.edit.bind(this, row)}>编辑</Button>\n                        <Button size={\"small\"} type={\"primary\"} danger\n                                onClick={this.delete.bind(this, row.station_id)}>删除</Button>\n                        <Button size={\"small\"} type={\"primary\"}\n                                onClick={this.go2CaseManagerList.bind(this, row)}>案例管理员</Button>\n                        <Button size={\"small\"} type={\"primary\"}\n                                onClick={this.go2TherapistList.bind(this, row)}>咨询师列表</Button>\n                    </Space>\n                ),\n            },\n        ];\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>工作室管理</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data} columns={columns} rowKey=\"station_id\" pagination={false}/>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, Space, message, Divider, DatePicker, Card} from \"antd\";\nimport {addStation,updateStation} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport moment from 'moment'\nimport Role from \"../../../assets/js/Role\";\nimport './index.less'\nconst {Option} = Select;\n\nclass Index extends Component {\n\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = this.props.location.state && this.props.location.state.opType === 'edit'\n\n\n        this.state = {\n            formItem: this.isEdit?this.props.location.state.formItem:{}\n        }\n\n    }\n\n    componentDidMount() {\n        this.formRef.current.setFieldsValue(this.state.formItem)\n    }\n\n    back=()=>{\n        this.props.history.goBack();\n    }\n\n\n\n\n    operate = (form) => {\n\n        this.setState({\n            formItem: Object.assign(this.state.formItem, form)\n        })\n\n\n        if (!Util.isValidPhone(this.state.formItem.phone)) {\n            Util.warning(\"请输入合法的手机号！\")\n            return;\n        }\n\n\n\n        if(this.isEdit){\n            updateStation(this.state.formItem).then((data) => {\n                Util.success(\"操作成功！\")\n\n                this.back()\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        }else{\n            addStation(this.state.formItem).then((data) => {\n                Util.success(\"操作成功！\")\n\n                this.back()\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n\n\n\n\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>工作室操作</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={8} offset={8}>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"horizontal\"\n                            labelCol={{span: 4}}\n                            wrapperCol={{span: 20}}\n                            onFinish={this.operate}\n                        >\n\n                            <Form.Item\n                                label=\"工作室名称\"\n                                name=\"station_name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '工作室名称不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入工作室名称'} maxLength={20}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"工作室地址\"\n                                name=\"address\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '工作室地址不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input key={1} placeholder={'请输入工作室地址'} maxLength={11}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"手机号\"\n                                name=\"phone\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '手机号不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input key={1} placeholder={'请输入手机号'} maxLength={11}/>\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Space>\n                                    <Button style={{width: '6em'}} type=\"default\" onClick={this.back} >\n                                        返回\n                                    </Button>\n                                    <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                        确定\n                                    </Button>\n                                </Space>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport {Row, Col, Button, Table, Space, message, Modal, Divider, Pagination, Form, Input} from \"antd\";\n\nimport Util from \"../../../../../assets/js/Util\";\n\nimport Role from \"../../../../../assets/js/Role\";\n\nimport { getNotRelatedTherapist, addRelateTherapist} from \"../../../../../http/service\";\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n        this.station_id = this.props.station_id\n        this.state = {\n            data: {\n                data: []\n            },\n            visible: false\n        }\n    }\n\n\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.visible && !prevProps.visible){\n            this.setState({\n                visible:true\n            })\n            this.getNotRelatedTherapist(1)\n        }\n    }\n\n\n    getNotRelatedTherapist = (page) => {\n\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n\n        pageSize = 3\n\n        getNotRelatedTherapist({\n            page,\n            pageSize,\n            station_id:this.station_id\n        }).then((data) => {\n\n            if (data) {\n                this.setState({\n                    data\n                })\n            }\n\n        }).catch(err => {\n            message.warning(err)\n        })\n    }\n\n    close=()=>{\n        this.setState({\n            visible:false\n        })\n        this.props.onClose()\n    }\n\n\n\n    relate = (therapist_id) => {\n        addRelateTherapist({\n            station_id: this.station_id,\n            therapist_id\n        }).then(() => {\n\n            Util.success('已关联！')\n            this.getNotRelatedTherapist();\n\n        }).catch(err => {\n            message.warning(err)\n        })\n\n    }\n\n\n\n    render() {\n\n\n        const allColumns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render: (text, row, index) => {\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n            },\n            {\n                title: '手机号',\n                dataIndex: 'phone',\n            },\n            {\n                title: '性别',\n                dataIndex: 'gender',\n                render: (text) => {\n                    return text === 'male' ? '男' : '女'\n                }\n            },\n            {\n                title: '电子邮箱',\n                dataIndex: 'email',\n            },\n            {\n                title: '出生日期',\n                dataIndex: 'birthday',\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        <Button size={\"small\"} type={\"primary\"}\n                                onClick={this.relate.bind(this, row.user_id)}>关联</Button>\n                    </Space>\n                ),\n            },\n        ];\n\n        return (\n            <div>\n\n                <Modal\n                    width='50vw'\n                    visible={this.state.visible}\n                    title=\"关联咨询师\"\n                    onCancel={()=>{\n                        this.close()\n                    }}\n                    footer={[\n                        <Button key={1} onClick={() => {\n                            this.close()\n                        }}>关闭</Button>\n                    ]}\n                >\n                    <Table dataSource={this.state.data.data} columns={allColumns} rowKey='user_id'\n                           pagination={false}/>\n                    {\n                        this.state.data.count > 0\n                            ?\n                            (<Pagination showQuickJumper total={this.state.data.count}\n                                         pageSize={this.state.data.pageSize}\n                                         current={this.state.data.currentPage}\n                                         onChange={this.getNotRelatedTherapist}/>)\n                            :\n                            (null)\n                    }\n                </Modal>\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport {Row, Col, Button, Table, Space, message, Modal, Divider, Pagination, Form, Input} from \"antd\";\n\nimport Util from \"../../../assets/js/Util\";\n\nimport {getRelateTherapistList, deleteRelateTherapist} from \"../../../http/service\";\n\nimport store from \"../../../store\";\n\nimport Role from \"../../../assets/js/Role\";\n\nimport TherapistList from './components/TherapistList'\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n        this.getStationInfo();\n\n\n\n        this.state = {\n            data: {\n                data: []\n            },\n            visible: false\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n    getStationInfo=()=>{\n        //此菜单分部管理员和案例管理员都有权限；分部的话，工作室id通过参数传递；案例的话，取当前登录案例管理员对应的工作室id\n\n        if(store.getState().role===Role.divisionManager){\n            this.station_id = this.props.location.state.station_id\n            this.station_name = this.props.location.state.station_name\n        }else{\n            this.station_id = store.getState().station_id\n            this.station_name = store.getState().station_name\n        }\n    }\n\n    getList = (page) => {\n\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n\n        getRelateTherapistList({\n            page,\n            pageSize,\n            station_id: this.station_id\n\n        }).then((data) => {\n\n            if (data) {\n                this.setState({\n                    data: data\n                })\n            }\n\n        }).catch(err => {\n            message.warning(err)\n        })\n    }\n    open = () => {\n        this.setState({\n            visible: true\n        })\n    }\n    back = () => {\n\n        this.props.history.goBack()\n    }\n\n    close = () => {\n\n        this.setState({\n            visible: false\n        })\n\n        this.getList()\n    }\n\n    remove = (therapist_id) => {\n\n        Util.confirm({\n            title: '您确认移除吗？',\n            onOk: () => {\n                deleteRelateTherapist({\n                    station_id: this.station_id,\n                    therapist_id\n                }).then(() => {\n                    message.success(\"移除成功\")\n                    this.getList()\n                }).catch(err => {\n                    message.warning(err)\n                })\n            }\n        })\n\n    }\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '姓名',\n                dataIndex: 'name',\n            },\n            {\n                title: '手机号',\n                dataIndex: 'phone',\n            },\n            {\n                title: '性别',\n                dataIndex: 'gender',\n                render: (text) => {\n                    return text === 'male' ? '男' : '女'\n                }\n            },\n            {\n                title: '电子邮箱',\n                dataIndex: 'email',\n            },\n            {\n                title: '出生日期',\n                dataIndex: 'birthday',\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        <Button size={\"small\"} type={\"primary\"} danger\n                                onClick={this.remove.bind(this, row.user_id)}>移除</Button>\n                    </Space>\n                ),\n            },\n        ];\n\n\n        return (\n            <div>\n\n                <TherapistList visible={this.state.visible} station_id={this.station_id} onClose={this.close}/>\n\n\n                <Row>\n                    <Col span={20}>\n                        <h3>{this.station_name} / 咨询师列表</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.open}>添加</Button>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"default\"} onClick={this.back}>返回</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"phone\"\n                               pagination={false}/>\n                        {\n                            this.state.data.count > 0\n                                ?\n                                (<Pagination showQuickJumper total={this.state.data.count}\n                                             pageSize={this.state.data.pageSize} current={this.state.data.currentPage}\n                                             onChange={this.getList}/>)\n                                :\n                                (null)\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","\n\nlet pcz={\n    \"86\": {\n        \"110000\": \"北京市\",\n        \"120000\": \"天津市\",\n        \"130000\": \"河北省\",\n        \"140000\": \"山西省\",\n        \"150000\": \"内蒙古自治区\",\n        \"210000\": \"辽宁省\",\n        \"220000\": \"吉林省\",\n        \"230000\": \"黑龙江省\",\n        \"310000\": \"上海市\",\n        \"320000\": \"江苏省\",\n        \"330000\": \"浙江省\",\n        \"340000\": \"安徽省\",\n        \"350000\": \"福建省\",\n        \"360000\": \"江西省\",\n        \"370000\": \"山东省\",\n        \"410000\": \"河南省\",\n        \"420000\": \"湖北省\",\n        \"430000\": \"湖南省\",\n        \"440000\": \"广东省\",\n        \"450000\": \"广西壮族自治区\",\n        \"460000\": \"海南省\",\n        \"500000\": \"重庆市\",\n        \"510000\": \"四川省\",\n        \"520000\": \"贵州省\",\n        \"530000\": \"云南省\",\n        \"540000\": \"西藏自治区\",\n        \"610000\": \"陕西省\",\n        \"620000\": \"甘肃省\",\n        \"630000\": \"青海省\",\n        \"640000\": \"宁夏回族自治区\",\n        \"650000\": \"新疆维吾尔自治区\",\n        \"710000\": \"台湾省\",\n        \"810000\": \"香港特别行政区\",\n        \"820000\": \"澳门特别行政区\"\n    },\n    \"110000\": {\n        \"110100\": \"北京市\"\n    },\n    \"120000\": {\n        \"120100\": \"天津市\"\n    },\n    \"130000\": {\n        \"130100\": \"石家庄市\",\n        \"130200\": \"唐山市\",\n        \"130300\": \"秦皇岛市\",\n        \"130400\": \"邯郸市\",\n        \"130500\": \"邢台市\",\n        \"130600\": \"保定市\",\n        \"130700\": \"张家口市\",\n        \"130800\": \"承德市\",\n        \"130900\": \"沧州市\",\n        \"131000\": \"廊坊市\",\n        \"131100\": \"衡水市\",\n        \"139001\": \"定州市\",\n        \"139002\": \"辛集市\"\n    },\n    \"140000\": {\n        \"140100\": \"太原市\",\n        \"140200\": \"大同市\",\n        \"140300\": \"阳泉市\",\n        \"140400\": \"长治市\",\n        \"140500\": \"晋城市\",\n        \"140600\": \"朔州市\",\n        \"140700\": \"晋中市\",\n        \"140800\": \"运城市\",\n        \"140900\": \"忻州市\",\n        \"141000\": \"临汾市\",\n        \"141100\": \"吕梁市\"\n    },\n    \"150000\": {\n        \"150100\": \"呼和浩特市\",\n        \"150200\": \"包头市\",\n        \"150300\": \"乌海市\",\n        \"150400\": \"赤峰市\",\n        \"150500\": \"通辽市\",\n        \"150600\": \"鄂尔多斯市\",\n        \"150700\": \"呼伦贝尔市\",\n        \"150800\": \"巴彦淖尔市\",\n        \"150900\": \"乌兰察布市\",\n        \"152200\": \"兴安盟\",\n        \"152500\": \"锡林郭勒盟\",\n        \"152900\": \"阿拉善盟\"\n    },\n    \"210000\": {\n        \"210100\": \"沈阳市\",\n        \"210200\": \"大连市\",\n        \"210300\": \"鞍山市\",\n        \"210400\": \"抚顺市\",\n        \"210500\": \"本溪市\",\n        \"210600\": \"丹东市\",\n        \"210700\": \"锦州市\",\n        \"210800\": \"营口市\",\n        \"210900\": \"阜新市\",\n        \"211000\": \"辽阳市\",\n        \"211100\": \"盘锦市\",\n        \"211200\": \"铁岭市\",\n        \"211300\": \"朝阳市\",\n        \"211400\": \"葫芦岛市\"\n    },\n    \"220000\": {\n        \"220100\": \"长春市\",\n        \"220200\": \"吉林市\",\n        \"220300\": \"四平市\",\n        \"220400\": \"辽源市\",\n        \"220500\": \"通化市\",\n        \"220600\": \"白山市\",\n        \"220700\": \"松原市\",\n        \"220800\": \"白城市\",\n        \"222400\": \"延边朝鲜族自治州\"\n    },\n    \"230000\": {\n        \"230100\": \"哈尔滨市\",\n        \"230200\": \"齐齐哈尔市\",\n        \"230300\": \"鸡西市\",\n        \"230400\": \"鹤岗市\",\n        \"230500\": \"双鸭山市\",\n        \"230600\": \"大庆市\",\n        \"230700\": \"伊春市\",\n        \"230800\": \"佳木斯市\",\n        \"230900\": \"七台河市\",\n        \"231000\": \"牡丹江市\",\n        \"231100\": \"黑河市\",\n        \"231200\": \"绥化市\",\n        \"232700\": \"大兴安岭地区\"\n    },\n    \"310000\": {\n        \"310100\": \"上海市\"\n    },\n    \"320000\": {\n        \"320100\": \"南京市\",\n        \"320200\": \"无锡市\",\n        \"320300\": \"徐州市\",\n        \"320400\": \"常州市\",\n        \"320500\": \"苏州市\",\n        \"320600\": \"南通市\",\n        \"320700\": \"连云港市\",\n        \"320800\": \"淮安市\",\n        \"320900\": \"盐城市\",\n        \"321000\": \"扬州市\",\n        \"321100\": \"镇江市\",\n        \"321200\": \"泰州市\",\n        \"321300\": \"宿迁市\"\n    },\n    \"330000\": {\n        \"330100\": \"杭州市\",\n        \"330200\": \"宁波市\",\n        \"330300\": \"温州市\",\n        \"330400\": \"嘉兴市\",\n        \"330500\": \"湖州市\",\n        \"330600\": \"绍兴市\",\n        \"330700\": \"金华市\",\n        \"330800\": \"衢州市\",\n        \"330900\": \"舟山市\",\n        \"331000\": \"台州市\",\n        \"331100\": \"丽水市\"\n    },\n    \"340000\": {\n        \"340100\": \"合肥市\",\n        \"340200\": \"芜湖市\",\n        \"340300\": \"蚌埠市\",\n        \"340400\": \"淮南市\",\n        \"340500\": \"马鞍山市\",\n        \"340600\": \"淮北市\",\n        \"340700\": \"铜陵市\",\n        \"340800\": \"安庆市\",\n        \"341000\": \"黄山市\",\n        \"341100\": \"滁州市\",\n        \"341200\": \"阜阳市\",\n        \"341300\": \"宿州市\",\n        \"341500\": \"六安市\",\n        \"341600\": \"亳州市\",\n        \"341700\": \"池州市\",\n        \"341800\": \"宣城市\"\n    },\n    \"350000\": {\n        \"350100\": \"福州市\",\n        \"350200\": \"厦门市\",\n        \"350300\": \"莆田市\",\n        \"350400\": \"三明市\",\n        \"350500\": \"泉州市\",\n        \"350600\": \"漳州市\",\n        \"350700\": \"南平市\",\n        \"350800\": \"龙岩市\",\n        \"350900\": \"宁德市\"\n    },\n    \"360000\": {\n        \"360100\": \"南昌市\",\n        \"360200\": \"景德镇市\",\n        \"360300\": \"萍乡市\",\n        \"360400\": \"九江市\",\n        \"360500\": \"新余市\",\n        \"360600\": \"鹰潭市\",\n        \"360700\": \"赣州市\",\n        \"360800\": \"吉安市\",\n        \"360900\": \"宜春市\",\n        \"361000\": \"抚州市\",\n        \"361100\": \"上饶市\"\n    },\n    \"370000\": {\n        \"370100\": \"济南市\",\n        \"370200\": \"青岛市\",\n        \"370300\": \"淄博市\",\n        \"370400\": \"枣庄市\",\n        \"370500\": \"东营市\",\n        \"370600\": \"烟台市\",\n        \"370700\": \"潍坊市\",\n        \"370800\": \"济宁市\",\n        \"370900\": \"泰安市\",\n        \"371000\": \"威海市\",\n        \"371100\": \"日照市\",\n        \"371200\": \"莱芜市\",\n        \"371300\": \"临沂市\",\n        \"371400\": \"德州市\",\n        \"371500\": \"聊城市\",\n        \"371600\": \"滨州市\",\n        \"371700\": \"菏泽市\"\n    },\n    \"410000\": {\n        \"410100\": \"郑州市\",\n        \"410200\": \"开封市\",\n        \"410300\": \"洛阳市\",\n        \"410400\": \"平顶山市\",\n        \"410500\": \"安阳市\",\n        \"410600\": \"鹤壁市\",\n        \"410700\": \"新乡市\",\n        \"410800\": \"焦作市\",\n        \"410900\": \"濮阳市\",\n        \"411000\": \"许昌市\",\n        \"411100\": \"漯河市\",\n        \"411200\": \"三门峡市\",\n        \"411300\": \"南阳市\",\n        \"411400\": \"商丘市\",\n        \"411500\": \"信阳市\",\n        \"411600\": \"周口市\",\n        \"411700\": \"驻马店市\",\n        \"419001\": \"济源市\"\n    },\n    \"420000\": {\n        \"420100\": \"武汉市\",\n        \"420200\": \"黄石市\",\n        \"420300\": \"十堰市\",\n        \"420500\": \"宜昌市\",\n        \"420600\": \"襄阳市\",\n        \"420700\": \"鄂州市\",\n        \"420800\": \"荆门市\",\n        \"420900\": \"孝感市\",\n        \"421000\": \"荆州市\",\n        \"421100\": \"黄冈市\",\n        \"421200\": \"咸宁市\",\n        \"421300\": \"随州市\",\n        \"422800\": \"恩施土家族苗族自治州\",\n        \"429004\": \"仙桃市\",\n        \"429005\": \"潜江市\",\n        \"429006\": \"天门市\",\n        \"429021\": \"神农架林区\"\n    },\n    \"430000\": {\n        \"430100\": \"长沙市\",\n        \"430200\": \"株洲市\",\n        \"430300\": \"湘潭市\",\n        \"430400\": \"衡阳市\",\n        \"430500\": \"邵阳市\",\n        \"430600\": \"岳阳市\",\n        \"430700\": \"常德市\",\n        \"430800\": \"张家界市\",\n        \"430900\": \"益阳市\",\n        \"431000\": \"郴州市\",\n        \"431100\": \"永州市\",\n        \"431200\": \"怀化市\",\n        \"431300\": \"娄底市\",\n        \"433100\": \"湘西土家族苗族自治州\"\n    },\n    \"440000\": {\n        \"440100\": \"广州市\",\n        \"440200\": \"韶关市\",\n        \"440300\": \"深圳市\",\n        \"440400\": \"珠海市\",\n        \"440500\": \"汕头市\",\n        \"440600\": \"佛山市\",\n        \"440700\": \"江门市\",\n        \"440800\": \"湛江市\",\n        \"440900\": \"茂名市\",\n        \"441200\": \"肇庆市\",\n        \"441300\": \"惠州市\",\n        \"441400\": \"梅州市\",\n        \"441500\": \"汕尾市\",\n        \"441600\": \"河源市\",\n        \"441700\": \"阳江市\",\n        \"441800\": \"清远市\",\n        \"441900\": \"东莞市\",\n        \"442000\": \"中山市\",\n        \"445100\": \"潮州市\",\n        \"445200\": \"揭阳市\",\n        \"445300\": \"云浮市\"\n    },\n    \"450000\": {\n        \"450100\": \"南宁市\",\n        \"450200\": \"柳州市\",\n        \"450300\": \"桂林市\",\n        \"450400\": \"梧州市\",\n        \"450500\": \"北海市\",\n        \"450600\": \"防城港市\",\n        \"450700\": \"钦州市\",\n        \"450800\": \"贵港市\",\n        \"450900\": \"玉林市\",\n        \"451000\": \"百色市\",\n        \"451100\": \"贺州市\",\n        \"451200\": \"河池市\",\n        \"451300\": \"来宾市\",\n        \"451400\": \"崇左市\"\n    },\n    \"460000\": {\n        \"460100\": \"海口市\",\n        \"460200\": \"三亚市\",\n        \"460300\": \"三沙市\",\n        \"460400\": \"儋州市\",\n        \"469001\": \"五指山市\",\n        \"469002\": \"琼海市\",\n        \"469005\": \"文昌市\",\n        \"469006\": \"万宁市\",\n        \"469007\": \"东方市\",\n        \"469021\": \"定安县\",\n        \"469022\": \"屯昌县\",\n        \"469023\": \"澄迈县\",\n        \"469024\": \"临高县\",\n        \"469025\": \"白沙黎族自治县\",\n        \"469026\": \"昌江黎族自治县\",\n        \"469027\": \"乐东黎族自治县\",\n        \"469028\": \"陵水黎族自治县\",\n        \"469029\": \"保亭黎族苗族自治县\",\n        \"469030\": \"琼中黎族苗族自治县\"\n    },\n    \"500000\": {\n        \"500100\": \"重庆市\",\n    },\n    \"510000\": {\n        \"510100\": \"成都市\",\n        \"510300\": \"自贡市\",\n        \"510400\": \"攀枝花市\",\n        \"510500\": \"泸州市\",\n        \"510600\": \"德阳市\",\n        \"510700\": \"绵阳市\",\n        \"510800\": \"广元市\",\n        \"510900\": \"遂宁市\",\n        \"511000\": \"内江市\",\n        \"511100\": \"乐山市\",\n        \"511300\": \"南充市\",\n        \"511400\": \"眉山市\",\n        \"511500\": \"宜宾市\",\n        \"511600\": \"广安市\",\n        \"511700\": \"达州市\",\n        \"511800\": \"雅安市\",\n        \"511900\": \"巴中市\",\n        \"512000\": \"资阳市\",\n        \"513200\": \"阿坝藏族羌族自治州\",\n        \"513300\": \"甘孜藏族自治州\",\n        \"513400\": \"凉山彝族自治州\"\n    },\n    \"520000\": {\n        \"520100\": \"贵阳市\",\n        \"520200\": \"六盘水市\",\n        \"520300\": \"遵义市\",\n        \"520400\": \"安顺市\",\n        \"520500\": \"毕节市\",\n        \"520600\": \"铜仁市\",\n        \"522300\": \"黔西南布依族苗族自治州\",\n        \"522600\": \"黔东南苗族侗族自治州\",\n        \"522700\": \"黔南布依族苗族自治州\"\n    },\n    \"530000\": {\n        \"530100\": \"昆明市\",\n        \"530300\": \"曲靖市\",\n        \"530400\": \"玉溪市\",\n        \"530500\": \"保山市\",\n        \"530600\": \"昭通市\",\n        \"530700\": \"丽江市\",\n        \"530800\": \"普洱市\",\n        \"530900\": \"临沧市\",\n        \"532300\": \"楚雄彝族自治州\",\n        \"532500\": \"红河哈尼族彝族自治州\",\n        \"532600\": \"文山壮族苗族自治州\",\n        \"532800\": \"西双版纳傣族自治州\",\n        \"532900\": \"大理白族自治州\",\n        \"533100\": \"德宏傣族景颇族自治州\",\n        \"533300\": \"怒江傈僳族自治州\",\n        \"533400\": \"迪庆藏族自治州\"\n    },\n    \"540000\": {\n        \"540100\": \"拉萨市\",\n        \"540200\": \"日喀则市\",\n        \"540300\": \"昌都市\",\n        \"540400\": \"林芝市\",\n        \"540500\": \"山南市\",\n        \"542400\": \"那曲地区\",\n        \"542500\": \"阿里地区\"\n    },\n    \"610000\": {\n        \"610100\": \"西安市\",\n        \"610200\": \"铜川市\",\n        \"610300\": \"宝鸡市\",\n        \"610400\": \"咸阳市\",\n        \"610500\": \"渭南市\",\n        \"610600\": \"延安市\",\n        \"610700\": \"汉中市\",\n        \"610800\": \"榆林市\",\n        \"610900\": \"安康市\",\n        \"611000\": \"商洛市\"\n    },\n    \"620000\": {\n        \"620100\": \"兰州市\",\n        \"620200\": \"嘉峪关市\",\n        \"620300\": \"金昌市\",\n        \"620400\": \"白银市\",\n        \"620500\": \"天水市\",\n        \"620600\": \"武威市\",\n        \"620700\": \"张掖市\",\n        \"620800\": \"平凉市\",\n        \"620900\": \"酒泉市\",\n        \"621000\": \"庆阳市\",\n        \"621100\": \"定西市\",\n        \"621200\": \"陇南市\",\n        \"622900\": \"临夏回族自治州\",\n        \"623000\": \"甘南藏族自治州\"\n    },\n    \"630000\": {\n        \"630100\": \"西宁市\",\n        \"630200\": \"海东市\",\n        \"632200\": \"海北藏族自治州\",\n        \"632300\": \"黄南藏族自治州\",\n        \"632500\": \"海南藏族自治州\",\n        \"632600\": \"果洛藏族自治州\",\n        \"632700\": \"玉树藏族自治州\",\n        \"632800\": \"海西蒙古族藏族自治州\"\n    },\n    \"640000\": {\n        \"640100\": \"银川市\",\n        \"640200\": \"石嘴山市\",\n        \"640300\": \"吴忠市\",\n        \"640400\": \"固原市\",\n        \"640500\": \"中卫市\"\n    },\n    \"650000\": {\n        \"650100\": \"乌鲁木齐市\",\n        \"650200\": \"克拉玛依市\",\n        \"650400\": \"吐鲁番市\",\n        \"650500\": \"哈密市\",\n        \"652300\": \"昌吉回族自治州\",\n        \"652700\": \"博尔塔拉蒙古自治州\",\n        \"652800\": \"巴音郭楞蒙古自治州\",\n        \"652900\": \"阿克苏地区\",\n        \"653000\": \"克孜勒苏柯尔克孜自治州\",\n        \"653100\": \"喀什地区\",\n        \"653200\": \"和田地区\",\n        \"654000\": \"伊犁哈萨克自治州\",\n        \"654200\": \"塔城地区\",\n        \"654300\": \"阿勒泰地区\",\n        \"659001\": \"石河子市\",\n        \"659002\": \"阿拉尔市\",\n        \"659003\": \"图木舒克市\",\n        \"659004\": \"五家渠市\",\n        \"659006\": \"铁门关市\"\n    },\n\n}\n\nfunction getOptions(){\n    let options=[]\n\n    let province=pcz['86'];\n\n    for(let key in province){\n        options.push({\n            value:key,\n            label:province[key],\n            children:[]\n        })\n\n        let city=pcz[key]\n        for(let key in city){\n            options[options.length-1].children.push({\n                value:key,\n                label:city[key]\n            })\n        }\n\n    }\n    return options;\n}\n\nlet pczOptions=getOptions();\n\n\n\nexport {pczOptions}","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, Space, message, Divider, DatePicker, Card,Cascader} from \"antd\";\nimport {\n    addAppointSet,\n    updateAppointSet,\n    getAppointSet,\n    getQualificationTypeList,\n    getLevelTypeList,\n    getMannerTypeList,\n    getSchoolTypeList\n} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport store from \"../../../store\";\nimport './index.less'\nimport {pczOptions} from \"../../../assets/js/pcz\";\n\nconst {Option} = Select;\n\nclass Index extends Component {\n\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n\n        this.therapist_id=store.getState().user_id\n\n        this.state = {\n            formItem: {},\n            qualificationTypeList: [],\n            LevelTypeList: [],\n            MannerTypeList: [],\n            SchoolTypeList: [],\n        }\n\n    }\n\n    componentDidMount() {\n        this.getBaseInfo()\n\n\n        this.getAppointSet()\n    }\n\n    getBaseInfo = () => {\n        getQualificationTypeList().then(data => {\n            this.setState({\n                qualificationTypeList: data\n            })\n        })\n\n        getLevelTypeList().then(data => {\n            this.setState({\n                LevelTypeList: data\n            })\n        })\n\n        getMannerTypeList().then(data => {\n            this.setState({\n                MannerTypeList: data\n            })\n        })\n\n        getSchoolTypeList().then(data => {\n            this.setState({\n                SchoolTypeList: data\n            })\n        })\n\n\n    }\n\n\n    getAppointSet = () => {\n        getAppointSet({\n            therapist_id: this.therapist_id\n        }).then((data) => {\n\n            if (data) {\n\n                this.setState({\n                    formItem: data\n                })\n                this.formRef.current.setFieldsValue(data)\n            }\n\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n    operate = (form) => {\n\n\n        this.setState({\n            formItem: Object.assign({therapist_id: this.therapist_id}, this.state.formItem, form)\n        })\n\n        if (this.state.formItem.therapist_attach_relation_id) {\n            updateAppointSet(this.state.formItem).then((data) => {\n                Util.success(\"操作成功！\")\n\n                this.getBaseInfo()\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        } else {\n            addAppointSet(this.state.formItem).then((data) => {\n                Util.success(\"操作成功！\")\n\n                this.getBaseInfo()\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n    }\n\n    render() {\n\n        function onChange(value) {\n            console.log(value);\n        }\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>预约设置</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={8} offset={8}>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"horizontal\"\n                            labelCol={{span: 4}}\n                            wrapperCol={{span: 20}}\n                            onFinish={this.operate}\n                        >\n\n\n                            <Form.Item name=\"school_type_id\" label=\"流派\" rules={[{required: true, message: '流派不能为空!'}]}>\n                                <Select placeholder=\"请选择流派\">\n                                    {\n                                        this.state.SchoolTypeList.map((item, index) => {\n                                            return <Option key={index}\n                                                           value={item.school_type_id}>{item.school_type_name}</Option>\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item name=\"qualification_type_id\" label=\"资历\"\n                                       rules={[{required: true, message: '资历不能为空!'}]}>\n                                <Select placeholder=\"请选择资历\">\n                                    {\n                                        this.state.qualificationTypeList.map((item, index) => {\n                                            return <Option key={index}\n                                                           value={item.qualification_type_id}>{item.qualification_type_name}</Option>\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item name=\"manner_type_id\" label=\"咨询方式\"\n                                       rules={[{required: true, message: '咨询方式不能为空!'}]}>\n                                <Select placeholder=\"请选择咨询方式\">\n                                    {\n                                        this.state.MannerTypeList.map((item, index) => {\n                                            return <Option key={index}\n                                                           value={item.manner_type_id}>{item.manner_type_name}</Option>\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item name=\"level_type_id\" label=\"等级\" rules={[{required: true, message: '等级不能为空!'}]}>\n                                <Select placeholder=\"请选择等级\">\n                                    {\n                                        this.state.LevelTypeList.map((item, index) => {\n                                            return <Option key={index}\n                                                           value={item.level_type_id}>{item.level_type_name}</Option>\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item name=\"emergency\" label=\"紧急咨询\" rules={[{required: true, message: '紧急咨询不能为空!'}]}>\n                                <Select placeholder=\"请选择紧急咨询\">\n                                    <Option key={1} value={0}>不接受</Option>\n                                    <Option key={2} value={1}>接受</Option>\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item name=\"area\" label=\"咨询区域\" rules={[{required: true, message: '紧急咨询不能为空!'}]}>\n                                <Cascader options={pczOptions} onChange={onChange} placeholder=\"请选择区域\" />\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                    确定\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, InputNumber, message, Divider, DatePicker, Card} from \"antd\";\nimport {\n    addFeeSet,\n    updateFeeSet,\n    getFeeSet,\n} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport store from \"../../../store\";\nimport {FEE_TYPE_LIST} from '../../../assets/js/constants/constant'\n\nconst {Option} = Select;\n\nclass Index extends Component {\n\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.therapist_id=store.getState().user_id\n\n        this.state = {\n            formItem: {},\n        }\n\n    }\n\n    componentDidMount() {\n        this.getFeeSet()\n\n\n    }\n\n\n\n    getFeeSet = () => {\n        getFeeSet({\n            therapist_id: this.therapist_id\n        }).then((data) => {\n\n            if (data) {\n                this.setState({\n                    formItem: data\n                })\n                this.formRef.current.setFieldsValue(data)\n            }\n\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n    operate = (form) => {\n\n        this.setState({\n            formItem: Object.assign({therapist_id: this.therapist_id}, this.state.formItem, form)\n        })\n\n        if (this.state.formItem.therapist_fee_set_id) {\n            updateFeeSet(this.state.formItem).then((data) => {\n                Util.success(\"操作成功！\")\n\n                this.getFeeSet()\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        } else {\n            addFeeSet(this.state.formItem).then((data) => {\n                Util.success(\"操作成功！\")\n\n                this.getFeeSet()\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>咨询师收费设置</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={8} offset={8}>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"horizontal\"\n                            labelCol={{span: 8}}\n                            wrapperCol={{span: 16}}\n                            onFinish={this.operate}\n                        >\n\n\n                            <Form.Item name=\"fee\" label=\"每个时段费用（元）\"\n                                       rules={[{required: true, message: '费用不能为空!'}]}>\n                                <InputNumber style={{width:'100%'}} min={0} max={9999} precision={2} placeholder={'请输入费用'}/>\n                            </Form.Item>\n\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n                                <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                    确定\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","/**\n * 订单状态描述\n * @type {{\"0\": string, \"1\": string, \"2\": string, \"3\": string, \"4\": string}}\n */\nlet ORDER_STATE_DESC = {\n    0: '已下单',      //\n    1: '已支付',       //\n    2: '已退款',    //\n    3: '已过期',    //\n    4: '已取消',     //\n    5: '已完结',     //\n    6: '退款中',     //\n    7: '支付中',     //\n\n\n};\n\n\n\nexport default ORDER_STATE_DESC\n","/**\n * 订单状态\n * 最终状态：已退款、已过期、已完结、已取消\n * @type {{PAYED: number, UNFUNDED: number, DONE: number, COMMIT: number, EXPIRED: number}}\n */\nlet ORDER_STATE = {\n    COMMIT: 0,      //已下单\n    PAYED: 1,       //已支付\n    UNFUNDED: 2,    //已退款\n    EXPIRED: 3,     //已过期\n    CANCELED: 4,     //已取消\n    DONE: 5,     //已完结\n    REFUNDING: 6,     //退款中\n    PAYING: 7,     //支付中\n};\n\n\n\nexport default ORDER_STATE\n","import React, {Component} from 'react';\n\nimport Util from \"../../../assets/js/Util\";\nimport Role from \"../../../assets/js/Role\";\n\nimport {getDoneOrderListByTherapistId, getRevenueSumByTherapistId} from \"../../../http/service\";\nimport {Statistic, Col, Row, Divider, Table, Space, Pagination, Form, Input, Modal} from \"antd\";\nimport store from \"../../../store\";\nimport ORDER_STATE_DESC from \"../../../assets/js/constants/ORDER_STATE_DESC\";\nimport ORDER_STATE from \"../../../assets/js/constants/ORDER_STATE\";\n\n\nclass Index extends Component {\n    modalRef = React.createRef();\n    constructor(props) {\n\n        super(props);\n\n        this.therapist_id=store.getState().user_id;\n        this.currentRow={}\n\n        this.state={\n            visible: false,\n            data:{\n                data:[]\n            },\n            revenue:{}\n        }\n    }\n\n    componentDidMount() {\n        this.getRevenueSum();\n        this.getList(1)\n    }\n\n\n    /**\n     * 汇总类收益\n     */\n    getRevenueSum=()=>{\n        getRevenueSumByTherapistId({\n            therapist_id:this.therapist_id,\n\n        }).then((data) => {\n\n            this.setState({\n                revenue:data\n            })\n\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n    getList = (page) => {\n\n\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n\n        getDoneOrderListByTherapistId({\n            therapist_id:this.therapist_id,\n            page,\n            pageSize\n\n        }).then((data) => {\n\n            this.setState({\n                data:data\n            })\n\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '客户姓名',\n                dataIndex: 'name',\n            },\n            {\n                title: '客户手机号',\n                dataIndex: 'phone',\n            },\n            {\n                title: '订单日期',\n                dataIndex: 'order_date',\n                render:(text)=>{\n                    return text?(text.split(' ')[0]):text;\n                }\n            },\n            {\n                title: '订单时段',\n                dataIndex: 'period',\n                render:(text)=>{\n                    return Util.getAppointmentPeriodStr(text)\n                }\n            },\n            {\n                title: '订单金额',\n                dataIndex: 'amount',\n            },\n            {\n                title: '订单状态',\n                dataIndex: 'state',\n                render:(text)=>{\n                    return ORDER_STATE_DESC[text]\n                }\n            },\n\n        ];\n\n        return (\n            <div>\n                <Row>\n                    <Col span={20}>\n                        <h3>我的收益</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row >\n                    <Col span={8}>\n                        <Statistic title=\"总收益\" value={this.state.revenue.allAmount} />\n                    </Col>\n                    <Col span={8}>\n                        <Statistic title=\"本月收益\" value={this.state.revenue.monthAmount} />\n                    </Col>\n                    <Col span={8}>\n                        <Statistic title=\"本周收益\" value={this.state.revenue.weekAmount} />\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"user_id\" pagination={false} />\n                        {\n                            this.state.data.data.length>0?\n                                <Pagination showQuickJumper total={this.state.data.count} onChange={this.getList} />\n                                :null\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, InputNumber, Checkbox, Divider, DatePicker, Card} from \"antd\";\nimport {\n    getTherapistPeriodSet,\n    updateTherapistPeriodSet,\n} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport store from \"../../../store\";\n\nclass Index extends Component {\n\n    formRef = React.createRef();\n\n\n\n    constructor(props) {\n        super(props);\n\n        this.options =this.getOptions()\n\n        this.therapist_id=store.getState().user_id\n\n        this.state = {\n            formItem: {},\n        }\n\n    }\n\n    componentDidMount() {\n        this.getUseablePeriodSet()\n\n    }\n\n    getOptions=()=>{\n        let array=[]\n        for(let i=0;i<24;i++){\n            array.push({\n                label:`${i}:00-${i}:50`,\n                value:String(i)\n            })\n        }\n        return array;\n    }\n\n\n\n    getUseablePeriodSet = () => {\n        getTherapistPeriodSet({\n            therapist_id: this.therapist_id\n        }).then((data) => {\n\n            let period=data.period.split(',')\n            this.formRef.current.setFieldsValue({\n                period\n            })\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n    updateTherapistPeriodSet = (form) => {\n\n        let period=form.period?form.period.join(','):''\n\n        updateTherapistPeriodSet({\n            period,\n            therapist_id:this.therapist_id\n        }).then((data) => {\n            Util.success(\"操作成功！\")\n\n            this.getUseablePeriodSet()\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>咨询师可用时段设置</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={18}  >\n                        <Form\n                            ref={this.formRef}\n                            layout=\"vertical\"\n                            onFinish={this.updateTherapistPeriodSet}\n                        >\n\n\n\n                            <Form.Item name=\"period\" label=\"请设置可用时段\">\n                                <Checkbox.Group>\n                                    <Row>\n                                        {\n                                            this.options.map((item,index)=>{\n                                                return (\n                                                    <Col span={4} key={index}>\n                                                        <Checkbox value={item.value} style={{marginBottom:'.5em'}}>{item.label}</Checkbox>\n                                                    </Col>\n                                                )\n                                            })\n                                        }\n                                    </Row>\n                                </Checkbox.Group>\n                            </Form.Item>\n\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n                                <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                    确定\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","let DateUtil = {\n    // format(dateStr,formatStr){\n    //     let date=Date.parse(dateStr);\n    //\n    //\n    //\n    //     return null;\n    // },\n\n    /**\n     * 格式化日期\n     * @param date\n     * @param type\n     */\n    format(date, type = 'date') {\n\n        let year = date.getFullYear();\n\n        let month = date.getMonth() + 1;\n\n        if (month < 10) {\n            month = '0' + month;\n        }\n\n\n\n        let day = date.getDate()\n\n        if (day < 10) {\n            day = '0' + day;\n        }\n\n\n        if (type === 'time') {\n\n        } else if (type === 'datetime') {\n\n        } else {\n            return year + '-' + month + '-' + day;\n        }\n    },\n\n    /**\n     * 第一个日期参数是否早于第二个日期(毫秒数)\n     * @param date1\n     * @param date2\n     * @returns {boolean}\n     */\n    isBefore(date1, date2) {\n        return date1.getTime() < date2.getTime()\n    },\n    /**\n     * 获取给定日期是周几\n     * @param date\n     * @returns {number}\n     */\n    getWeekOfDate(date){\n        if(typeof date==='string'){\n            date=new Date(date);\n        }\n        return date.getDay();\n    }\n\n\n}\n\nexport default DateUtil;\n","import React, {Component} from 'react';\n\nimport {Row, Col, Button, Table, Space, message, Modal, Divider, Pagination, Form, DatePicker} from \"antd\";\n\nimport Util from \"../../../assets/js/Util\";\n\nimport Role from \"../../../assets/js/Role\";\nimport DateUtil from \"../../../assets/js/DateUtil\";\nimport store from \"../../../store\";\nimport {  getTherapistPeriodSet, getAppointmentsOfUsingByTherapistId} from \"../../../http/service\";\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.therapist_id = store.getState().user_id;\n        this.state = {\n            dataSource: [],\n            columns: []\n        }\n    }\n\n    componentDidMount() {\n        this.getTherapistPeriodSet();\n    }\n\n    /**\n     * 给定月份的给定天的具体某个时段是否在不可用列表\n     * */\n    isPeriodInList = (period, day, dataList) => {\n        let flag = null;\n        for (let i = 0; i < dataList.length; i++) {\n            if (dataList[i].day === day && period === Number(dataList[i].period)) {\n\n                flag = dataList[i];\n                break;\n            }\n        }\n\n        return flag;\n    }\n\n    isSameDay = (date1, date2) => {\n        return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n    }\n\n    isSameDayOfWeek = (date1, date2) => {\n        return date1.getDay() === date2.getDay()\n    }\n    loadData = () => {\n\n        this.dataList = []\n\n        let notUseableList = []\n\n        getAppointmentsOfUsingByTherapistId({\n            therapist_id: this.therapist_id,\n        }).then((data) => {\n\n            notUseableList = data;\n            let days = Util.getDaysOfMonth(this.year, this.month);\n\n            let nowDate = new Date();\n\n            for (let i = 1; i <= days; i++) {\n\n                let d = new Date(this.date.getTime());\n\n\n                d.setDate(i)\n\n                let obj = {\n                    date: d\n                }\n\n                for (let num = 0; num <= 23; num++) {\n\n                    if (d.getTime() < nowDate.getTime()) {//早于当前日期的不统计\n                        obj['period' + num] = -1\n                    } else {\n                        for (let i = 0; i < notUseableList.length; i++) {\n                            let appointment = notUseableList[i];\n                            if (appointment.ismulti === 0) {//单次预约\n                                let isSame = this.isSameDay(new Date(appointment.appoint_date), d)\n                                if (isSame && appointment.period.includes(String(num))) {\n                                    obj['period' + num] = 1;\n                                    break;\n                                }\n                            } else {\n\n                                if (new Date(appointment.appoint_date).getTime() < d.getTime() && this.isSameDayOfWeek(new Date(appointment.appoint_date), d) && appointment.period.includes(String(num))) {\n                                    obj['period' + num] = 1;\n                                    break;\n                                }\n                            }\n                        }\n                        if (!obj['period' + num]) {\n                            obj['period' + num] = 0;\n                        }\n\n\n                    }\n\n\n                }\n\n                this.dataList.push(obj);\n\n            }\n\n            this.setState({\n                dataSource: this.dataList\n            })\n\n\n        }).catch(err => {\n            Util.error(err)\n        })\n\n    }\n\n    getTherapistPeriodSet = () => {\n\n        getTherapistPeriodSet({\n            therapist_id:this.therapist_id\n        }).then((data) => {\n\n            this.period = data.period.split(',')\n            this.period.sort((val1, val2) => {\n                return Number(val1) - Number(val2)\n            });\n            this.getColumns()\n        }).catch(err => {\n            Util.error(err)\n        })\n\n    }\n\n    getColumns = () => {\n\n        let hourArray = []\n\n        this.period.forEach((item) => {\n            hourArray.push({\n                title: `${item}:00-${item}:50`,\n                key: `period${item}`,\n            })\n        })\n\n        let optionArray = [];\n\n        hourArray.forEach((hourObj, index, array) => {\n            optionArray.push({\n                title: hourObj.title,\n                dataIndex: hourObj.key,\n                render: (text, row, c) => {\n\n                    //占用率只看当天之后的日期\n\n\n                    let occupyData = row[hourObj.key];\n\n                    if (occupyData === -1) {//已过期\n\n                        return null;\n\n                    } else if (occupyData === 1) {//占用中或不可用\n\n                        return <Button size={\"small\"} type={\"primary\"}>占用中</Button>\n\n                    } else {//空闲中\n                        return <span>空闲中</span>\n                    }\n\n                }\n            })\n        })\n\n\n        let columns = [\n            {\n                title: '日期',\n                dataIndex: 'date',\n                render: (text, row) => {\n                    return <div>{DateUtil.format(row.date)} ({this.getWeekTextByDate(row.date)})</div>\n                }\n            }\n\n        ]\n\n\n        columns = columns.concat(optionArray)\n\n\n        this.columns = columns;\n\n        this.setState({\n            columns\n        })\n\n    }\n\n    getWeekTextByDate = (date) => {\n        let day = date.getDay();\n        return ['周日', '周一', '周二', '周三', '周四', '周五', '周六'][day]\n    }\n\n    query = (form) => {\n        let queryDate = form.queryDate\n\n        if (!queryDate) {\n            Util.warning(\"请选择月份！\")\n        } else {\n            queryDate = new Date(Util.getDateFromMoment(queryDate))\n            this.date = queryDate\n            this.year = queryDate.getFullYear();\n            this.month = queryDate.getMonth();\n\n            this.loadData()\n\n        }\n    }\n\n    back = () => {\n        this.props.history.goBack()\n    }\n\n    /**\n     * 只能选择当前月份和之后月份\n     * @param current\n     * @returns {boolean|boolean}\n     */\n    disabledDate = (current) => {\n        let date = Util.getRealDateFromMoment(current)\n        return date.getFullYear() < new Date().getFullYear() || (date.getFullYear() === new Date().getFullYear() && date.getMonth() < new Date().getMonth());\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={20}>\n                        <h3>时间使用率</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"inline\"\n                            labelCol={{span: 10}}\n                            wrapperCol={{span: 14}}\n                            onFinish={this.query}\n                        >\n\n                            <Form.Item\n                                label=\"月份\"\n                                name=\"queryDate\"\n                                format=\"YYYY-MM-DD\"\n                            >\n                                <DatePicker disabledDate={this.disabledDate} style={{width: '10em'}} picker={'month'}/>\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n                                <Space>\n                                    <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                        查询\n                                    </Button>\n                                    <Button style={{width: '6em'}} type=\"default\" onClick={this.back}>\n                                        返回\n                                    </Button>\n                                </Space>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={24}>\n                        <Table dataSource={this.state.dataSource} columns={this.state.columns} rowKey=\"date\"\n                               pagination={false}/>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, DatePicker, Divider, Form, Input, Pagination, Row, Modal, Space, Table} from \"antd\";\nimport Util from \"../../../assets/js/Util\";\nimport {getTherapistComplaintsByTId} from \"../../../http/service\";\nimport COMPLAINT_STATE from \"../../../assets/js/constants/COMPLAINT_STATE\";\nimport store from \"../../../store\";\n\nclass Index extends Component {\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.therapist_id=store.getState().user_id;\n\n        this.state = {\n            data: {\n                data:[]\n            },\n            visible: false,\n            reportContent: '',\n            form: {},\n\n        }\n    }\n\n    componentDidMount() {\n        this.getList()\n    }\n\n\n    getList = () => {\n        getTherapistComplaintsByTId(\n            {\n                therapist_id:this.therapist_id\n            }\n        ).then(data => {\n            this.setState({\n                data: data,\n            })\n        }).catch(err => {\n            Util.error(err)\n        })\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n                {\n                    title: '序号',\n                    dataIndex: 'index',\n                    render:(text,row,index)=>{\n                        return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                    }\n                },\n                {\n                    title: '用户姓名',\n                    dataIndex: 'name',\n                },\n                {\n                    title: '用户手机号',\n                    dataIndex: 'phone',\n                },\n                {\n                    title: '投诉时间',\n                    dataIndex: 'complaint_date',\n                },\n                {\n                    title: '投诉内容',\n                    dataIndex: 'content',\n                },\n                {\n                    title: '状态',\n                    dataIndex: 'state',\n                    render: (text) => {\n                        return text === COMPLAINT_STATE.UNHANDLED ? '未处理' : text === COMPLAINT_STATE.REJECTED ? '已驳回' : '已添加黑名单'\n                    }\n                },\n            ]\n        ;\n\n\n        return (\n\n            <div>\n\n                <Row>\n                    <Col span={22}>\n                        <h3>我的投诉列表</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"complaint_id\" pagination={false}/>\n                        {\n                            this.state.data.data.length>0?\n                                <Pagination showQuickJumper total={this.state.data.count} onChange={this.getList} />\n                                :null\n                        }\n                    </Col>\n                </Row>\n            </div>\n        )\n            ;\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport Util from \"../../../assets/js/Util\";\nimport Role from \"../../../assets/js/Role\";\n\nimport {getOrderListByTherapistId, addComplaint} from \"../../../http/service\";\nimport {Button, Col, Row, Divider, Table, Space, Pagination, Form, Input, Modal} from \"antd\";\nimport store from \"../../../store\";\nimport ORDER_STATE_DESC from \"../../../assets/js/constants/ORDER_STATE_DESC\";\nimport ORDER_STATE from \"../../../assets/js/constants/ORDER_STATE\";\n\n\nclass Index extends Component {\n    modalRef = React.createRef();\n    constructor(props) {\n\n        super(props);\n\n        this.therapist_id=store.getState().user_id;\n        this.currentRow={}\n\n        this.state={\n            visible: false,\n            data:{\n                data:[]\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n\n    getList = (page) => {\n\n\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n\n        getOrderListByTherapistId({\n            therapist_id:this.therapist_id,\n            page,\n            pageSize\n\n        }).then((data) => {\n\n            this.setState({\n                data:data\n            })\n\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n    close=()=>{\n        this.setState({\n            visible:false,\n        })\n    }\n\n    check = () => {\n\n        this.modalRef.current.submit();\n\n\n    }\n\n    realComplain=(form)=>{\n        addComplaint({\n            order_id:this.currentRow.order_id,\n            content:form.content\n        }).then(data => {\n            Util.success(`投诉成功！`)\n            this.close()\n            this.getList(this.state.data.currentPage)\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n    show=(row)=>{\n        this.setState({\n            visible:true,\n        })\n\n        this.currentRow=row;\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '客户姓名',\n                dataIndex: 'name',\n            },\n            {\n                title: '客户手机号',\n                dataIndex: 'phone',\n            },\n            {\n                title: '订单日期',\n                dataIndex: 'order_date',\n                render:(text)=>{\n                    return text?(text.split(' ')[0]):text;\n                }\n            },\n            {\n                title: '订单金额',\n                dataIndex: 'amount',\n            },\n            {\n                title: '预约时段',\n                dataIndex: 'period',\n                render:(text)=>{\n                    return Util.getAppointmentPeriodStr(text)\n                }\n            },\n            {\n                title: '房间',\n                dataIndex: 'room_name',\n            },\n            {\n                title: '订单状态',\n                dataIndex: 'state',\n                render:(text)=>{\n                    return ORDER_STATE_DESC[text]\n                }\n            },\n\n\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => {\n\n                    if(row.state===ORDER_STATE.DONE){\n                        return (\n                            <Space size=\"middle\">\n                                <Button size={\"small\"} type={\"primary\"} danger\n                                        onClick={this.show.bind(this, row)}>投诉</Button>\n                            </Space>\n                        )\n                    }else{\n                        return null;\n                    }\n\n\n\n                }\n            }\n        ];\n\n        return (\n            <div>\n                <Modal\n                    title=\"投诉客户\"\n                    visible={this.state.visible}\n                    onOk={this.check}\n                    onCancel={this.close}\n                >\n                    <Form ref={this.modalRef}\n                          onFinish={this.realComplain}\n\n                    >\n                        <Form.Item name={'content'} rules={[\n                            {\n                                required: true,\n                                message: '投诉内容不能为空!',\n                            },\n                        ]}>\n                            <Input.TextArea rows={5} placeholder={'请输入投诉内容'}></Input.TextArea>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n                <Row>\n                    <Col span={20}>\n                        <h3>咨询客观记录</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"user_id\" pagination={false} />\n                        {\n                            this.state.data.data.length>0?\n                                <Pagination showQuickJumper total={this.state.data.count} onChange={this.getList} />\n                                :null\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport {Row, Col, Button, Table, Space, message, Modal, Divider, Pagination} from \"antd\";\n\nimport Util from \"../../../assets/js/Util\";\n\nimport Role from \"../../../assets/js/Role\";\n\nimport {deleteRoom,getRoomList,onOffRoom} from \"../../../http/service\";\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            data:{\n                data:[]\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n    getList=(page)=> {\n\n        page=page||1;\n\n        let pageSize=Util.pageSize\n        pageSize=2;\n\n        getRoomList( {\n            page,\n            pageSize,\n        }).then((data) => {\n\n            this.setState({\n                data:data\n            })\n\n        }).catch(err => {\n            message.warning(err)\n        })\n    }\n    add=()=> {\n        this.props.history.push({\n            pathname:'/room/operate',\n            state:{\n                // station_id:this.station_id\n            }\n        })\n    }\n    edit=(row)=>{\n\n        this.props.history.push({\n            pathname:'/room/operate',\n            state:{\n                opType:'edit',\n                formItem:row,\n            }\n        })\n    }\n\n    occupy=(row)=> {\n        this.props.history.push({\n            pathname:'/room/occupy',\n            state:{\n                room_id:row.room_id,\n                name:row.name\n            }\n        })\n    }\n\n    go2UseablePeriodSet=()=>{\n        this.props.history.push({\n            pathname:'/room/periodSet',\n            state:{\n            }\n        })\n    }\n\n    onOff=(row)=> {\n\n        onOffRoom(row).then(() => {\n\n            Util.success(\"操作成功！\")\n            this.getList(this.state.data.currentPage)\n\n\n        }).catch(err => {\n            Util.error(err)\n        })\n\n\n    }\n    delete=(room_id)=>{\n        Util.confirm({\n            title:'您确认删除吗？',\n            onOk:()=>{\n                deleteRoom({\n                    room_id\n                }).then(()=>{\n                    message.success(\"删除成功\")\n                    this.getList()\n                }).catch(err=>{\n                    message.warning(err)\n                })\n            }\n        })\n\n    }\n\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '房间名',\n                dataIndex: 'name',\n            },\n            {\n                title: '房间位置',\n                dataIndex: 'position',\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render:(text)=>{\n                    return text===0?'已启用':'已停用'\n                }\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        <Button size={\"small\"} type={\"primary\"} onClick={this.edit.bind(this,row)}>编辑</Button>\n                        <Button size={\"small\"} type={\"primary\"} danger onClick={this.delete.bind(this,row.room_id)}>删除</Button>\n                        <Button size={\"small\"} type={\"primary\"} onClick={this.occupy.bind(this,row)}>房间使用率</Button>\n                        {\n                            row.state===0?\n                                (\n                                    <Button size={\"small\"} type={\"primary\"} danger onClick={this.onOff.bind(this,row)}>停用</Button>\n                                )\n                                :\n                                (\n                                    <Button size={\"small\"} type={\"primary\"} onClick={this.onOff.bind(this,row)}>启用</Button>\n                                )\n                        }\n                    </Space>\n                ),\n            },\n        ];\n\n        return (\n            <div>\n                <Row>\n                    <Col span={20}>\n                        <h3>房间管理</h3>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                    </Col>\n                    <Col span={2}>\n                        <Button type={\"primary\"} onClick={this.go2UseablePeriodSet}>可用时段设置</Button>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"room_id\" pagination={false}/>\n                        {\n                            this.state.data.count > 0\n                                ?\n                                (<Pagination showQuickJumper total={this.state.data.count} pageSize={this.state.data.pageSize} current={this.state.data.currentPage} onChange={this.getList}/>)\n                                :\n                                (null)\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Space, Divider} from \"antd\";\nimport {addRoom, updateRoom} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\n\nclass Index extends Component {\n\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = this.props.location.state && this.props.location.state.opType === 'edit'\n\n\n        this.state = {\n            formItem: this.isEdit ? this.props.location.state.formItem : {}\n        }\n\n\n    }\n\n    componentDidMount() {\n        this.formRef.current.setFieldsValue(this.state.formItem)\n    }\n\n\n    back = () => {\n        this.props.history.goBack();\n    }\n\n    operate = (form) => {\n\n        this.setState({\n            formItem: Object.assign(this.state.formItem, form)\n        })\n\n\n        if (this.isEdit) {\n            updateRoom(this.state.formItem).then((data) => {\n                Util.success(\"操作成功！\")\n\n                this.back()\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        } else {\n            addRoom(this.state.formItem).then((data) => {\n                Util.success(\"操作成功！\")\n\n                this.back()\n\n            }).catch(err => {\n                Util.error(err)\n            })\n        }\n\n\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>房间操作</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={8} offset={8}>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"horizontal\"\n                            labelCol={{span: 4}}\n                            wrapperCol={{span: 20}}\n                            onFinish={this.operate}\n                        >\n                            <Form.Item\n                                label=\"房间名\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '房间名不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input key={1} placeholder={'请输入房间名'} maxLength={50}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"房间位置\"\n                                name=\"position\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '房间位置不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入房间位置'} maxLength={50}/>\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n\n\n                                <Space>\n                                    <Button style={{width: '6em'}} type=\"default\" onClick={this.back}>\n                                        返回\n                                    </Button>\n                                    <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                        确定\n                                    </Button>\n                                </Space>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Space, Checkbox, Divider} from \"antd\";\nimport {\n    getRoomPeriodSet,\n    updateRoomPeriodSet,\n} from \"../../../http/service\";\nimport Util from \"../../../assets/js/Util\";\nimport store from \"../../../store\";\n\nclass Index extends Component {\n\n    formRef = React.createRef();\n\n\n\n    constructor(props) {\n        super(props);\n\n        this.options =this.getOptions()\n\n        this.state = {\n            formItem: {},\n        }\n\n    }\n\n    componentDidMount() {\n        this.getUseablePeriodSet()\n\n    }\n\n    back=()=>{\n        this.props.history.goBack()\n    }\n\n    getOptions=()=>{\n        let array=[]\n        for(let i=0;i<24;i++){\n            array.push({\n                label:`${i}:00-${i}:50`,\n                value:String(i)\n            })\n        }\n        return array;\n    }\n\n\n\n    getUseablePeriodSet = () => {\n        getRoomPeriodSet({\n        }).then((data) => {\n\n            let period=data.period.split(',')\n            this.formRef.current.setFieldsValue({\n                period\n            })\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n    updateUseablePeriodSet = (form) => {\n\n        let period=form.period?form.period.join(','):''\n\n        updateRoomPeriodSet({\n            period,\n        }).then((data) => {\n            Util.success(\"操作成功！\")\n\n            this.getUseablePeriodSet()\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>房间可用时段设置</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={18}  >\n                        <Form\n                            ref={this.formRef}\n                            layout=\"vertical\"\n                            onFinish={this.updateUseablePeriodSet}\n                        >\n\n\n\n                            <Form.Item name=\"period\" label=\"请设置可用时段\">\n                                <Checkbox.Group>\n                                    <Row>\n                                        {\n                                            this.options.map((item,index)=>{\n                                                return (\n                                                    <Col span={4} key={index}>\n                                                        <Checkbox value={item.value} style={{marginBottom:'.5em'}}>{item.label}</Checkbox>\n                                                    </Col>\n                                                )\n                                            })\n                                        }\n                                    </Row>\n                                </Checkbox.Group>\n                            </Form.Item>\n\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n                                <Space>\n                                    <Button style={{width: '6em'}} type=\"default\" onClick={this.back}>\n                                        返回\n                                    </Button>\n                                    <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                        确定\n                                    </Button>\n                                </Space>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport {Row, Col, Button, Table, Space, message, Modal, Divider, Pagination, Form, DatePicker} from \"antd\";\n\nimport Util from \"../../../assets/js/Util\";\n\nimport Role from \"../../../assets/js/Role\";\nimport DateUtil from \"../../../assets/js/DateUtil\";\nimport {  getRoomPeriodSet, getAppointmentsOfUsingByRoomId} from \"../../../http/service\";\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.room_id = this.props.location.state.room_id;\n        this.name = this.props.location.state.name;\n        this.state = {\n            dataSource: [],\n            columns: []\n        }\n    }\n\n    componentDidMount() {\n        this.getRoomPeriodSet();\n    }\n\n    /**\n     * 给定月份的给定天的具体某个时段是否在不可用列表\n     * */\n    isPeriodInList = (period, day, dataList) => {\n        let flag = null;\n        for (let i = 0; i < dataList.length; i++) {\n            if (dataList[i].day === day && period === Number(dataList[i].period)) {\n\n                flag = dataList[i];\n                break;\n            }\n        }\n\n        return flag;\n    }\n\n    isSameDay = (date1, date2) => {\n        return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n    }\n\n    isSameDayOfWeek = (date1, date2) => {\n        return date1.getDay() === date2.getDay()\n    }\n    loadData = () => {\n\n        this.dataList = []\n\n        let notUseableList = []\n\n        getAppointmentsOfUsingByRoomId({\n            room_id: this.room_id,\n        }).then((data) => {\n\n            notUseableList = data;\n            let days = Util.getDaysOfMonth(this.year, this.month);\n\n            let nowDate = new Date();\n\n            for (let i = 1; i <= days; i++) {\n\n                let d = new Date(this.date.getTime());\n\n\n                d.setDate(i)\n\n                let obj = {\n                    date: d\n                }\n\n                for (let num = 0; num <= 23; num++) {\n\n                    if (d.getTime() < nowDate.getTime()) {//早于当前日期的不统计\n                        obj['period' + num] = -1\n                    } else {\n                        for (let i = 0; i < notUseableList.length; i++) {\n                            let appointment = notUseableList[i];\n                            if (appointment.ismulti === 0) {//单次预约\n                                let isSame = this.isSameDay(new Date(appointment.appoint_date), d)\n                                if (isSame && appointment.period.includes(String(num))) {\n                                    obj['period' + num] = 1;\n                                    break;\n                                }\n                            } else {\n\n                                if (new Date(appointment.appoint_date).getTime() < d.getTime() && this.isSameDayOfWeek(new Date(appointment.appoint_date), d) && appointment.period.includes(String(num))) {\n                                    obj['period' + num] = 1;\n                                    break;\n                                }\n                            }\n                        }\n                        if (!obj['period' + num]) {\n                            obj['period' + num] = 0;\n                        }\n\n\n                    }\n\n\n                }\n\n                this.dataList.push(obj);\n\n            }\n\n            this.setState({\n                dataSource: this.dataList\n            })\n\n\n        }).catch(err => {\n            Util.error(err)\n        })\n\n    }\n\n    getRoomPeriodSet = () => {\n\n        getRoomPeriodSet().then((data) => {\n            this.period = data.period.split(',')\n            this.period.sort((val1, val2) => {\n                return Number(val1) - Number(val2)\n            });\n            this.getColumns()\n        }).catch(err => {\n            Util.error(err)\n        })\n\n    }\n\n    getColumns = () => {\n\n        let hourArray = []\n\n        this.period.forEach((item) => {\n            hourArray.push({\n                title: `${item}:00-${item}:50`,\n                key: `period${item}`,\n            })\n        })\n\n        let optionArray = [];\n\n        hourArray.forEach((hourObj, index, array) => {\n            optionArray.push({\n                title: hourObj.title,\n                dataIndex: hourObj.key,\n                render: (text, row, c) => {\n\n                    //占用率只看当天之后的日期\n\n\n                    let occupyData = row[hourObj.key];\n\n                    console.log(occupyData)\n\n                    if (occupyData === -1) {//已过期\n\n                        return null;\n\n                    } else if (occupyData === 1) {//占用中或不可用\n\n                        return <Button size={\"small\"} type={\"primary\"}>占用中</Button>\n\n                    } else {//空闲中\n                        return <span>空闲中</span>\n                    }\n\n                }\n            })\n        })\n\n\n        let columns = [\n            {\n                title: '日期',\n                dataIndex: 'date',\n                render: (text, row) => {\n                    return <div>{DateUtil.format(row.date)} ({this.getWeekTextByDate(row.date)})</div>\n                }\n            }\n\n        ]\n\n\n        columns = columns.concat(optionArray)\n\n\n        this.columns = columns;\n\n        this.setState({\n            columns\n        })\n\n    }\n\n    getWeekTextByDate = (date) => {\n        let day = date.getDay();\n        return ['周日', '周一', '周二', '周三', '周四', '周五', '周六'][day]\n    }\n\n    query = (form) => {\n        let queryDate = form.queryDate\n\n        if (!queryDate) {\n            Util.warning(\"请选择月份！\")\n        } else {\n            queryDate = new Date(Util.getDateFromMoment(queryDate))\n            this.date = queryDate\n            this.year = queryDate.getFullYear();\n            this.month = queryDate.getMonth();\n\n            this.loadData()\n\n        }\n    }\n\n    back = () => {\n        this.props.history.goBack()\n    }\n\n    /**\n     * 只能选择当前月份和之后月份\n     * @param current\n     * @returns {boolean|boolean}\n     */\n    disabledDate = (current) => {\n        let date = Util.getRealDateFromMoment(current)\n        return date.getFullYear() < new Date().getFullYear() || (date.getFullYear() === new Date().getFullYear() && date.getMonth() < new Date().getMonth());\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Row>\n                    <Col span={20}>\n                        <h3>{this.name} / 房间使用率</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col>\n                        <Form\n                            ref={this.formRef}\n                            layout=\"inline\"\n                            labelCol={{span: 10}}\n                            wrapperCol={{span: 14}}\n                            onFinish={this.query}\n                        >\n\n                            <Form.Item\n                                label=\"月份\"\n                                name=\"queryDate\"\n                                format=\"YYYY-MM-DD\"\n                            >\n                                <DatePicker disabledDate={this.disabledDate} style={{width: '10em'}} picker={'month'}/>\n                            </Form.Item>\n\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n                                <Space>\n                                    <Button style={{width: '6em'}} type=\"primary\" htmlType=\"submit\">\n                                        查询\n                                    </Button>\n                                    <Button style={{width: '6em'}} type=\"default\" onClick={this.back}>\n                                        返回\n                                    </Button>\n                                </Space>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={24}>\n                        <Table dataSource={this.state.dataSource} columns={this.state.columns} rowKey=\"date\"\n                               pagination={false}/>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport Util from \"../../../assets/js/Util\";\nimport Role from \"../../../assets/js/Role\";\n\nimport {getOrderListByDivisionAdminId, addComplaint, deleteLevelType,refund} from \"../../../http/service\";\nimport {Button, Col, Row, Divider, Table, Space, Pagination, Form, Input, Modal} from \"antd\";\nimport store from \"../../../store\";\nimport ORDER_STATE_DESC from \"../../../assets/js/constants/ORDER_STATE_DESC\";\nimport ORDER_STATE from \"../../../assets/js/constants/ORDER_STATE\";\n\n\nclass Index extends Component {\n    modalRef = React.createRef();\n    constructor(props) {\n\n        super(props);\n\n        this.therapist_id=store.getState().user_id;\n        this.currentRow={}\n\n        this.state={\n            visible: false,\n            data:{\n                data:[]\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.getList(1)\n    }\n\n\n\n    getList = (page) => {\n\n\n        page = page || 1;\n\n        let pageSize = Util.pageSize\n\n        getOrderListByDivisionAdminId({\n            page,\n            pageSize\n\n        }).then((data) => {\n\n            this.setState({\n                data:data\n            })\n\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n    close=()=>{\n        this.setState({\n            visible:false,\n        })\n    }\n\n    check = () => {\n\n        this.modalRef.current.submit();\n\n\n    }\n\n    realComplain=(form)=>{\n        addComplaint({\n            order_id:this.currentRow.order_id,\n            content:form.content\n        }).then(data => {\n            Util.success(`投诉成功！`)\n            this.close()\n            this.getList(this.state.data.currentPage)\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n    refund=(row)=>{\n        Util.confirm({\n            title: '您确认退款吗？',\n            content: '',\n            onOk: () => {\n\n                refund({\n                    order_id: row.order_id\n                }).then(() => {\n                    Util.success(\"已退款\")\n                    this.getList()\n                }).catch(err => {\n                    Util.error(err)\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n\n\n\n    }\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return `${(this.state.data.currentPage-1)*(this.state.data.pageSize)+(index+1)}`\n                }\n            },\n            {\n                title: '客户姓名',\n                dataIndex: 'name',\n            },\n            {\n                title: '客户手机号',\n                dataIndex: 'phone',\n            },\n            {\n                title: '订单日期',\n                dataIndex: 'order_date',\n                render:(text)=>{\n                    return text?(text.split(' ')[0]):text;\n                }\n            },\n            {\n                title: '订单金额',\n                dataIndex: 'amount',\n            },\n            {\n                title: '预约时段',\n                dataIndex: 'period',\n                render:(text)=>{\n                    return Util.getAppointmentPeriodStr(text)\n                }\n            },\n            {\n                title: '房间',\n                dataIndex: 'room_name',\n            },\n            {\n                title: '订单状态',\n                dataIndex: 'state',\n                render:(text)=>{\n                    return ORDER_STATE_DESC[text]\n                }\n            },\n\n\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => {\n\n                    if(row.state===ORDER_STATE.DONE || row.state===ORDER_STATE.PAYED){\n                        return (\n                            <Space size=\"middle\">\n                                <Button size={\"small\"} type={\"warning\"} danger\n                                        onClick={this.refund.bind(this, row)}>退款</Button>\n                            </Space>\n                        )\n                    }else{\n                        return null;\n                    }\n\n\n\n                }\n            }\n        ];\n\n        return (\n            <div>\n                <Modal\n                    title=\"投诉客户\"\n                    visible={this.state.visible}\n                    onOk={this.check}\n                    onCancel={this.close}\n                >\n                    <Form ref={this.modalRef}\n                          onFinish={this.realComplain}\n\n                    >\n                        <Form.Item name={'content'} rules={[\n                            {\n                                required: true,\n                                message: '投诉内容不能为空!',\n                            },\n                        ]}>\n                            <Input.TextArea rows={5} placeholder={'请输入投诉内容'}></Input.TextArea>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n                <Row>\n                    <Col span={20}>\n                        <h3>咨询客观记录</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row justify={'center'}>\n                    <Col span={24}>\n                        <Table dataSource={this.state.data.data} columns={columns} rowKey=\"user_id\" pagination={false} />\n                        {\n                            this.state.data.data.length>0?\n                                <Pagination showQuickJumper total={this.state.data.count} onChange={this.getList} />\n                                :null\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\n\nimport {Row,Col,Button,Table,Space,message,Modal,Divider} from \"antd\";\n\nimport Util from \"../../../assets/js/Util\";\n\nimport Role from \"../../../assets/js/Role\";\n\nimport {getMeasureList,deleteMeasure} from \"../../../http/service\";\n\nimport store from \"../../../store\";\n\nclass Index extends Component {\n\n    constructor() {\n        super();\n        this.state={\n            dataList:[],\n            isAdd:false\n        }\n    }\n\n    componentDidMount() {\n        this.getList()\n    }\n\n\n    getList=()=> {\n\n        getMeasureList( {\n        }).then((data) => {\n\n            if(data.data.length===0){\n                this.setState({\n                    isAdd:true\n                })\n            }\n\n            this.setState({\n                dataList:data.data\n            })\n\n            if(data.roleData&&data.roleData.length>0){\n\n                let list=this.state.dataList;\n                list.unshift(data.roleData[0])\n                this.setState({\n                    dataList:list\n                })\n            }\n\n        }).catch(err => {\n            message.warning(err)\n        })\n    }\n    add=()=> {\n        this.props.history.push('/measure/operate')\n    }\n    edit=(row)=>{\n\n        this.props.history.push({\n            pathname:'/measure/operate',\n            state:{\n                opType:'edit',\n                from:'/measure/list',\n                formItem:row\n            }\n        })\n    }\n    detail=(row)=>{\n\n        this.props.history.push({\n            pathname:'/measure/detail',\n            state:{\n                measureId:row.id,\n            }\n        })\n    }\n    delete=(id)=>{\n\n        Util.confirm({\n            title:'您确认删除吗？',\n            onOk:()=>{\n                deleteMeasure({\n                    id\n                }).then(()=>{\n                    message.success(\"删除成功\")\n                    this.getList()\n                }).catch(err=>{\n                    message.warning(err)\n                })\n            }\n        })\n\n    }\n\n\n\n    render() {\n\n        const columns = [\n            {\n                title: '序号',\n                dataIndex: 'index',\n                render:(text,row,index)=>{\n                    return index+1;\n                }\n            },\n            {\n                title: '量表名称',\n                dataIndex: 'name',\n            },\n            {\n                title: '量表别名',\n                dataIndex: 'alias',\n            },\n            {\n                title: '量表描述',\n                dataIndex: 'description',\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'createtime',\n            },\n            {\n                title: '是否公用',\n                dataIndex: 'role',\n                render:(role)=>{\n                    return role===0?'是':'否';\n                }\n            },\n            {\n                title: '状态',\n                dataIndex: 'status',\n                render:(status)=>{\n                    return status===1?'已完成':'未完成';\n                }\n            },\n            {\n                title: '操作',\n                dataIndex: 'action',\n                render: (text, row) => (\n                    <Space size=\"middle\">\n                        {\n                            store.getState().role===row.role?\n                                <React.Fragment>\n                                    <Button type={\"primary\"} size={\"small\"} onClick={this.edit.bind(this,row)}>修改名称</Button>\n                                    <Button type={\"primary\"} size={\"small\"} danger onClick={this.delete.bind(this,row.id)}>删除</Button>\n                                    <Button type={\"primary\"} size={\"small\"} onClick={this.detail.bind(this,row)}>编辑</Button>\n                                </React.Fragment>\n                                :\n                                <React.Fragment>\n                                    <Button type={\"primary\"} size={\"small\"} onClick={this.detail.bind(this,row)}>查看</Button>\n                                </React.Fragment>\n                        }\n                    </Space>\n                ),\n            },\n        ];\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>量表管理</h3>\n                    </Col>\n                    {\n                        this.state.isAdd?\n                            <Col span={2}>\n                                <Button type={\"primary\"} onClick={this.add}>新增</Button>\n                            </Col>\n                            :\n                            null\n                    }\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col span={24}>\n                        <Table dataSource={this.state.dataList} columns={columns} rowKey=\"id\" pagination={false}/>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Form, Input, Select, Space, message, Divider, DatePicker, Radio} from \"antd\";\nimport {addMeasure, updateMeasure} from \"../../../http/service\";\n\nconst {Option} = Select;\nconst {TextArea} = Input;\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.isEdit = this.props.location.state && this.props.location.state.opType === 'edit'\n        this.from = (this.props.location.state && this.props.location.state.from ) ?this.props.location.state.from: '/measure/list'\n\n        let obj=this.isEdit ? this.props.location.state.formItem : {\n            chartType:null\n        }\n        this.state = {\n            formItem: obj\n        }\n\n\n    }\n\n\n    componentDidMount() {\n\n    }\n\n\n    back = () => {\n        this.props.history.push(this.from)\n    }\n\n    operate = (values) => {\n\n        this.setState({\n            formItem: Object.assign(this.state.formItem, values)\n        })\n\n        if (this.isEdit) {\n\n            updateMeasure(this.state.formItem).then((data) => {\n\n                message.success(\"修改成功！\")\n                this.props.history.push('/measure/list')\n\n            }).catch(err => {\n                message.error(err)\n            })\n        } else {\n\n            addMeasure(this.state.formItem).then((data) => {\n\n                message.success(\"新增成功！\")\n                this.props.history.push('/measure/list')\n\n            }).catch(err => {\n                message.error(err)\n            })\n        }\n\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22}>\n                        <h3>量表操作</h3>\n                    </Col>\n                </Row>\n                <Divider/>\n                <Row>\n                    <Col offset={8} span={8}>\n\n                        <Form\n                            name=\"basic\"\n                            labelCol={{span: 6}}\n                            initialValues={this.state.formItem}\n                            onFinish={this.operate}\n                        >\n                            <Form.Item\n                                label=\"量表名称\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '量表名称不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入量表名称'}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"量表别名\"\n                                name=\"alias\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '量表别名不能为空!',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder={'请输入量表别名'}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"量表描述\"\n                                name=\"description\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '量表描述不能为空!',\n                                    },\n                                ]}\n                            >\n                                <TextArea rows={3} placeholder={'请输入量表描述'}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"反馈报告描述\"\n                                name=\"start_description\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '反馈报告描述不能为空!',\n                                    },\n                                ]}\n                            >\n                                <TextArea rows={3} placeholder={'请输入量表反馈报告描述'}/>\n                            </Form.Item>\n\n                            <Form.Item name=\"chartType\" label=\"反馈报告图表类型\"\n                                       >\n                                <Select\n                                    placeholder=\"请选择图表类型\"\n                                    value={this.state.formItem.chartType}\n                                >\n                                    <Option value={null}>无</Option>\n                                    <Option value=\"line\">折线图</Option>\n                                    <Option value=\"bar\">柱状图</Option>\n                                    <Option value=\"pie\">饼图</Option>\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item wrapperCol={{offset: 8, span: 16}}>\n                                <Space>\n                                    <Button type=\"default\" onClick={this.back}>\n                                        返回\n                                    </Button>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        确定\n                                    </Button>\n                                </Space>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Row, Space} from \"antd\";\nimport store from \"../../../../store\";\nimport Util from \"../../../../assets/js/Util\";\nimport {updateMeasure} from \"../../../../http/service\";\n\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isQuery:false,\n            status : '',\n            measureId : null,\n            role:'',\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if(nextProps.isQuery!==this.state.isQuery){\n            this.setState({\n                isQuery:nextProps.isQuery\n            })\n        }\n        if(nextProps.status!==this.state.status){\n            this.setState({\n                status:nextProps.status\n            })\n        }\n        if(nextProps.measureId!==this.state.measureId){\n            this.setState({\n                measureId:nextProps.measureId\n            })\n        }\n\n        if(nextProps.role!==this.state.role){\n            this.setState({\n                role:nextProps.role\n            })\n        }\n        return true;\n    }\n\n    showQuestionDetailModal=(type)=> {\n\n        this.props.onShowQuestionDetailModal(type)\n\n    }\n\n\n\n    //提交后量表状态设置为完成，只有完成了才能设置计算规则\n    commit=()=>{\n        Util.confirm({\n            title: '提交后内容将无法修改，您确定提交吗？',\n            content: '',\n            onOk: () => {\n                updateMeasure({\n                    id: this.state.measureId,\n                    status: '1'\n                }).then(data => {\n                    Util.success(\"提交成功！\")\n\n                    this.props.onCommit();\n                })\n            },\n            onCancel: () => {\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <Row >\n                <Col span={4}>\n                    <Button type=\"default\" onClick={this.props.onBack}>返回</Button>\n                </Col>\n                {\n                    this.state.role===store.getState().role ?\n                        <Col span={20} style={{textAlign:'right'}}>\n                            {\n                                this.state.isQuery ?\n                                    <Space>\n                                        <Button type=\"primary\"\n                                                onClick={this.showQuestionDetailModal.bind(this, '1')}>指导语</Button>\n                                        <Button type=\"primary\"\n                                                onClick={this.showQuestionDetailModal.bind(this, '0')}>问答</Button>\n                                        <Button type=\"primary\"\n                                                onClick={this.showQuestionDetailModal.bind(this, '2')}>选择题</Button>\n                                        <Button type=\"primary\"\n                                                onClick={this.showQuestionDetailModal.bind(this, '3')}>矩阵</Button>\n                                        <Button type=\"primary\"\n                                                onClick={this.showQuestionDetailModal.bind(this, '4')}>多媒体矩阵</Button>\n                                        <Button type=\"primary\"\n                                                onClick={this.showQuestionDetailModal.bind(this, '5')}>测谎选择题</Button>\n                                        {\n                                            this.state.status !== '1' ?\n                                                <Button type=\"dashed\" onClick={this.commit}>提交</Button>\n                                                :\n                                                null\n                                        }\n                                        <Button type=\"danger\">已完成</Button>\n                                    </Space>\n                                    :\n                                    null\n                            }\n                        </Col>\n                        :\n                        null\n                }\n\n            </Row>\n        );\n    }\n}\n\nexport default Index;\n","import React, {Component} from 'react';\nimport {Form, Input} from \"antd\";\n\nclass Wenda extends Component {\n\n    constructor(props){\n\n        super(props)\n\n    }\n    componentDidMount() {\n        if(this.props.data){\n            setTimeout(()=>{\n                this.props.form.current.setFieldsValue({\n                    name:this.props.data.name\n                })\n            },1)\n        }\n    }\n\n    render() {\n        return (\n            <Form.Item name={'name'} label=\"请输入问答标题\" rules={[\n                {\n                    required: true,\n                    message: '标题不能为空!',\n                },\n            ]}>\n                <Input.TextArea rows={5} placeholder={'请输入问答标题'}></Input.TextArea>\n            </Form.Item>\n        );\n    }\n}\n\nexport default Wenda;\n","import React, {Component} from 'react';\nimport {Form, Input} from \"antd\";\n\nclass Zhidaoyu extends Component {\n\n\n    constructor(props){\n\n        super(props)\n\n    }\n    componentDidMount() {\n        if(this.props.data){\n            setTimeout(()=>{\n                this.props.form.current.setFieldsValue({\n                    name:this.props.data.name\n                })\n            },1)\n        }\n    }\n\n    render() {\n        return (\n            <Form.Item name={'name'} label=\"请输入指导语\" rules={[\n                {\n                    required: true,\n                    message: '指导语不能为空!',\n                },\n            ]}>\n                <Input.TextArea rows={5} placeholder={'请输入指导语'}></Input.TextArea>\n            </Form.Item>\n        );\n    }\n}\n\nexport default Zhidaoyu;\n","import React, {Component} from 'react';\nimport {Form, Input, Row, Col, Button, Select} from \"antd\";\nimport Util from \"../../../../../assets/js/Util\";\nimport {PlusOutlined,DeleteFilled} from \"@ant-design/icons\";\n\nclass Wenda extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        }\n\n    }\n\n    componentDidMount() {\n        if(this.props.isEdit){\n            setTimeout(()=>{\n                this.props.form.current.setFieldsValue({\n                    name:this.props.data.name,\n                    answer:this.props.data.answer\n                })\n            },1)\n        }else{\n            setTimeout(()=>{\n                this.props.form.current.setFieldsValue({\n                    answer:[{}],\n                })\n            },1)\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Row style={{marginTop: \"10px\", fontSize: \"1em\", fontWeight: \"bold\"}}>\n                    <Col span=\"18\" offset={6}>\n                        选择题标题\n                        {\n                            !this.state.isEdit ?\n                                <span>（回车键换下一题，可批量增加选项相同的题目）</span>\n                                :\n                                null\n                        }\n\n                    </Col>\n                </Row>\n\n                <Form.Item name={'name'} label=\"请输入标题\" rules={[\n                    {\n                        required: true,\n                        message: '标题不能为空!',\n                    },\n                ]}>\n                    <Input.TextArea rows={5} placeholder={'请输入选择题标题'}></Input.TextArea>\n                </Form.Item>\n\n                <Row style={{marginTop: \"10px\", fontSize: \"1em\", fontWeight: \"bold\"}}>\n                    <Col span=\"16\">\n                        选项文字\n                    </Col>\n                    <Col span=\"4\" offset=\"1\">\n                        分数\n                    </Col>\n                    <Col span=\"2\" offset=\"1\">\n                        移除\n                    </Col>\n                </Row>\n\n                <Form.List name=\"answer\">\n                    {(fields, {add, remove}) => {\n                        return (\n                            <div>\n\n                                {fields.map((field, index) => (\n                                    <Row key={index}>\n\n\n                                        <Col span=\"16\">\n                                            <Form.Item\n                                                {...field}\n                                                fieldKey={[field.fieldKey, 'key']}\n                                                name={[field.name, 'key']} rules={[\n                                                {\n                                                    required: true,\n                                                    message: '选项文字不能为空!',\n                                                },\n                                            ]}>\n                                                <Input maxLength={200} placeholder={'请输入选项文字'}></Input>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={4} offset={1}>\n                                            <Form.Item\n                                                {...field}\n                                                name={[field.name, 'value']}\n                                                fieldKey={[field.fieldKey, 'value']}\n                                                rules={[{required: true, message: '分数不能为空!'}]}>\n                                                <Select\n                                                    placeholder=\"请选择分数\"\n                                                    value={field.value}\n                                                >\n                                                    {\n                                                        Util.questionScoreArray.map((item, index) => {\n                                                            return <Select.Option key={item}\n                                                                           value={item}>{item}</Select.Option>\n                                                        })\n                                                    }\n\n                                                </Select>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={2} offset={1}>\n                                            <DeleteFilled  style={{fontSize:'1.2em',marginTop:'0.4em'}}\n                                                onClick={() => {\n                                                    remove(field.name);\n                                                }}\n                                            />\n                                        </Col>\n                                    </Row>\n                                ))}\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() => {\n                                            add();\n                                        }}\n                                        block\n                                    >\n                                        <PlusOutlined/> 新增选项\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n\n\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default Wenda;\n","import React, {Component} from 'react';\nimport {Form, Input, Row, Col, Button, Select,Checkbox} from \"antd\";\nimport Util from \"../../../../../assets/js/Util\";\nimport {PlusOutlined,DeleteFilled} from \"@ant-design/icons\";\n\nclass Wenda extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isEdit: false,\n            tiaomu: {\n                answer: []\n            }\n        }\n\n    }\n\n    componentDidMount() {\n        if(this.props.isEdit){\n            setTimeout(()=>{\n                let data=this.props.data;\n                debugger\n                data.children.forEach(item=>{\n                    item.isReverse=item.isReverse===1?'checked':''\n                })\n                this.props.form.current.setFieldsValue({\n                    name:data.name,\n                    answer:data.answer,\n                    children:data.children\n                })\n            },1)\n        }else{\n            setTimeout(()=>{\n                this.props.form.current.setFieldsValue({\n                    answer:[{}],\n                    children:[{\n                    }]\n                })\n            },1)\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <Form.Item name={'name'} label=\"请输入矩阵标题\" rules={[\n                    {\n                        required: true,\n                        message: '标题不能为空!',\n                    },\n                ]}>\n                    <Input.TextArea rows={5} placeholder={'请输入矩阵标题'}></Input.TextArea>\n                </Form.Item>\n\n                <Row style={{marginTop: \"10px\", fontSize: \"1em\", fontWeight: \"bold\"}}>\n                    <Col span=\"16\">\n                        子条目标题\n                    </Col>\n                    <Col span=\"4\" offset=\"1\">\n                        反向\n                    </Col>\n                    <Col span=\"2\" offset=\"1\">\n                        移除\n                    </Col>\n                </Row>\n\n                <Form.List name=\"children\">\n                    {(fields, {add, remove}) => {\n                        return (\n                            <div>\n\n                                {fields.map((field, index) => (\n                                    <Row key={index}>\n\n\n                                        <Col span=\"16\">\n                                            <Form.Item\n                                                {...field}\n                                                fieldKey={[field.fieldKey, 'name']}\n                                                name={[field.name, 'name']} rules={[\n                                                {\n                                                    required: true,\n                                                    message: '标题不能为空!',\n                                                },\n                                            ]}>\n                                                <Input maxLength={200} placeholder={'请输入子条目标题'}></Input>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={4} offset={1}>\n                                            <Form.Item {...field} valuePropName=\"checked\"\n                                                       name={[field.name, 'isReverse']}\n                                                       fieldKey={[field.fieldKey, 'isReverse']}>\n                                                <Checkbox />\n                                            </Form.Item>\n\n                                        </Col>\n                                        <Col span={2} offset={1}>\n                                            {\n                                                fields.length>1?\n                                                    <DeleteFilled  style={{fontSize:'1.2em',marginTop:'0.4em'}}\n                                                        onClick={() => {\n                                                            remove(field.name);\n                                                        }}\n                                                    />\n                                                    :\n                                                    null\n                                            }\n                                        </Col>\n                                    </Row>\n                                ))}\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() => {\n                                            add();\n                                        }}\n                                        block\n                                    >\n                                        <PlusOutlined/> 新增子条目\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n\n                <Row style={{marginTop: \"10px\", fontSize: \"1em\", fontWeight: \"bold\"}}>\n                    <Col span=\"16\">\n                        选项文字\n                    </Col>\n                    <Col span=\"4\" offset=\"1\">\n                        分数\n                    </Col>\n                    <Col span=\"2\" offset=\"1\">\n                        移除\n                    </Col>\n                </Row>\n\n                <Form.List name=\"answer\">\n                    {(fields, {add, remove}) => {\n                        return (\n                            <div>\n\n                                {fields.map((field, index) => (\n                                    <Row key={index}>\n\n\n                                        <Col span=\"16\">\n                                            <Form.Item\n                                                {...field}\n                                                fieldKey={[field.fieldKey, 'key']}\n                                                name={[field.name, 'key']} rules={[\n                                                {\n                                                    required: true,\n                                                    message: '选项文字不能为空!',\n                                                },\n                                            ]}>\n                                                <Input maxLength={200} placeholder={'请输入选项文字'}></Input>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={4} offset={1}>\n                                            <Form.Item\n                                                {...field}\n                                                name={[field.name, 'value']}\n                                                fieldKey={[field.fieldKey, 'value']}\n                                                rules={[{required: true, message: '分数不能为空!'}]}>\n                                                <Select\n                                                    placeholder=\"请选择分数\"\n                                                    value={field.value}\n                                                >\n                                                    {\n                                                        Util.questionScoreArray.map((item, index) => {\n                                                            return <Select.Option key={item}\n                                                                                  value={item}>{item}</Select.Option>\n                                                        })\n                                                    }\n\n                                                </Select>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={2} offset={1}>\n                                            {\n                                                fields.length>1?\n                                                    <DeleteFilled style={{fontSize:'1.2em',marginTop:'0.4em'}}\n                                                        onClick={() => {\n                                                            remove(field.name);\n                                                        }}\n                                                    />\n                                                    :\n                                                    null\n                                            }\n                                        </Col>\n                                    </Row>\n                                ))}\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() => {\n                                            add();\n                                        }}\n                                        block\n                                    >\n                                        <PlusOutlined/> 新增选项\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n\n\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default Wenda;\n","import React, {Component} from 'react';\nimport {Form, Input, Row, Col, Button, Select, Radio} from \"antd\";\nimport Util from \"../../../../../assets/js/Util\";\nimport {PlusOutlined,DeleteFilled} from \"@ant-design/icons\";\n\nclass Wenda extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        }\n\n    }\n\n    componentDidMount() {\n        if(this.props.isEdit){\n            setTimeout(()=>{\n                let data=this.props.data;\n                this.props.form.current.setFieldsValue({\n                    name:data.name,\n                    lieRule:data.lieRule,\n                    answer:data.answer\n                })\n            },1)\n        }else{\n            setTimeout(()=>{\n                this.props.form.current.setFieldsValue({\n                    answer:[{}]\n                })\n            },1)\n        }\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <Form.Item name={'name'} label=\"请输入标题\" rules={[\n                    {\n                        required: true,\n                        message: '标题不能为空!',\n                    },\n                ]}>\n                    <Input.TextArea rows={2} placeholder={'请输入测谎选择题标题'}></Input.TextArea>\n                </Form.Item>\n\n                <Form.Item name=\"lieRule\" label=\"计分规则\"  rules={[\n                    {\n                        required: true,\n                        message: '请选择计分规则!',\n                    },\n                ]}>\n                    <Radio.Group>\n                        <Radio value={0}>相同选项计分</Radio>\n                        <Radio value={1}>不同选项计分</Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n\n                <Row style={{marginTop: \"10px\", fontSize: \"1em\", fontWeight: \"bold\"}}>\n                    <Col span=\"10\" offset={6}>\n                        选项文字\n                    </Col>\n                    <Col span=\"4\" offset=\"1\">\n                        分数\n                    </Col>\n                    <Col span=\"1\" offset=\"1\">\n                        移除\n                    </Col>\n                </Row>\n\n                <Form.List name=\"answer\">\n                    {(fields, {add, remove}) => {\n                        return (\n                            <div>\n\n                                {fields.map((field, index) => (\n                                    <Row key={index}>\n\n\n                                        <Col span=\"10\" offset={6}>\n                                            <Form.Item\n                                                {...field}\n                                                fieldKey={[field.fieldKey, 'key']}\n                                                name={[field.name, 'key']} rules={[\n                                                {\n                                                    required: true,\n                                                    message: '选项文字不能为空!',\n                                                },\n                                            ]}>\n                                                <Input maxLength={200} placeholder={'请输入选项文字'}></Input>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={4} offset={1}>\n                                            <Form.Item\n                                                {...field}\n                                                name={[field.name, 'value']}\n                                                fieldKey={[field.fieldKey, 'value']}\n                                                rules={[{required: true, message: '分数不能为空!'}]}>\n                                                <Select\n                                                    placeholder=\"请选择分数\"\n                                                    value={field.value}\n                                                >\n                                                    {\n                                                        Util.questionScoreArray.map((item, index) => {\n                                                            return <Select.Option key={item}\n                                                                                  value={item}>{item}</Select.Option>\n                                                        })\n                                                    }\n\n                                                </Select>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={1} offset={1}>\n                                            {\n                                                fields.length>1?\n                                                    <DeleteFilled style={{fontSize:'1.2em',marginTop:'0.4em'}}\n                                                        onClick={() => {\n                                                            remove(field.name);\n                                                        }}\n                                                    />\n                                                    :\n                                                    null\n                                            }\n                                        </Col>\n                                    </Row>\n                                ))}\n\n                                <Row>\n                                    <Col span={18} offset={6}>\n                                        <Form.Item>\n                                            <Button\n                                                type=\"dashed\"\n                                                onClick={() => {\n                                                    add();\n                                                }}\n                                                block\n                                            >\n                                                <PlusOutlined/> 新增选项\n                                            </Button>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n\n\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default Wenda;\n","import React, {Component} from 'react';\nimport {Form, Input, Row, Col, Button, Select, Checkbox, Radio, Upload} from \"antd\";\nimport Util from \"../../../../../assets/js/Util\";\nimport {upLoadFile} from \"../../../../../http/service\";\nimport {DeleteFilled, PlusOutlined, UploadOutlined} from '@ant-design/icons';\n\nclass Wenda extends Component {\n    constructor(props) {\n        super(props);\n        this.form = this.props.form;\n        this.suffixArrayOfMusic = [\"mp3\", \"wave\"]\n        this.suffixArrayOfPicture = [\"jpg\", \"jpeg\", \"png\"]\n        this.state = {\n        }\n\n    }\n\n\n    componentDidMount() {\n        if(this.props.isEdit){\n            setTimeout(()=>{\n                let data=this.props.data;\n                this.props.form.current.setFieldsValue({\n                    name:data.name,\n                    mediaType:'picture',\n                    children:data.children\n                })\n            },1)\n        }else{\n            setTimeout(()=>{\n                this.props.form.current.setFieldsValue({\n                    mediaType:'picture',\n                    children:[{\n                        answer:[{}]\n                    }]\n                })\n            },1)\n        }\n    }\n\n\n    beforeUpload = (file) => {\n        let size = file / 1000 / 1000;//M\n\n        let suffix = file.name.split('.')\n\n        suffix = suffix[suffix.length - 1]\n\n        if (size > 10) {\n            Util.warning(\"文件大小不能超过10M!\")\n            this.file = null;\n            return false;\n        }\n\n        let mediaType = this.form.current.getFieldValue(\"mediaType\")\n\n        if (mediaType === 'music') {\n            if (this.suffixArrayOfMusic.indexOf(suffix) === -1) {\n                Util.warning(`只能上传${this.suffixArrayOfMusic}格式的文件!`)\n                this.file = null;\n                return false;\n            }\n        } else {\n            if (this.suffixArrayOfPicture.indexOf(suffix) === -1) {\n                Util.warning(`只能上传${this.suffixArrayOfPicture}格式的文件!`)\n                this.file = null;\n                return false;\n            }\n        }\n\n        let formData = new FormData()\n\n        formData.append('file', file)\n\n        upLoadFile(formData).then(data => {\n\n            this.setState({\n                file\n            })\n\n            let url = data.url\n\n            this.form.current.setFieldsValue({\n                url\n            })\n\n        }).catch(error => {\n            Util.error(error)\n        })\n\n        return false;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <Form.Item name={'name'} label=\"请输入矩阵标题\" rules={[\n                    {\n                        required: true,\n                        message: '标题不能为空!',\n                    },\n                ]}>\n                    <Input.TextArea rows={5} placeholder={'请输入多媒体矩阵标题'}></Input.TextArea>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"mediaType\"\n                    label=\"多媒体类型\"\n                    rules={[\n                    {\n                        required: true,\n                        message: '请选择多媒体类型!',\n                    },\n                ]}>\n                    <Radio.Group >\n                        <Radio value=\"music\">音频</Radio>\n                        <Radio value=\"picture\">图片</Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item label='文件上传'>\n                    <Upload\n                        showUploadList={false}\n                        beforeUpload={this.beforeUpload}\n                    >\n                        <Button>\n                            <UploadOutlined/> 请选择要上传的文件\n                        </Button>\n                    </Upload>\n                    {\n                        this.state.file ?\n                            <div>已上传文件: {this.state.file.name}</div>\n                            :\n                            null\n                    }\n                </Form.Item>\n\n                <Form.Item name={'url'} style={{display:'none'}}>\n                    <Input></Input>\n                </Form.Item>\n\n\n                <Row style={{marginTop: \"10px\", fontSize: \"1em\", fontWeight: \"bold\"}}>\n                    <Col span={15} offset={6}>\n                        子条目标题\n                    </Col>\n                    <Col span=\"2\" offset=\"1\">\n                        移除\n                    </Col>\n                </Row>\n\n                <Form.List name=\"children\">\n                    {(fields, {add, remove}) => {\n                        return (\n                            <div>\n\n                                {fields.map((field, index) => (\n                                    <Row key={index} >\n\n                                        <Col span={6}></Col>\n\n                                        <Col span={18}>\n\n                                            <Row >\n\n                                                <Col span={20} >\n                                                    <Form.Item\n                                                        {...field}\n                                                        fieldKey={[field.fieldKey, 'name']}\n                                                        name={[field.name, 'name']} rules={[\n                                                        {\n                                                            required: true,\n                                                            message: '标题不能为空!',\n                                                        },\n                                                    ]}>\n                                                        <Input maxLength={200} placeholder={'请输入子条目标题'}></Input>\n\n\n                                                    </Form.Item>\n\n\n                                                    <Row style={{marginTop: \"10px\", fontSize: \"1em\", fontWeight: \"bold\"}}>\n                                                        <Col span=\"15\">\n                                                            选项文字\n                                                        </Col>\n                                                        <Col span=\"5\" offset=\"1\">\n                                                            分数\n                                                        </Col>\n                                                        <Col span=\"2\" offset=\"1\">\n                                                            移除\n                                                        </Col>\n                                                    </Row>\n                                                    <Form.List\n                                                        fieldKey={[field.fieldKey, 'answer']}\n                                                        name={[field.name, 'answer']}>\n                                                        {(fields, {add, remove}) => {\n                                                            return (\n                                                                <div>\n\n                                                                    {fields.map((field, index) => (\n                                                                        <Row key={index}>\n\n\n                                                                            <Col span=\"15\">\n                                                                                <Form.Item\n                                                                                    {...field}\n                                                                                    fieldKey={[field.fieldKey, 'key']}\n                                                                                    name={[field.key, 'key']} rules={[\n                                                                                    {\n                                                                                        required: true,\n                                                                                        message: '选项文字不能为空!',\n                                                                                    },\n                                                                                ]}>\n                                                                                    <Input maxLength={200}\n                                                                                           placeholder={'请输入选项文字'}></Input>\n                                                                                </Form.Item>\n                                                                            </Col>\n                                                                            <Col span={5} offset={1}>\n                                                                                <Form.Item\n                                                                                    name={[field.name, 'value']}\n                                                                                    fieldKey={[field.fieldKey, 'value']}\n                                                                                    rules={[{\n                                                                                        required: true,\n                                                                                        message: '分数不能为空!'\n                                                                                    }]}>\n                                                                                    <Select\n                                                                                        placeholder=\"请选择分数\"\n                                                                                        value={field.value}\n                                                                                    >\n                                                                                        {\n                                                                                            Util.questionScoreArray.map((item, index) => {\n                                                                                                return <Select.Option key={item}\n                                                                                                                      value={item}>{item}</Select.Option>\n                                                                                            })\n                                                                                        }\n\n                                                                                    </Select>\n                                                                                </Form.Item>\n                                                                            </Col>\n                                                                            <Col span={2} offset={1} style={{textAlign:'center'}}>\n                                                                                {\n                                                                                    fields.length>1?\n                                                                                        <DeleteFilled  style={{fontSize:'1.2em',marginTop:'0.4em'}}\n                                                                                                       onClick={() => {\n                                                                                                           remove(field.name);\n                                                                                                       }}\n                                                                                        />\n                                                                                        :\n                                                                                        null\n                                                                                }\n                                                                            </Col>\n                                                                        </Row>\n                                                                    ))}\n\n                                                                    <Form.Item>\n                                                                        <Button\n                                                                            type=\"dashed\"\n                                                                            onClick={() => {\n                                                                                add({\n                                                                                    answer:[{},{}]\n                                                                                });\n                                                                            }}\n                                                                            key={Math.random()}\n                                                                            block\n                                                                        >\n                                                                            <PlusOutlined/> 新增选项\n                                                                        </Button>\n                                                                    </Form.Item>\n                                                                </div>\n                                                            );\n                                                        }}\n                                                    </Form.List>\n\n                                                </Col>\n                                                <Col span={2} offset={1} style={{textAlign:'center'}}>\n                                                    {\n                                                        fields.length>1?\n                                                            <DeleteFilled  style={{fontSize:'1.2em',marginTop:'0.4em'}}\n                                                                           onClick={() => {\n                                                                               remove(field.name);\n                                                                           }}\n                                                            />\n                                                            :\n                                                            null\n                                                    }\n\n                                                </Col>\n                                            </Row>\n\n                                        </Col>\n\n\n                                    </Row>\n                                ))}\n\n                                <Row>\n                                    <Col span={15} offset={6}>\n                                        <Form.Item>\n                                            <Button\n                                                type=\"dashed\"\n                                                onClick={() => {\n                                                    add({\n                                                        answer:[{}]\n                                                    });\n                                                }}\n                                                block\n                                            >\n                                                <PlusOutlined/> 新增子条目\n                                            </Button>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n\n\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default Wenda;\n","import React, {Component} from 'react';\nimport {Button, Col, Form, Input, Modal, Row, Select, Checkbox} from \"antd\";\nimport store from \"../../../../store\";\nimport Util from \"../../../../assets/js/Util\";\nimport {addQuestion, updateQuestion, updateBatchQuestion,addBatchQuestion} from \"../../../../http/service\";\nimport Wenda from \"./questions/Wenda\";\nimport Zhidaoyu from \"./questions/Zhidaoyu\";\nimport Xuanzheti from \"./questions/Xuanzheti\";\nimport Matrix from \"./questions/Matrix\";\nimport Huang from \"./questions/Huang\";\nimport Multi from \"./questions/Multi\";\n\nclass Index extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.modalRef = React.createRef();\n        this.position = ''\n        this.state = {\n            tiaomu:{},\n            questionType: this.props.questionType,\n            questionList: this.props.questionList,\n            isEdit: this.props.isEdit,\n            measureId: this.props.measureId,\n            data: this.props.data,\n        }\n\n\n\n\n    }\n\n    componentDidMount() {\n        this.show({\n            type: this.state.questionType,\n            isEdit: this.state.isEdit,\n            data: this.state.data,\n\n        })\n\n    }\n\n    show = (obj) => {\n\n        this.resetItemModalInfo()\n\n        if(obj.data){\n            this.setState({\n                tiaomu:obj.data\n            })\n        }\n\n        this.position = ''\n    }\n\n    resetItemModalInfo = () => {\n        this.file = null;\n        this.setState({\n            tiaomu:{\n                name: '',\n                answer: [{\n                    name: '',\n                    value: 0\n                }],\n                children: [],\n                measureId: this.state.measureId\n\n\n            }\n        })\n\n\n    }\n\n\n\n\n\n    back = () => {\n        this.props.history.goBack()\n    }\n\n    check = () => {\n\n        this.modalRef.current.submit();\n\n\n    }\n\n    success = () => {\n        if (this.state.isEdit) {\n            Util.success(\"修改成功！\")\n        } else {\n            Util.success(\"新增成功！\")\n        }\n\n        this.freshParent()\n    }\n\n    freshParent = (data) => {\n        this.props.onClose();\n    }\n\n    hasNoQuestionIndexFromPosition2Bottom = (position) => {\n        let flag = false;\n        let questionList = this.state.questionList\n        for (let i = position; i < questionList.length - 1; i++) {\n            if (questionList[i].type === '2' || questionList[i].type === '3' || questionList[i].type === '4' || questionList[i].type === '5') {\n                flag = true;\n                break;\n            }\n        }\n\n        return !flag;\n    }\n    handleOnlyHaveIndexSort = (position) => {\n        let temp = Util.clone(this.state.questionList[position + 1]).indexSort;\n        for (let i = position + 1; i < this.state.questionList.length - 1; i++) {\n            this.state.questionList[i].indexSort = Util.clone(this.state.questionList[i + 1]).indexSort;\n        }\n\n        let questionList = this.state.questionList\n\n        questionList[questionList.length - 1].indexSort = temp;\n\n        this.setState({\n            questionList\n        })\n    }\n\n    moveFromBottom2GivenPosition = async (position, callback) => {\n\n        let bottomData = this.state.questionList[this.state.questionList.length - 1]\n        let questionList = this.state.questionList;\n        if ((bottomData.type === '0' || bottomData.type === '1') || this.hasNoQuestionIndexFromPosition2Bottom(position + 1)) {//只需要换indexSort\n            this.handleOnlyHaveIndexSort(position)\n        } else {\n            this.handleOnlyHaveIndexSort(position)\n\n\n            let newList = []\n            for (let i = position + 1; i < questionList.length; i++) {\n                if (questionList[i].type === '2' || questionList[i].type === '3' || questionList[i].type === '4' || questionList[i].type === '5') {\n                    newList.push(questionList[i])\n                }\n\n            }\n            if (newList.length > 0) {\n\n                let temp = Util.clone(newList[0]).questionIndex;\n\n                for (let i = 0; i < newList.length - 1; i++) {\n                    newList[i].questionIndex = Util.clone(newList[i + 1]).questionIndex;\n                }\n\n                newList[newList.length - 1].questionIndex = temp;\n\n            }\n        }\n\n        let last = questionList.pop()\n        questionList.splice(position + 1, 0, last)\n\n        this.setState({\n            questionList\n        })\n\n\n        if (callback) {\n            let list = [];\n\n            for (let i = position + 1; i < (this.state.questionList.length); i++) {\n                let temp = {\n                    id: this.state.questionList[i].id,\n                    indexSort: this.state.questionList[i].indexSort,\n                    questionIndex: this.state.questionList[i].questionIndex\n                }\n                list.push(temp);\n            }\n\n            updateBatchQuestion({\n                values: JSON.stringify(list),\n            }).then(data => {\n                callback()\n            }).catch(error => {\n                Util.error(error)\n            })\n\n        }\n\n\n    }\n\n\n    handleAfterAdd = (data, callback) => {\n        if (this.position || this.position === 0) {\n            let questionList = this.state.questionList;\n            questionList.push(data)\n            this.setState({\n                questionList\n            })\n            this.moveFromBottom2GivenPosition(this.position, callback)\n        } else {\n            callback()\n        }\n    }\n\n    getNextQuestionIndex=()=> {\n        let maxIndex = 0;\n        for (let i = 0; i < this.state.questionList.length; i++) {\n            let q = this.state.questionList[i];\n            if (q.questionIndex) {\n                maxIndex++;\n            }\n        }\n\n        return maxIndex + 1;\n    }\n\n\n    hasSameValue=(array)=> {\n        let set = new Set();\n        array.forEach(item => {\n            set.add(item.value)\n        })\n\n        return set.size < array.length;\n    }\n\n    addItem = (values) => {\n\n        this.position=values.position;\n\n\n\n        let type = this.state.questionType\n\n        this.setState({\n            tiaomu:Object.assign(this.state.tiaomu, values,{type})\n        })\n\n        let isEdit=this.state.isEdit\n\n        let method = isEdit ? updateQuestion : addQuestion\n\n        if (type === '0') {//问答\n\n            if (!this.state.tiaomu.name) {\n                Util.warning(\"请输入问答标题！\");\n                return;\n            }\n\n            Util.warning(\"操作中，请稍等！\")\n            method(this.state.tiaomu).then((data) => {\n\n                if (isEdit) {\n                    this.success()\n                } else {\n                    this.handleAfterAdd(data.data[0], this.success)\n                }\n\n\n            }).catch(error => {\n                Util.error(error)\n            })\n\n\n        } else if (type === '1') { //指导语\n\n            if (!this.state.tiaomu.name) {\n                Util.warning(\"请输入指导语！\");\n                return\n            }\n            Util.warning(\"操作中，请稍等！\")\n            method(this.state.tiaomu).then((data) => {\n                if (isEdit) {\n                    this.success()\n                } else {\n                    this.handleAfterAdd(data.data[0], this.success)\n                }\n            }).catch(error => {\n                Util.error(error)\n            })\n\n        } else if (type === '2') {//条目\n\n            if (!this.state.tiaomu.answer || this.state.tiaomu.answer.length === 0) {\n                Util.warning(\"请至少添加一条选项！\");\n                return\n            }\n\n            let answer = []\n            for (let i = 0; i < this.state.tiaomu.answer.length; i++) {\n                if (!this.state.tiaomu.answer[i].key) {\n                    Util.warning(\"有选项文字未填写，请检查！！\");\n                    return\n                }\n\n                let key = this.state.tiaomu.answer[i].key\n                let value = this.state.tiaomu.answer[i].value\n                answer.push({\n                    key: key,\n                    value: value\n                })\n\n\n            }\n\n            let next = () => {\n                //此处直接给this.tiaomu.answer赋值，会报错；暂不清楚原因。\n                let data = JSON.parse(JSON.stringify(this.state.tiaomu))\n                data.answer = JSON.stringify(answer)\n\n\n                if (isEdit) {\n                    method(data).then(() => {\n                        this.success()\n                    }).catch(error => {\n                        Util.error(error)\n                    });\n                } else {\n\n                    data.questionIndex = this.getNextQuestionIndex();\n\n                    let values = []\n\n                    let tempNameArray = this.state.tiaomu.name.split('\\n')\n\n                    let nameArray = []\n\n                    for (let i = 0; i < tempNameArray.length; i++) {\n                        if (tempNameArray[i]) {\n                            nameArray.push(tempNameArray[i])\n                        }\n                    }\n\n                    for (let i = 0; i < nameArray.length; i++) {\n                        let temp = JSON.parse(JSON.stringify(data))\n                        temp.name = nameArray[i]\n                        temp.questionIndex = temp.questionIndex + i;\n                        values.push(temp)\n                    }\n\n                    Util.warning(\"操作中，请稍等！\")\n\n                    addBatchQuestion( {\n                        values: JSON.stringify(values)\n                    }).then((data) => {\n                        data = data.data;\n                        if (this.position || this.position === 0) {\n                            for (let i = 0; i < data.length; i++) {\n                                if (i === data.length - 1) {\n                                    this.handleAfterAdd(data[i], this.success)\n                                } else {\n                                    this.handleAfterAdd(data[i], null)\n                                }\n\n                            }\n                        } else {\n                            this.success()\n                        }\n                    }).catch(error => {\n                        Util.error(error)\n                    });\n                }\n\n\n            }\n\n            if (this.hasSameValue(this.state.tiaomu.answer)) {\n                Util.confirm({\n                    title: '分数值有相同项，确认添加吗？',\n                    content: '',\n                    onOk: () => {\n                        next()\n                    },\n                    onCancel: () => {\n                    }\n                });\n            } else {\n                next();\n            }\n\n\n        } else if (type === '3') {//矩阵\n\n\n            let childrenAnswer = []\n\n            for (let i = 0; i < this.state.tiaomu.answer.length; i++) {\n\n                let key = this.state.tiaomu.answer[i].key\n                let value = this.state.tiaomu.answer[i].value\n                childrenAnswer.push({\n                    key: key,\n                    value: value\n                })\n            }\n\n            let next = () => {\n                //因子计算规则开关开的话才判断以下逻辑\n\n\n                let rule = ''\n\n\n                let children = this.state.tiaomu.children;\n                for (let i = 0; i < children.length; i++) {\n                    children[i].type = '2'\n                    children[i].answer = JSON.stringify(childrenAnswer)\n                    children[i].isReverse = children[i].isReverse?1:0\n\n                }\n\n                let data = JSON.parse(JSON.stringify(this.state.tiaomu))\n\n                data.isParent = 1;\n                data.children = JSON.stringify(children);\n                data.rule = rule;\n\n\n                if (!isEdit) {\n                    data.questionIndex = this.getNextQuestionIndex();\n                }\n                Util.warning(\"操作中，请稍等！\")\n\n                method(data).then((data) => {\n                    if (isEdit) {\n                        this.success()\n                    } else {\n                        this.handleAfterAdd(data.data[0], this.success)\n                    }\n                }).catch(error => {\n                    Util.error(error)\n                });\n            }\n\n\n            if (this.hasSameValue(this.state.tiaomu.answer)) {\n                Util.confirm({\n                    title: '分数值有相同项，确认添加吗？',\n                    content: '',\n                    onOk: () => {\n                        next()\n                    },\n                    onCancel: () => {\n                    }\n                });\n\n\n            } else {\n                next();\n            }\n\n\n        } else if (type === '4') {\n\n            let tiaomu=this.state.tiaomu;\n            tiaomu.type=type;\n\n            this.setState({\n                tiaomu:tiaomu\n            })\n\n            if (!this.state.tiaomu.url) {\n                Util.warning(\"请上传多媒体！\");\n                return\n            }\n\n            let next = () => {\n\n                let children = this.state.tiaomu.children;\n                for (let i = 0; i < children.length; i++) {\n                    children[i].type = '2'\n                    children[i].answer = JSON.stringify(children[i].answer)\n\n                }\n\n                let data = JSON.parse(JSON.stringify(this.state.tiaomu))\n\n                data.isParent = 1;\n                data.children = JSON.stringify(children);\n\n                if (!isEdit) {\n                    data.questionIndex = this.getNextQuestionIndex();\n                }\n                Util.warning(\"操作中，请稍等！\")\n                method(data).then((data) => {\n                    if (isEdit) {\n                        this.success()\n                    } else {\n                        this.handleAfterAdd(data.data[0], this.success)\n                    }\n                }).catch(error => {\n                    Util.error(error)\n                });\n            }\n\n\n            let sameCount = 0\n            for (let i = 0; i < this.state.tiaomu.children.length; i++) {\n                if (this.hasSameValue(this.state.tiaomu.children[i].answer)) {\n                    sameCount++;\n                }\n            }\n\n            if (sameCount > 0) {\n                Util.confirm({\n                    title: '分数值有相同项，确认添加吗？',\n                    content: '',\n                    onOk: () => {\n                        next()\n                    },\n                    onCancel: () => {\n                    }\n                });\n\n\n            } else {\n                next();\n            }\n\n        } else if (type === '5') {//测谎\n\n\n\n            if(!this.state.tiaomu.answer || this.state.tiaomu.answer.length!==2){\n                Util.warning('有且只能有两条选项')\n                return;\n            }\n\n            let answer = []\n            for (let i = 0; i < this.state.tiaomu.answer.length; i++) {\n\n\n                let key = this.state.tiaomu.answer[i].key\n                let value = this.state.tiaomu.answer[i].value\n                answer.push({\n                    key: key,\n                    value: value\n                })\n\n\n            }\n\n            let next = () => {\n                //此处直接给this.tiaomu.answer赋值，会报错；暂不清楚原因。\n                let data = JSON.parse(JSON.stringify(this.state.tiaomu))\n                data.answer = JSON.stringify(answer)\n\n\n                if (isEdit) {\n                    updateQuestion(data).then(() => {\n                        this.success()\n                    }).catch(error => {\n                        Util.error(error)\n                    });\n                } else {\n\n                    data.questionIndex = this.getNextQuestionIndex();\n\n                    let values = []\n\n                    let tempNameArray = this.state.tiaomu.name.split('\\n')\n\n                    let nameArray = []\n\n                    for (let i = 0; i < tempNameArray.length; i++) {\n                        if (tempNameArray[i]) {\n                            nameArray.push(tempNameArray[i])\n                        }\n                    }\n\n                    if (nameArray.length !== 2) {\n                        Util.warning(\"只能输入两条标题！！！\")\n                        return;\n                    }\n\n                    let uuid = Util.uuid();\n                    for (let i = 0; i < nameArray.length; i++) {\n                        let temp = JSON.parse(JSON.stringify(data))\n                        temp.name = nameArray[i]\n                        temp.lieDetect = uuid;\n                        temp.questionIndex = temp.questionIndex + i;\n                        values.push(temp)\n                    }\n\n                    Util.warning(\"操作中，请稍等！\")\n                    addBatchQuestion({\n                        values: JSON.stringify(values)\n                    }).then((data) => {\n                        data = data.data;\n                        if (this.position || this.position === 0) {\n                            for (let i = 0; i < data.length; i++) {\n                                if (i === data.length - 1) {\n                                    this.handleAfterAdd(data[i], this.success)\n                                } else {\n                                    this.handleAfterAdd(data[i], null)\n                                }\n\n                            }\n                        } else {\n                            this.success()\n                        }\n                    }).catch(error => {\n                        Util.error(error)\n                    });\n                }\n\n\n                this.hide()\n            }\n\n            if (this.hasSameValue(this.state.tiaomu.answer)) {\n                Util.confirm({\n                    title: '分数值有相同项，确认添加吗？',\n                    content: '',\n                    onOk: () => {\n                        next()\n\n\n                    },\n                    onCancel: () => {\n                    }\n                });\n            } else {\n                next();\n            }\n\n\n        }\n    }\n\n    render() {\n\n\n        let Question=null;\n        let title=null;\n\n        switch (this.state.questionType) {\n            case \"0\":\n                Question=Wenda;\n                title=\"问答\";\n                break;\n            case \"1\":\n                Question=Zhidaoyu;\n                title=\"指导语\";\n                break;\n            case \"2\":\n                Question=Xuanzheti;\n                title=\"选择题\";\n                break;\n            case \"3\":\n                Question=Matrix;\n                title=\"矩阵\";\n                break;\n            case \"4\":\n                Question=Multi;\n                title=\"多媒体矩阵\";\n                break;\n            case \"5\":\n                Question=Huang;\n                title=\"测谎选择题\";\n                break;\n\n        }\n\n        return (\n            <Modal\n                title={title}\n                width={800}\n                visible={true}\n                onOk={this.check}\n                onCancel={this.freshParent}\n            >\n                <Form ref={this.modalRef}\n                      labelCol={{span: 6}}\n                      onFinish={this.addItem}\n\n                >\n                    {\n                        !this.state.isEdit ?\n                            <Form.Item name=\"position\" label=\"添加位置\">\n                                <Select >\n                                    {\n                                        this.state.questionList.map((item, index) => {\n                                            return <Select.Option key={index}\n                                                           value={index}>{(index + 1) + '、' + item.name}</Select.Option>\n                                        })\n                                    }\n\n                                </Select>\n                            </Form.Item>\n                            :\n                            null\n                    }\n\n                    <Question data={this.state.tiaomu} isEdit={this.props.isEdit} form={this.modalRef}/>\n\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Index;\n","import React, {Component} from 'react';\nimport Util from \"../../../../assets/js/Util\";\nimport {Input, Row, Col, Radio} from \"antd\";\n\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lieObjIndex: this.props.lieObjIndex || {},\n            item: this.props.item || {},\n        }\n    }\n\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if(JSON.stringify(this.props.item)!==JSON.stringify(nextProps.item)){\n            this.setState({\n                item:nextProps.item,\n                lieObjIndex:nextProps.lieObjIndex||{}\n            })\n        }\n        return true;\n    }\n\n    render() {\n\n        const radioStyle = {\n            display: 'block',\n            height: '30px',\n            lineHeight: '30px',\n        };\n\n        return (\n            <Row>\n\n                {\n                    // 问答\n                    this.state.item.type === '0' ?\n                        (\n                            <Col span={20} offset={1} style={{marginBottom: '20px'}}>\n                                <div>{this.state.item.name}</div>\n                                <Input.TextArea rows={2}/>\n                            </Col>\n                        )\n                        :\n                        (\n                            // 指导语\n                            this.state.item.type === '1' ?\n                                (\n                                    <Col span={20} offset={1} style={{marginBottom: '20px'}}>\n                                        <div>\n                                            <Input.TextArea autoSize value={this.state.item.name}/>\n                                        </div>\n                                    </Col>\n                                )\n                                :\n                                (\n                                    // 条目\n                                    this.state.item.type === '2' ?\n                                        (\n                                            <Col span={20} offset={1} style={{marginBottom: '20px'}}>\n                                                <div style={{marginBottom: \"2px\"}}>\n                                                    {(this.state.item.questionIndex) + '、' + this.state.item.name}\n                                                </div>\n                                                <Radio.Group>\n                                                    {\n                                                        this.state.item.answer.map((item, index) => {\n                                                            return <Radio key={index} style={radioStyle} value={index}>\n                                                                {item.key}\n                                                            </Radio>\n                                                        })\n                                                    }\n\n                                                </Radio.Group>\n\n\n                                            </Col>\n                                        )\n                                        :\n                                        (\n                                            // 矩阵\n                                            this.state.item.type === '3' ?\n                                                (\n                                                    <Col span={20} offset={1} style={{marginBottom: '20px'}}>\n                                                        <div style={{marginBottom: \"2px\"}}>\n                                                            {(this.state.item.questionIndex) + '、' + this.state.item.name}\n                                                        </div>\n                                                        {\n                                                            this.state.item.children.map((child, childIndex) => {\n                                                                return <div key={childIndex} style={{marginLeft:'1em'}}>\n                                                                    <p>{((childIndex + 1)) + '、' + child.name}</p>\n                                                                    <Radio.Group>\n                                                                        {\n                                                                            this.state.item.answer.map((item, index) => {\n                                                                                return <Radio key={index} style={radioStyle}\n                                                                                              value={index}>\n                                                                                    {item.key}\n                                                                                </Radio>\n                                                                            })\n                                                                        }\n\n                                                                    </Radio.Group>\n                                                                </div>\n                                                            })\n                                                        }\n\n                                                    </Col>\n                                                )\n                                                :\n                                                (\n\n                                                    // 多媒体\n                                                    this.state.item.type === '4' ?\n                                                        (\n                                                            <Col span={20} offset={1} style={{marginBottom: '20px'}}>\n                                                                <div style={{marginBottom: \"2px\"}}>\n                                                                    {(this.state.item.questionIndex) + '、' + this.state.item.name}\n                                                                </div>\n                                                                {\n                                                                    Util.suffixArrayOfMusic.indexOf(this.state.item.url.split('.')[this.state.item.url.split('.').length-1])>-1?\n                                                                        <audio controls src={Util.backendUrl+this.state.item.url}>\n                                                                            您的浏览器不支持 audio 标签。\n                                                                        </audio>\n                                                                        :\n                                                                        <img style={{maxHeight: \"10em\"}} src={Util.backendUrl+this.state.item.url}/>\n                                                                }\n                                                                {\n                                                                    this.state.item.children.map((child, childIndex) => {\n                                                                        return <div key={childIndex} style={{marginLeft:'1em'}}>\n                                                                            <p>{((childIndex + 1)) + '、' + child.name}</p>\n                                                                            <Radio.Group>\n                                                                                {\n                                                                                    this.state.item.answer.map((item, index) => {\n                                                                                        return <Radio key={index} style={radioStyle}\n                                                                                                      value={index}>\n                                                                                            {item.key}\n                                                                                        </Radio>\n                                                                                    })\n                                                                                }\n\n                                                                            </Radio.Group>\n                                                                        </div>\n                                                                    })\n                                                                }\n\n                                                            </Col>\n                                                        )\n                                                        :\n                                                        (\n\n                                                            // 测谎\n                                                            this.state.item.type === '5' ?\n                                                                (\n                                                                    <Col span={20} offset={1} style={{marginBottom: '20px'}}>\n                                                                        <div style={{marginBottom: \"2px\"}}>\n                                                                            {(this.state.item.questionIndex)+'、'+this.state.item.name}\n                                                                            <span style={{color:'#19be6b'}}>(与条目{this.state.lieObjIndex[this.state.item.id][\"questionIndex\"]}为测谎对)</span>\n                                                                        </div>\n                                                                        <Radio.Group>\n                                                                            {\n                                                                                this.state.item.answer.map((item, index) => {\n                                                                                    return <Radio key={index} style={radioStyle} value={index}>\n                                                                                        {item.key}\n                                                                                    </Radio>\n                                                                                })\n                                                                            }\n\n                                                                        </Radio.Group>\n                                                                    </Col>\n                                                                )\n                                                                :\n                                                                (\n\n                                                                    null\n                                                                )\n                                                        )\n                                                )\n                                        )\n                                )\n                        )\n                }\n            </Row>\n        );\n    }\n}\n\nexport default Index;\n","import React, {Component} from 'react';\nimport Util from \"../../../../assets/js/Util\";\nimport {Input, Row, Col, Radio, Button, Space} from \"antd\";\nimport {\n    DeleteFilled,\n    UpCircleFilled,\n    DownCircleFilled,\n    StepBackwardFilled,\n    StepForwardFilled\n} from \"@ant-design/icons\";\nimport './index.less'\nimport {deleteQuestion, updateBatchQuestion, addQuestion, updateQuestion} from \"../../../../http/service\";\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.sortArray = ['2', '3', '4', '5']\n        this.state = {\n            item: this.props.item || {},\n            index: this.props.index || 0,\n            measureId: this.props.measureId,\n            questionList: this.props.questionList || [],\n            originalQuestionList: this.props.originalQuestionList || [],\n        }\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (JSON.stringify(this.props.questionList) !== JSON.stringify(prevProps.questionList)) {\n            this.setState({\n                questionList: this.props.questionList\n            })\n        }\n\n        if (JSON.stringify(this.props.originalQuestionList) !== JSON.stringify(prevProps.originalQuestionList)) {\n            this.setState({\n                originalQuestionList: this.props.originalQuestionList\n            })\n        }\n\n        if (this.props.index !== prevProps.index) {\n            this.setState({\n                index: this.props.index\n            })\n        }\n\n        if (JSON.stringify(this.props.item) !== JSON.stringify(prevProps.item)) {\n            this.setState({\n                item: this.props.item\n            })\n        }\n    }\n\n    /**\n     * 编辑条目（各种类型的条目）\n     * @param item\n     */\n    editQuestion = (item) => {\n        if (item.lieDetect) {\n            Util.warning(\"测谎题无法修改！如需修改请删除后重新添加！\")\n            return;\n        }\n\n        this.props.editQuestion(item);\n\n\n    }\n    getNextQuestionIndex = () => {\n        let maxIndex = 0;\n        for (let i = 0; i < this.state.questionList.length; i++) {\n            let q = this.state.questionList[i];\n            if (q.questionIndex) {\n                maxIndex++;\n            }\n        }\n\n        return maxIndex + 1;\n    }\n    /**\n     * 复制条目。矩阵类型的只复制父，不复制子。\n     * @param item\n     * @param index\n     */\n    cloneQuestion = (item) => {\n\n        if (item.type === '5') {\n            Util.warning(\"测谎选择题无法复制！\")\n            return;\n        }\n\n        Util.confirm({\n            title: '您确认复制吗？',\n            content: '',\n            onOk: () => {\n                item = JSON.parse(JSON.stringify(item))\n\n                delete item.id;\n                delete item.createtime;\n                delete item.indexSort;\n\n                item.name += '复制';\n\n                if (item.questionIndex !== null) {\n                    item.questionIndex = this.getNextQuestionIndex()\n                }\n\n                if (item.rule) {\n                    item.rule = JSON.stringify(item.rule)\n                }\n\n                if (item.children && item.children.length > 0) {\n                    for (let i = 0; i < item.children.length; i++) {\n                        delete item.children[i].id;\n                        delete item.children[i].parentId;\n                        delete item.children[i].createtime;\n                        if (item.children[i].answer && (typeof item.children[i].answer) === 'object') {\n                            item.children[i].answer = JSON.stringify(item.children[i].answer)\n                        }\n\n                    }\n                }\n\n                if (item.children && item.children.length > 0) {\n                    item.children = JSON.stringify(item.children)\n                }\n\n\n                if (item.answer && item.type === '2') {\n                    item.answer = JSON.stringify(item.answer)\n                }\n\n                addQuestion(item).then((data) => {\n                    Util.success(\"复制成功！\")\n                    this.freshParent()\n\n\n                }).catch(error => {\n                    Util.error(error)\n                })\n\n            },\n            onCancel: () => {\n            }\n        });\n\n    }\n    setMust = (item) => {\n        if (item.must === '0') {\n            item.must = '1'\n        } else {\n            item.must = '0'\n        }\n\n        updateQuestion({\n            id: item.id,\n            must: item.must,\n            measureId: this.state.measureId\n        }).then(data => {\n            Util.success(\"修改成功\")\n            this.freshParent()\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n    freshParent = (data) => {\n        this.props.init();\n    }\n    showSetLieTeamModal = (item) => {\n        this.props.showSetLieTeamModal(item);\n    }\n    showSetGivenAnswerModal = (item) => {\n        this.props.showSetGivenAnswerModal(item);\n    }\n    deleteQuestion = (question) => {\n        let tip = \"您确认删除吗？\"\n        if (question.type === '5') {\n            tip = \"该测谎题对应的关联题目也会一并删除，您确认吗？\"\n        }\n\n        Util.confirm({\n            title: tip,\n            content: '',\n            onOk: () => {\n                Util.warning(\"删除中，请稍等！\")\n                this.realDelete(question)\n\n                if (question.type === '5') {\n                    this.realDelete(this.getQuestionByLieDetect(question))\n                }\n            },\n            onCancel: () => {\n            }\n        });\n\n\n    }\n    getQuestionByLieDetect = (question) => {\n        let obj = {}\n        let lieDetect = question.lieDetect\n        for (let i = 0; i < this.state.questionList.length; i++) {\n            let item = this.state.questionList[i]\n            if (item.id !== question.id && item.lieDetect === lieDetect) {\n                obj = item;\n                break;\n            }\n\n        }\n        return obj;\n    }\n    realDelete = (question) => {\n        deleteQuestion({\n            id: question.id,\n            measureId: this.state.measureId\n        }).then(() => {\n            //如果删除的是2、3，则后续的questionIndex都减少1\n\n            if (question.type === '2' || question.type === '3' || question.type === '4' || question.type === '5') {\n                let list = [];\n\n                let questionList = this.state.questionList;\n                for (let i = 0; i < questionList.length; i++) {\n                    if ((questionList[i].type === '2' || questionList[i].type === '3' || questionList[i].type === '4' || questionList[i].type === '5') && questionList[i].questionIndex > question.questionIndex) {\n                        list.push({\n                            id: questionList[i].id,\n                            questionIndex: --questionList[i].questionIndex\n\n                        })\n                    }\n                }\n\n                if (list.length > 0) {\n                    updateBatchQuestion({\n                        values: JSON.stringify(list),\n                    }).then(() => {\n                        Util.success(\"删除成功！\")\n                        this.freshParent()\n                    }).catch(error => {\n                        Util.error(error)\n                    })\n                } else {\n                    Util.success(\"删除成功！\")\n                    this.freshParent()\n                }\n            } else {\n                Util.success(\"删除成功！\")\n                this.freshParent()\n            }\n\n        }).catch(error => {\n            Util.error(error)\n        })\n    }\n    upOrDown = (item, index, opType) => {\n        let otherIndex = opType === 'up' ? (index - 1) : (index + 1);\n        // 上下货下上两个的order互换下。\n        //注意questionIndex的序号也要根据条件来换。除非当前条目和它上边问题的类型都是2、3才需要换\n\n        let originalQuestionList = JSON.parse(JSON.stringify(this.state.originalQuestionList))\n\n        let prev_type = originalQuestionList[otherIndex].type\n        let type = originalQuestionList[index].type\n\n        if (this.sortArray.includes(prev_type) && this.sortArray.includes(type)) {\n            let sideIndex = originalQuestionList[otherIndex].questionIndex\n\n            originalQuestionList[otherIndex].questionIndex = originalQuestionList[index].questionIndex\n\n            originalQuestionList[index].questionIndex = sideIndex\n        }\n\n        let sideIndex = originalQuestionList[otherIndex].indexSort\n\n        originalQuestionList[otherIndex].indexSort = originalQuestionList[index].indexSort\n\n        originalQuestionList[index].indexSort = sideIndex\n\n\n        Promise.all([updateQuestion({\n            id: originalQuestionList[index].id,\n            measureId: this.state.measureId,\n            indexSort: originalQuestionList[index].indexSort,\n            questionIndex: originalQuestionList[index].questionIndex\n        }), updateQuestion({\n            id: originalQuestionList[otherIndex].id,\n            measureId: this.state.measureId,\n            indexSort: originalQuestionList[otherIndex].indexSort,\n            questionIndex: originalQuestionList[otherIndex].questionIndex\n        })]).then(() => {\n            Util.success('操作成功')\n            this.freshParent()\n        }).catch(error => {\n            Util.error(error)\n        });\n\n    }\n\n    hasQuestionIndexBeforeIndex = (index) => {\n        let flag = false;\n        for (let i = 0; i < index; i++) {\n            let type = this.state.questionList[i].type\n            if (this.sortArray.includes(type)) {\n                flag = true;\n                break\n            }\n        }\n        return flag\n    }\n    top = (item, index) => {\n\n        let questionList = this.state.questionList\n\n        Util.warning(\"操作中，请稍等。。\")\n        //首先indexSort，index之前都变为他们后边的，缓存第一个。将第一个赋值给当前要移动的。\n\n        let topIndexsort = Util.clone(questionList[0]).indexSort\n\n        for (let i = 0; i < index; i++) {\n            questionList[i].indexSort = Util.clone(questionList[i + 1]).indexSort\n        }\n\n        questionList[index].indexSort = topIndexsort;\n\n        //当前是2、3且当前上边有2、3时才需要操作questionIndex\n        let type = questionList[index].type\n        if (this.hasQuestionIndexBeforeIndex(index) && this.sortArray.includes(type)) {\n            let newList = []\n\n            for (let i = 0; i <= index; i++) {\n                let type = questionList[i].type\n                if (this.sortArray.includes(type)) {\n                    newList.push(questionList[i])\n                }\n            }\n\n            let topQuestionIndex = Util.clone(newList[0]).questionIndex\n\n            for (let i = 0; i < (newList.length - 1); i++) {\n                newList[i].questionIndex = Util.clone(newList[i + 1]).questionIndex\n            }\n\n            newList[newList.length - 1].questionIndex = topQuestionIndex;\n\n\n            for (let i = 0; i < newList.length; i++) {\n                for (let j = 0; j <= index; j++) {\n                    if (questionList[j].id === newList[i].id) {\n                        questionList[j] = newList[i];\n                        break;\n                    }\n                }\n            }\n        }\n\n        let list = [];\n\n        for (let i = 0; i <= index; i++) {\n            let temp = {\n                id: questionList[i].id,\n                indexSort: questionList[i].indexSort,\n                questionIndex: questionList[i].questionIndex\n            }\n            list.push(temp);\n        }\n\n        updateBatchQuestion({\n            values: JSON.stringify(list),\n        }).then(() => {\n            Util.success(\"操作成功！\")\n            this.freshParent()\n        }).catch(error => {\n            Util.error(error)\n        })\n\n    }\n\n    hasQuestionIndexAfterIndex = (index) => {\n        let flag = false;\n        for (let i = (index + 1); i < this.state.questionList.length; i++) {\n            let type = this.state.questionList[i].type\n            if (this.sortArray.includes(type)) {\n                flag = true;\n                break\n            }\n        }\n        return flag\n    }\n\n\n    bottom = (item, index) => {\n\n        let questionList = this.state.questionList\n\n        Util.warning(\"操作中，请稍等。。\")\n        //首先indexSort，index之前都变为他们后边的，缓存第一个。将第一个赋值给当前要移动的。\n\n        let bottomIndexsort = Util.clone(questionList[questionList.length - 1]).indexSort\n\n        for (let i = (questionList.length - 1); i > index; i--) {\n            questionList[i].indexSort = Util.clone(questionList[i - 1]).indexSort\n        }\n\n        questionList[index].indexSort = bottomIndexsort;\n\n        //当前是2、3且当前上边有2、3时才需要操作questionIndex\n        let type = questionList[index].type\n        if (this.hasQuestionIndexAfterIndex(index) && this.sortArray.includes(type)) {\n            let newList = []\n\n            for (let i = (questionList.length - 1); i >= index; i--) {\n                let type = questionList[i].type\n                if (this.sortArray.includes(type)) {\n                    newList.push(questionList[i])\n                }\n            }\n            let bottomQuestionIndex = Util.clone(newList[0]).questionIndex\n\n            for (let i = 0; i < (newList.length - 1); i++) {\n                newList[i].questionIndex = Util.clone(newList[i + 1]).questionIndex\n            }\n\n            newList[newList.length - 1].questionIndex = bottomQuestionIndex;\n\n        }\n\n        let list = [];\n\n        for (let i = index; i < (questionList.length); i++) {\n            let temp = {\n                id: questionList[i].id,\n                indexSort: questionList[i].indexSort,\n                questionIndex: questionList[i].questionIndex\n            }\n            list.push(temp);\n        }\n\n        updateBatchQuestion({\n            values: JSON.stringify(list),\n        }).then(() => {\n            Util.success(\"操作成功！\")\n            this.freshParent()\n        }).catch(error => {\n            Util.error(error)\n        })\n\n    }\n\n\n    render() {\n\n        const radioStyle = {\n            display: 'block',\n            height: '30px',\n            lineHeight: '30px',\n        };\n\n        return (\n            <div>\n\n                <Space size=\"middle\">\n                    <Button size={\"small\"} type={\"primary\"}\n                            onClick={this.editQuestion.bind(this, this.state.item)}>修改</Button>\n                    <Button size={\"small\"} type={\"primary\"} style={{marginRight: '1em'}}\n                            onClick={this.cloneQuestion.bind(this, this.state.item)}>复制</Button>\n                </Space>\n\n                <div style={{display:'inline-block',width:'7em'}}>\n                    {\n                        this.state.item.type !== '1' ?\n                            <Button style={{marginRight: '1em'}} size={\"small\"} type={\"primary\"} onClick={this.setMust.bind(this, this.state.item)}>\n                                {\n                                    this.state.item.must === '0' ? '设为非必填' : '设为必填'\n                                }\n                            </Button>\n                            : null\n                    }\n                </div>\n                {/*<div style={{display:'inline-block',width:'8em'}}>*/}\n                {/*{*/}\n                {/*    (this.state.item.type === '2' || this.state.item.type === '3' || this.state.item.type === '4') ?*/}\n                {/*        <Button style={{marginRight: '1em'}} size={\"small\"} type={\"primary\"}*/}\n                {/*                onClick={this.showSetGivenAnswerModal.bind(this, this.state.item)}>*/}\n                {/*            设置特定答案*/}\n                {/*        </Button>*/}\n                {/*        : null*/}\n                {/*}*/}\n                {/*</div>*/}\n                {/*    <div style={{display:'inline-block',width:'7em'}}>*/}\n                {/*{*/}\n                {/*    (this.state.item.type === '2') ?*/}\n                {/*        <Button style={{marginRight: '1em'}} size={\"small\"} type={\"primary\"}*/}\n                {/*                onClick={this.showSetLieTeamModal.bind(this, this.state.item)}>*/}\n                {/*            设置测谎对*/}\n                {/*        </Button>*/}\n                {/*        : null*/}\n                {/*}*/}\n                {/*    </div>*/}\n\n                <div className='icon-wrapper'>\n                    {\n                        (this.state.index > 0) ?\n                            <UpCircleFilled\n                                onClick={this.upOrDown.bind(this, this.state.item, this.state.index, 'up')}/> : null\n                    }\n\n                </div>\n                <div className='icon-wrapper'>\n                    {\n                        (this.state.index < (this.state.questionList.length - 1)) ?\n                            <DownCircleFilled\n                                onClick={this.upOrDown.bind(this, this.state.item, this.state.index)}/> : null\n                    }\n                </div>\n                <div className='icon-wrapper'>\n                    {\n                        (this.state.index > 0 && this.state.questionList.length > 2) ?\n                            <StepBackwardFilled rotate={90}\n                                                onClick={this.top.bind(this, this.state.item, this.state.index)}/> : null\n                    }\n                </div>\n                <div className='icon-wrapper'>\n                    {\n                        (this.state.index < (this.state.questionList.length - 1) && this.state.questionList.length > 2) ?\n                            <StepForwardFilled rotate={90}\n                                               onClick={this.bottom.bind(this, this.state.item, this.state.index)}/> : null\n                    }\n                </div>\n\n                <div className='icon-wrapper'>\n                    <DeleteFilled className='icon-common' onClick={this.deleteQuestion.bind(this, this.state.item)}/>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Index;\n","import React, {Component} from 'react';\nimport {Button, Col, Form, Input, Modal, Row, Select, Checkbox} from \"antd\";\nimport store from \"../../../../store\";\nimport Util from \"../../../../assets/js/Util\";\nimport {addQuestion, updateQuestion, updateBatchQuestion,addBatchQuestion} from \"../../../../http/service\";\n\nclass Index extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.modalRef = React.createRef();\n        this.state = {\n            measureId: this.props.measureId,\n            item: this.props.item,\n        }\n\n\n    }\n\n\n\n\n    back = () => {\n        this.props.history.goBack()\n    }\n\n    check = () => {\n\n        this.modalRef.current.submit();\n\n\n    }\n\n    success = () => {\n        if (this.state.isEdit) {\n            Util.success(\"修改成功！\")\n        } else {\n            Util.success(\"新增成功！\")\n        }\n\n        this.freshParent()\n    }\n\n    freshParent = (data) => {\n        this.props.onClose();\n    }\n\n\n\n\n    addItem=(values)=>{\n        let givenAnswer=values.givenAnswer;\n\n        if (!Util.isValidNum(givenAnswer)) {\n            Util.warning(\"请输入合法数字！\")\n            return;\n        }\n\n        let url = 'question/update'\n\n        updateQuestion({\n            id: this.state.item.id,\n            givenAnswer,\n            measureId:this.state.measureId\n        }).then(data => {\n            Util.success(\"操作成功！\")\n\n            this.props.onClose();\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n\n    render() {\n\n\n        return (\n            <Modal\n                title=\"设置特定答案\"\n                width={600}\n                visible={true}\n                onOk={this.check}\n                onCancel={this.freshParent}\n            >\n                <Form ref={this.modalRef}\n                      labelCol={{span: 6}}\n                      onFinish={this.addItem}\n\n                >\n                    <Form.Item name=\"givenAnswer\" label=\"特定答案\" rules={[{required: true, message: '请输入特定答案'}]}>\n                        <Input placeholder={\"请输入特定答案值\"}/>\n                    </Form.Item>\n\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Button, Col, Form, Input, Modal, Row, Select, Checkbox, Radio} from \"antd\";\nimport store from \"../../../../store\";\nimport Util from \"../../../../assets/js/Util\";\nimport {addQuestion, updateQuestion, updateBatchQuestion,addBatchQuestion} from \"../../../../http/service\";\n\nclass Index extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.modalRef = React.createRef();\n        this.state = {\n            measureId: this.props.measureId,\n            item: this.props.item,\n            isShow:this.props.isShow,\n            filtedQuestionList:this.getFiltedQuestionList(this.props.item,this.props.questionList)\n        }\n\n\n    }\n\n    getFiltedQuestionList=(item,questionList)=>{\n        if(questionList&&questionList.length>0){\n            var newquestionList=[]\n            for(let i=0;i<questionList.length;i++){\n                if(questionList[i][\"type\"]==\"2\"&&questionList[i][\"id\"]!=item.id){\n                    newquestionList.push(questionList[i])\n                }\n            }\n            return newquestionList\n        }\n        return []\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.isShow !== prevProps.isShow) {\n            this.setState({\n                isShow: this.props.isShow\n            })\n        }\n    }\n\n\n    back = () => {\n        this.props.history.goBack()\n    }\n\n    check = () => {\n\n        this.modalRef.current.submit();\n\n\n    }\n\n\n\n\n    addItem=(values)=>{\n        let questionIndex=values.questionIndex;\n        let lieRule=values.lieRule;\n\n\n        let uuid = Util.uuid();\n        var lieObj=this.state.filtedQuestionList[questionIndex]\n        var params=[]\n        params.push({id:this.state.item.id,type:5,lieDetect:uuid,lieRule:lieRule})\n        params.push({id:lieObj.id,type:5,lieDetect:uuid,lieRule:lieRule})\n\n        updateBatchQuestion({\n            values:JSON.stringify(params)\n        }).then(data => {\n            Util.success(\"操作成功！\")\n\n            this.props.onClose();\n\n        }).catch(err => {\n            Util.error(err)\n        })\n    }\n\n\n    render() {\n\n\n        return (\n            <Modal\n                title=\"设置测谎对\"\n                width={800}\n                visible={this.state.isShow}\n                onOk={this.check}\n                onCancel={this.props.onClose}\n            >\n                <Form ref={this.modalRef}\n                      labelCol={{span: 6}}\n                      onFinish={this.addItem}\n\n                >\n                    <Form.Item name=\"questionIndex\" label=\"测谎对\" rules={[{required: true, message: '请选择'}]}>\n                        <Select\n                            placeholder=\"请选择\"\n                            value={this.state.item.value}\n                        >\n                            {\n                                this.state.filtedQuestionList.map((item, index) => {\n                                    return <Select.Option key={index}\n                                                          value={index}>{(item.questionIndex)+'、'+item.name}</Select.Option>\n                                })\n                            }\n\n                        </Select>\n                    </Form.Item>\n                    <Form.Item name=\"lieRule\" label=\"计分规则\"  rules={[\n                        {\n                            required: true,\n                            message: '请选择计分规则!',\n                        },\n                    ]}>\n                        <Radio.Group>\n                            <Radio value={0}>相同选项计分</Radio>\n                            <Radio value={1}>不同选项计分</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Index;\n","import Home from '../views/home'\n\nimport Login from '../views/user/login'\nimport Register from '../views/user/register'\nimport User_Center from '../views/user/center'\nimport User_Modifypass from '../views/user/modifypass'\n\n\nimport Division_List from '../views/division/list'\nimport Division_operate from '../views/division/operate'\nimport Division_adminList from '../views/division/adminList'\nimport Division_adminOperate from '../views/division/adminOperate'\n\n\nimport EthicsNotice_List from '../views/ethicsNotice/list'\nimport EthicsNotice_Operate from '../views/ethicsNotice/operate'\n\n\nimport BlackList from '../views/blacklist/list'\n\n\nimport Complain_TherapistList from '../views/complain/therapistList'\nimport Complain_UserList from '../views/complain/userList'\n\n\nimport SchoolType from '../views/base/schoolType'\nimport QualificationType from '../views/base/qualificationType'\nimport ConsultType from '../views/base/consultType'\nimport LevelType from '../views/base/levelType'\nimport MannerType from '../views/base/mannerType'\n\n\n\n\nimport CaseManager_List from '../views/caseManager/list'\nimport CaseManager_Operate from '../views/caseManager/operate'\n\nimport PreCheck_List from '../views/preCheck/list'\nimport PreCheck_Operate from '../views/preCheck/operate'\n\nimport Station_List from '../views/station/list'\nimport Station_Operate from '../views/station/operate'\nimport Station_RelateTherapist from '../views/station/relateTherapist'\n\nimport Therapist_AppointSet from '../views/therapist/appointSet'\nimport Therapist_FeeSet from '../views/therapist/feeSet'\nimport Therapist_Revenue from '../views/therapist/revenue'\nimport Therapist_PeriodSet from '../views/therapist/periodSet'\nimport Therapist_Occupy from '../views/therapist/occupy'\nimport Therapist_complaint from '../views/therapist/complaint'\nimport Therapist_OrderList from '../views/therapist/orderList'\n\nimport Room_List from '../views/room/list'\nimport Room_Operate from '../views/room/operate'\nimport Room_PeriodSet from '../views/room/periodSet'\nimport Room_Occupy from '../views/room/occupy'\n\n\nimport Refund_List from '../views/refund/list'\n\nimport Measure_List from '../views/measure/list'\nimport Measure_Operate from '../views/measure/operate'\nimport Measure_Detail from '../views/measure/detail'\n\n\n\n\n\n\n\n\n\nconst routers = [\n    {path: '/', component: Home},\n    {path: '/user/register', component: Register},\n    {path: '/user/login', component: Login},\n    {path: '/user/center', component: User_Center},\n    {path: '/user/modifypass', component: User_Modifypass},\n\n    {path: '/division/list', component: Division_List},\n    {path: '/division/operate', component: Division_operate},\n    {path: '/division/adminList', component: Division_adminList},\n    {path: '/division/adminOperate', component: Division_adminOperate},\n\n    {path: '/ethicsNotice/list', component: EthicsNotice_List},\n    {path: '/ethicsNotice/operate', component: EthicsNotice_Operate},\n\n\n    {path: '/blacklist/list', component: BlackList},\n\n    {path: '/complain/therapistList', component: Complain_TherapistList},\n    {path: '/complain/userList', component: Complain_UserList},\n\n    {path: '/base/schoolType', component: SchoolType},\n    {path: '/base/qualificationType', component: QualificationType},\n    {path: '/base/consultType', component: ConsultType},\n    {path: '/base/levelType', component: LevelType},\n    {path: '/base/mannerType', component: MannerType},\n\n\n\n    {path: '/caseManager/list', component: CaseManager_List},\n    {path: '/caseManager/operate', component: CaseManager_Operate},\n\n    {path: '/preCheck/list', component: PreCheck_List},\n    {path: '/preCheck/operate', component: PreCheck_Operate},\n\n    {path: '/station/list', component: Station_List},\n    {path: '/station/operate', component: Station_Operate},\n    {path: '/station/relateTherapist', component: Station_RelateTherapist},\n\n    {path: '/therapist/appointSet', component: Therapist_AppointSet},\n    {path: '/therapist/feeSet', component: Therapist_FeeSet},\n    {path: '/therapist/revenue', component: Therapist_Revenue},\n    {path: '/therapist/periodSet', component: Therapist_PeriodSet},\n    {path: '/therapist/occupy', component: Therapist_Occupy},\n    {path: '/therapist/complaint', component: Therapist_complaint},\n    {path: '/therapist/orderList', component: Therapist_OrderList},\n\n    {path: '/room/list', component: Room_List},\n    {path: '/room/operate', component: Room_Operate},\n    {path: '/room/periodSet', component: Room_PeriodSet},\n    {path: '/room/occupy', component: Room_Occupy},\n\n    {path: '/refund/list', component: Refund_List},\n\n    {path: '/measure/list', component: Measure_List},\n    {path: '/measure/operate', component: Measure_Operate},\n    {path: '/measure/detail', component: Measure_Detail},\n\n\n\n\n\n]\n\nexport default routers;\n","import React, {Component} from 'react';\nimport {getQuestionList, getMeasureById} from \"../../../http/service\";\nimport store from \"../../../store\";\nimport {Button, Col, Row, Space} from \"antd\";\nimport Header from '../components/Header'\nimport QuestionDetailModal from '../components/QuestionDetailModal'\nimport QuestionDisplay from '../components/QuestionDisplay'\nimport QuestionOperate from '../components/QuestionOperate'\nimport GivenAnswer from '../components/GivenAnswer'\nimport SetLieTeam from '../components/SetLieTeam'\n\nclass Index extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.measureId = this.props.location.state.measureId,\n            this.state = {\n                isOperator: false,\n                questionList: [],\n                originalQuestionList: [],\n                lieObjIndex: {},\n                measureId: this.props.location.state.measureId,\n                // isQuery:(this.props.location.state && this.props.location.state.isQuery==='true')?true:false,\n                isQuery: true,\n                formItem: {\n                    title: '',\n                    items: []\n                },\n                role: '',\n                isShowQuestionDetailModal: false,\n                isShowGivenAnswerModal: false,\n                isShowLieTeamModal: false,\n                givenAnswerItem:{},\n                questionType: 0,\n                isEdit: false,\n                currentItem:{}\n            }\n    }\n\n\n    componentDidMount() {\n        this.init()\n    }\n\n    init = () => {\n        this.getList()\n        this.getMeasureById()\n    }\n\n    getList = () => {\n        getQuestionList({\n            measureId: this.measureId\n        }).then(data => {\n            if (store.getState().role === data.role) {\n                this.setState({\n                    isOperator: true\n                })\n            }\n\n\n            //获取测谎对\n            let lieObj = {}\n            let questionList = data.data;\n            for (let i = 0; i < questionList.length; i++) {\n\n                if (questionList[i].type === '5') {\n                    let uuid = questionList[i].lieDetect\n                    if (uuid && lieObj[uuid]) {\n                        let lieObjIndex = this.state.lieObjIndex\n                        lieObjIndex[questionList[i].id] = lieObj[uuid]\n                        lieObjIndex[lieObj[uuid][\"id\"]] = questionList[i]\n\n                        this.setState({\n                            lieObjIndex\n                        })\n                    } else {\n                        lieObj[uuid] = questionList[i]\n                    }\n                }\n\n\n                if (questionList[i].answer && questionList[i].type !== '3' && questionList[i].answer && questionList[i].type !== '4') {\n                    questionList[i].answer = JSON.parse(questionList[i].answer)\n                }\n\n                if (questionList[i].type === '3' || questionList[i].type === '4') {\n                    if (questionList[i].children.length > 0) {\n                        questionList[i].answer = JSON.parse(questionList[i].children[0].answer)\n                    }\n                    if (questionList[i].type === '4') {\n\n                        if (questionList[i].children && questionList[i].children.length > 0) {\n                            for (let j = 0; j < questionList[i].children.length; j++) {\n\n                                if (questionList[i].children[j][\"answer\"]) {\n                                    questionList[i].children[j][\"answer\"] = JSON.parse(questionList[i].children[j][\"answer\"])\n                                }\n                            }\n                        }\n                    }\n                    if (questionList[i].rule) {\n                        questionList[i].rule = JSON.parse(questionList[i].rule)\n                        questionList[i].ruleSwitch = true\n                    } else {\n                        questionList[i].rule = {}\n                    }\n\n\n                }\n            }\n\n            this.setState({\n                questionList: questionList,\n                originalQuestionList: data.data,\n                role: data.role\n            })\n\n            console.log(this.state.questionList.length)\n\n        })\n    }\n\n    getMeasureById = () => {\n        getMeasureById({\n            id: this.measureId\n        }).then(data => {\n\n            this.setState({\n                formItem: data.data[0]\n            })\n\n            this.ruleDataListOfNewParent = this.state.formItem.factor_relation ? JSON.parse(this.state.formItem.factor_relation) : []\n            for (let i = 0; i < this.ruleDataListOfNewParent.length; i++) {\n                this.ruleDataListOfNewParent[i].name = this.ruleDataListOfNewParent[i].fathor.factorName\n            }\n\n        })\n    }\n\n    editQuestion=(question)=>{\n        this.setState({\n            isShowQuestionDetailModal: true,\n            questionType: question.type,\n            isEdit: true,\n            currentItem:question\n        })\n    }\n\n    showQuestionDetailModal = (type) => {\n        debugger\n\n        this.setState({\n            isShowQuestionDetailModal: true,\n            questionType: type,\n            isEdit: false,\n            currentItem:null\n        })\n\n    }\n\n    closeQuestionDetailModal=()=>{\n        this.setState({\n            isShowQuestionDetailModal:false\n        })\n        this.init()\n    }\n\n    showSetGivenAnswerModal = (item) => {\n\n        this.setState({\n            isShowGivenAnswerModal: true,\n            givenAnswerItem:item\n        })\n\n    }\n\n    closeSetGivenAnswerModal=()=>{\n        this.setState({\n            isShowGivenAnswerModal:false\n        })\n        this.init()\n    }\n\n    showSetLieTeamModal = (item) => {\n\n        this.setState({\n            isShowLieTeamModal: true,\n            currentItem:item\n        })\n\n    }\n\n    closeSetLineTeamModal=()=>{\n        this.setState({\n            isShowLieTeamModal:false\n        })\n        this.init()\n    }\n\n\n\n\n\n    back = () => {\n        this.props.history.goBack()\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.isShowQuestionDetailModal?\n                        <QuestionDetailModal\n                            questionType={this.state.questionType}\n                            questionList={this.state.questionList}\n                            isEdit={this.state.isEdit}\n                            data={this.state.currentItem}\n                            onClose={this.closeQuestionDetailModal}\n                            measureId={this.measureId}\n                        />\n                        :\n                        null\n                }\n\n                {\n                    this.state.isShowGivenAnswerModal?\n                        <GivenAnswer\n                            item={this.state.givenAnswerItem}\n                            onClose={this.closeSetGivenAnswerModal}\n                            measureId={this.measureId}\n                        />\n                        :\n                        null\n\n                }\n\n                {\n                    this.state.isShowLieTeamModal?\n                        <SetLieTeam\n                            isShow={this.state.isShowLieTeamModal}\n                            item={this.state.currentItem}\n                            questionList={this.state.questionList}\n                            onClose={this.closeSetLineTeamModal}\n                            measureId={this.measureId}\n                        />\n                        :\n                        null\n\n                }\n\n\n                <Header\n                    role={this.state.role}\n                    status={this.state.formItem.status}\n                    measureId={this.state.measureId}\n                    isQuery={this.state.isQuery}\n                    onCommit={this.commit}\n                    onBack={this.back}\n                    onShowQuestionDetailModal={this.showQuestionDetailModal}\n                />\n                <div>\n                    <div style={{textAlign: 'center',margin:'1.2em auto'}}>\n                        <h1>{this.state.formItem.name}</h1>\n                    </div>\n\n                    <div>\n                        {\n                            this.state.questionList.map((item, index) => {\n                                return <Row key={index}>\n                                    <Col span={13}>\n                                        <QuestionDisplay key={item.id} lieObjIndex={this.state.lieObjIndex} item={item}/>\n                                    </Col>\n                                    <Col span={11}>\n                                        {\n                                            this.state.isOperator?\n                                                <QuestionOperate\n                                                    measureId={this.state.measureId}\n                                                    questionList={this.state.questionList}\n                                                    originalQuestionList={this.state.originalQuestionList}\n                                                    item={item}\n                                                    index={index}\n                                                    editQuestion={this.editQuestion}\n                                                    init={this.init}\n                                                    showSetLieTeamModal={this.showSetLieTeamModal}\n                                                    showSetGivenAnswerModal={this.showSetGivenAnswerModal}\n                                                />\n                                                :null\n                                        }\n\n                                    </Col>\n                                </Row>\n                            })\n                        }\n\n\n\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Index;\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\nimport routers from \"./router\";\n\n\nimport Util from \"./assets/js/Util\";\nimport store from \"./store\";\nimport './assets/css/App.less'\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    createComponent = (TheComponent, path) => (props) => {\n\n        if (store.getState().login) {\n\n            return <TheComponent {...props} />\n\n        } else {\n\n            if(path==='/user/login' || path==='/user/register'){\n                return <TheComponent {...props} />\n            }else{\n                return (\n                    <Redirect to={{\n                        pathname: '/user/login'\n                    }}/>\n                )\n            }\n        }\n\n    }\n\n    mock=()=>{\n        store.dispatch({\n            type:'user_id',\n            payload: '0ca990eb46074e34a896edbeba3039ff'\n        })\n\n        store.dispatch({\n            type:'openid',\n            payload: 'oNkDEvkobxGNXnlLyuV5IDqYQCMk'\n        })\n\n        store.dispatch({\n            type:'token',\n            payload: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mbyI6eyJ1c2VyX2lkIjoiMGNhOTkwZWI0NjA3NGUzNGE4OTZlZGJlYmEzMDM5ZmYiLCJwaG9uZSI6IjE1OTAwMDAwMDAzIiwibmFtZSI6IuWSqOivouW4iDAwMyIsImlkZW50aWZpY2F0aW9uX25vIjoiNDEwODgyMTk4ODAyMTc4ODgxIiwiZ2VuZGVyIjoibWFsZSIsImVtYWlsIjoiMjMyM0AxMjYuY29tIiwiYmlydGhkYXkiOiIyMDI3LTA0LTA2Iiwib3BfZGF0ZSI6IjIwMjAtMDUtMDcgMTg6MzY6MzgiLCJyb2xlIjozLCJwYXNzd29yZCI6ImUxMGFkYzM5NDliYTU5YWJiZTU2ZTA1N2YyMGY4ODNlIn0sImlhdCI6MTU4ODkwNDk5NX0.nYEPye1FYL4Jm-DDyNCCuBrEE2OrRFiaU2kxLAABEmg'\n        })\n\n        store.dispatch({\n            type:'role',\n            payload: 3\n        })\n\n\n\n        store.dispatch({\n            type:'login',\n            payload:true\n        })\n    }\n    render() {\n\n\n        // this.mock();\n\n\n\n        //验证openid是否和手机号绑定了\n\n        // user_id = \"0ca990eb46074e34a896edbeba3039ff\"\n        //\n        // openid = \"oNkDEvkobxGNXnlLyuV5IDqYQCMk\"\n        //\n        //\n        // token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mbyI6eyJ1c2VyX2lkIjoiMGNhOTkwZWI0NjA3NGUzNGE4OTZlZGJlYmEzMDM5ZmYiLCJwaG9uZSI6IjE1OTAwMDAwMDAzIiwibmFtZSI6IuWSqOivouW4iDAwMyIsImlkZW50aWZpY2F0aW9uX25vIjoiNDEwODgyMTk4ODAyMTc4ODgxIiwiZ2VuZGVyIjoibWFsZSIsImVtYWlsIjoiMjMyM0AxMjYuY29tIiwiYmlydGhkYXkiOiIyMDIwLTA0LTA2Iiwib3BfZGF0ZSI6IjIwMjAtMDQtMTEgMTU6Mzg6NTUiLCJyb2xlIjozLCJwYXNzd29yZCI6ImUxMGFkYzM5NDliYTU5YWJiZTU2ZTA1N2YyMGY4ODNlIn0sImlhdCI6MTU4NjU5OTg3MX0.YGF-FimeSOpPn4AXWWPUzjVFL4mNSDOXgWv08Gwpt1w\"\n        //\n        //\n        // // 咨询师\n        // user_id='08aa8d5dd80041a287374eccf9736b15';\n\n\n\n        return (\n            <section className='base-container'>\n\n\n\n                    <Switch>\n\n                        {\n                            routers.map((item, index) => {\n\n                                return <Route key={index} exact path={item.path}\n                                              component={this.createComponent(item.component, item.path)}/>\n                            })\n                        }\n\n                        <Route exact path='/error' component={Error}/>\n\n                        <Redirect to=\"/\"/>\n                    </Switch>\n            </section>\n        );\n    }\n}\n\nexport default App;\n","import React, {Component} from 'react';\nimport {Menu} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nimport {\n    MenuUnfoldOutlined,\n} from '@ant-design/icons';\n\nconst {SubMenu} = Menu;\n\nclass Admin extends Component {\n\n    handleClick = e => {\n        let key = e.key;\n\n        switch (key) {\n            case 'division':\n                this.props.history.push('/division/list')\n                break;\n            case 'ethicsNotice':\n                this.props.history.push('/ethicsNotice/list')\n                break;\n            case 'blacklist':\n                this.props.history.push('/blacklist/list')\n                break;\n\n            case 'complain-user':\n                this.props.history.push('/complain/userList')\n                break;\n            case 'complain-therapist':\n                this.props.history.push('/complain/therapistList')\n                break;\n\n\n            case 'measure-list':\n                this.props.history.push('/measure/list')\n                break;\n\n\n            case 'base-level':\n                this.props.history.push('/base/levelType')\n                break;\n            case 'base-manner':\n                this.props.history.push('/base/mannerType')\n                break;\n            case 'base-qualification':\n                this.props.history.push('/base/qualificationType')\n                break;\n            case 'base-school':\n                this.props.history.push('/base/schoolType')\n                break;\n            case 'base-consult':\n                this.props.history.push('/base/consultType')\n                break;\n            case 'setting-center':\n                this.props.history.push('/user/center')\n                break;\n            case 'setting-passModify':\n                this.props.history.push('/user/modifypass')\n                break;\n        }\n\n\n    };\n\n    render() {\n        return (\n            <Menu theme=\"dark\" mode=\"inline\" onClick={this.handleClick}>\n                <Menu.Item key=\"division\" icon={<MenuUnfoldOutlined/>}>\n                    分部管理\n                </Menu.Item>\n                <Menu.Item key=\"ethicsNotice\" icon={<MenuUnfoldOutlined/>}>\n                    伦理公告\n                </Menu.Item>\n                <Menu.Item key=\"blacklist\" icon={<MenuUnfoldOutlined/>}>\n                    黑名单管理\n                </Menu.Item>\n                <SubMenu\n                    icon={<MenuUnfoldOutlined/>}\n                    key=\"complain\"\n                    title={<span>投诉管理</span>}\n                >\n                    <Menu.Item key=\"complain-user\" icon={<MenuUnfoldOutlined/>}>\n                        用户投诉\n                    </Menu.Item>\n                    <Menu.Item key=\"complain-therapist\" icon={<MenuUnfoldOutlined/>}>\n                        咨询师投诉\n                    </Menu.Item>\n                </SubMenu>\n                <Menu.Item key=\"measure-list\" icon={<MenuUnfoldOutlined/>}>\n                    量表管理\n                </Menu.Item>\n                <SubMenu\n                    icon={<MenuUnfoldOutlined/>}\n                    key=\"base\"\n                    title={<span>基础信息</span>}\n                >\n                    <Menu.Item key=\"base-level\" icon={<MenuUnfoldOutlined/>}>\n                        咨询师等级\n                    </Menu.Item>\n                    <Menu.Item key=\"base-manner\" icon={<MenuUnfoldOutlined/>}>\n                        咨询方式\n                    </Menu.Item>\n                    <Menu.Item key=\"base-qualification\" icon={<MenuUnfoldOutlined/>}>\n                        资历类型\n                    </Menu.Item>\n                    <Menu.Item key=\"base-school\" icon={<MenuUnfoldOutlined/>}>\n                        咨询师流派\n                    </Menu.Item>\n                    <Menu.Item key=\"base-consult\" icon={<MenuUnfoldOutlined/>}>\n                        预约类型\n                    </Menu.Item>\n                </SubMenu>\n                <SubMenu\n                    icon={<MenuUnfoldOutlined/>}\n                    key=\"setting\"\n                    title={<span>设置</span>}\n                >\n                    <Menu.Item key=\"setting-center\" icon={<MenuUnfoldOutlined/>}>\n                        个人中心\n                    </Menu.Item>\n                    <Menu.Item key=\"setting-passModify\" icon={<MenuUnfoldOutlined/>}>\n                        修改密码\n                    </Menu.Item>\n                </SubMenu>\n\n\n            </Menu>\n        );\n    }\n}\n\nexport default Admin;","import React, {Component} from 'react';\nimport {Menu} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nimport {\n    MenuUnfoldOutlined,\n} from '@ant-design/icons';\n\nconst {SubMenu} = Menu;\n\nclass CaseManagerMenu extends Component {\n\n    handleClick = e => {\n        let key = e.key;\n\n        switch (key) {\n            case 'room':\n                this.props.history.push('/room/list')\n                break;\n\n            case 'station-relateTherapist':\n                this.props.history.push('/station/relateTherapist')\n                break;\n\n            case 'setting-center':\n                this.props.history.push('/user/center')\n                break;\n            case 'setting-passModify':\n                this.props.history.push('/user/modifypass')\n                break;\n        }\n\n\n    };\n\n    render() {\n        return (\n            <Menu theme=\"dark\" mode=\"inline\" onClick={this.handleClick}>\n\n                <Menu.Item key=\"room\" icon={<MenuUnfoldOutlined/>}>\n                    房间管理\n                </Menu.Item>\n\n                <Menu.Item key=\"station-relateTherapist\" icon={<MenuUnfoldOutlined/>}>\n                    咨询师管理\n                </Menu.Item>\n\n                <SubMenu\n                    icon={<MenuUnfoldOutlined/>}\n                    key=\"setting\"\n                    title={<span>设置</span>}\n                >\n                    <Menu.Item key=\"setting-center\" icon={<MenuUnfoldOutlined/>}>\n                        个人中心\n                    </Menu.Item>\n                    <Menu.Item key=\"setting-passModify\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        修改密码\n                    </Menu.Item>\n\n                </SubMenu>\n\n\n            </Menu>\n        );\n    }\n}\n\nexport default CaseManagerMenu;","import React, {Component} from 'react';\nimport {Menu} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nimport {\n    MenuUnfoldOutlined,\n} from '@ant-design/icons';\n\nconst {SubMenu} = Menu;\n\nclass DivisionManagerMenu extends Component {\n\n    handleClick = e => {\n        let key = e.key;\n\n        switch (key) {\n            case 'station-list':\n                this.props.history.push('/station/list')\n                break;\n\n            case 'therapist-revenue':\n                this.props.history.push('/therapist/revenue')\n                break;\n            case 'refund-list':\n                this.props.history.push('/refund/list')\n                break;\n\n            case 'preCheck-list':\n                this.props.history.push('/preCheck/list')\n                break;\n\n            case 'setting-center':\n                this.props.history.push('/user/center')\n                break;\n            case 'setting-passModify':\n                this.props.history.push('/user/modifypass')\n                break;\n        }\n\n\n    };\n\n    render() {\n        return (\n            <Menu theme=\"dark\" mode=\"inline\" onClick={this.handleClick}>\n                <Menu.Item key=\"station-list\" icon={<MenuUnfoldOutlined/>}>\n                    工作室管理\n                </Menu.Item>\n\n                <Menu.Item key=\"therapist-revenue\" icon={<MenuUnfoldOutlined/>}>\n                    咨询师收益查看\n                </Menu.Item>\n                <Menu.Item key=\"refund-list\" icon={<MenuUnfoldOutlined/>}>\n                    退款管理\n                </Menu.Item>\n                <SubMenu\n                    icon={<MenuUnfoldOutlined/>}\n                    key=\"preCheck\"\n                    title={<span>预检表</span>}\n                >\n                    <Menu.Item key=\"preCheck-list\" icon={<MenuUnfoldOutlined/>}>\n                        预检表管理\n                    </Menu.Item>\n                </SubMenu>\n                <SubMenu\n                    icon={<MenuUnfoldOutlined/>}\n                    key=\"setting\"\n                    title={<span>设置</span>}\n                >\n                    <Menu.Item key=\"setting-center\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        个人中心\n                    </Menu.Item>\n                    <Menu.Item key=\"setting-passModify\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        修改密码\n                    </Menu.Item>\n                </SubMenu>\n\n\n            </Menu>\n        );\n    }\n}\n\nexport default DivisionManagerMenu;","import React, {Component} from 'react';\nimport {Menu} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nimport {\n    MenuUnfoldOutlined,\n} from '@ant-design/icons';\n\nconst {SubMenu} = Menu;\n\nclass TherapistMenu extends Component {\n\n    handleClick = e => {\n        let key = e.key;\n\n        switch (key) {\n            case 'therapist-revenue':\n                this.props.history.push('/therapist/revenue')\n                break;\n\n            case 'therapist-order':\n                this.props.history.push('/therapist/orderList')\n                break;\n\n            case 'therapist-waitlist':\n                this.props.history.push('/therapist/list')\n                break;\n            case 'therapist-occupy':\n                this.props.history.push('/therapist/occupy')\n                break;\n            case 'therapist-complaint':\n                this.props.history.push('/therapist/complaint')\n                break;\n            case 'setting-appointset':\n                this.props.history.push('/therapist/appointSet')\n                break;\n            case 'setting-feeset':\n                this.props.history.push('/therapist/feeset')\n                break;\n            case 'therapist-periodSet':\n                this.props.history.push('/therapist/periodSet')\n                break;\n            case 'therapist-fax':\n                this.props.history.push('/therapist/list')\n                break;\n\n            case 'setting-center':\n                this.props.history.push('/user/center')\n                break;\n            case 'setting-passModify':\n                this.props.history.push('/user/modifypass')\n                break;\n        }\n\n\n    };\n\n\n    render() {\n        return (\n            <Menu theme=\"dark\" mode=\"inline\" onClick={this.handleClick}>\n\n                <Menu.Item key=\"therapist-revenue\"\n                           icon={<MenuUnfoldOutlined/>}>\n                    我的收益\n                </Menu.Item>\n\n                <SubMenu\n                    icon={<MenuUnfoldOutlined/>}\n                    key=\"therapist-my\"\n                    title={<span>我的来访</span>}\n                >\n                    <Menu.Item key=\"therapist-order\" icon={<MenuUnfoldOutlined/>}>\n                        咨询客观记录\n                    </Menu.Item>\n                    <Menu.Item key=\"therapist-waitlist\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        等待名单\n                    </Menu.Item>\n                    <Menu.Item key=\"therapist-occupy\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        时间使用率\n                    </Menu.Item>\n                    <Menu.Item key=\"therapist-complaint\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        投诉用户列表\n                    </Menu.Item>\n\n                </SubMenu>\n\n                <SubMenu\n                    icon={<MenuUnfoldOutlined/>}\n                    key=\"setting\"\n                    title={<span>设置</span>}\n                >\n\n                    <Menu.Item key=\"setting-appointset\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        预约设置\n                    </Menu.Item>\n                    <Menu.Item key=\"setting-feeset\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        收费设置\n                    </Menu.Item>\n                    <Menu.Item key=\"therapist-periodSet\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        时段设置\n                    </Menu.Item>\n                    <Menu.Item key=\"therapist-fax\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        设定报税\n                    </Menu.Item>\n                    <Menu.Item key=\"setting-center\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        个人中心\n                    </Menu.Item>\n                    <Menu.Item key=\"setting-passModify\"\n                               icon={<MenuUnfoldOutlined/>}>\n                        修改密码\n                    </Menu.Item>\n\n                </SubMenu>\n\n\n            </Menu>\n        );\n    }\n}\n\nexport default TherapistMenu;","import React from \"react\";\n\nimport {Layout, Menu, Row, Col, Dropdown} from 'antd';\n\nimport {withRouter} from \"react-router-dom\";\n\nimport './index.less'\n\nimport store from \"../../store\";\n\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    DownOutlined,\n} from '@ant-design/icons';\nimport Role from \"../../assets/js/Role\";\nimport AdminMenu from './menus/admin'\nimport CaseManagerMenu from './menus/caseManager'\nimport DivisionManagerMenu from './menus/divisionManager'\nimport TherapistMenu from './menus/therapist'\n\nconst {Header, Sider, Content} = Layout;\n\nclass The_Layout extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n\n    }\n\n    state = {\n        collapsed: false,\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    logout = () => {\n        store.clear()\n        this.props.history.push('/user/login')\n    }\n\n    render() {\n\n        const logoutMenu = (\n            <Menu>\n                <Menu.Item>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={this.logout}>\n                        退出登录\n                    </a>\n                </Menu.Item>\n            </Menu>\n        );\n\n        let Current_Menu = <div></div>;\n\n        switch (store.getState().role) {\n            case Role.admin:\n                Current_Menu = <AdminMenu {...this.props}/>\n                break;\n            case Role.divisionManager:\n                Current_Menu = <DivisionManagerMenu {...this.props}/>\n                break;\n            case Role.caseManager:\n                Current_Menu = <CaseManagerMenu {...this.props}/>\n                break;\n            case Role.therapist:\n                Current_Menu = <TherapistMenu {...this.props}/>\n                break;\n        }\n\n\n        return (\n            <React.Fragment>\n                {\n                    store.getState().login ?\n                        (\n                            <Layout>\n                                <Sider trigger={null} collapsible collapsed={this.state.collapsed}\n                                       className='mySideBar'>\n                                    <div className=\"logo\"/>\n\n                                    {Current_Menu}\n\n                                </Sider>\n                                <Layout className=\"site-layout\">\n                                    <Header className=\"site-layout-background\" style={{padding: 0}}>\n\n                                        <Row>\n                                            <Col span={21}>\n                                                {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                                                    className: 'trigger',\n                                                    onClick: this.toggle,\n                                                })}\n                                            </Col>\n                                            <Col span={3}>\n                                                <Dropdown overlay={logoutMenu}>\n                                                    <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                                                        {store.getState().user_name} <DownOutlined/>\n                                                    </a>\n                                                </Dropdown>\n                                            </Col>\n                                        </Row>\n                                    </Header>\n                                    <Content\n                                        className=\"site-layout-background global-content\"\n                                    >\n                                        {this.props.children}\n                                    </Content>\n                                </Layout>\n                            </Layout>\n                        )\n                        :\n                        (\n                            this.props.children\n                        )\n                }\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(The_Layout)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport VConsole from 'vconsole';\nimport {Provider} from 'react-redux'\nimport {ConfigProvider} from \"antd\";\nimport zhCn from 'antd/es/locale/zh_CN'\nimport moment from \"moment\";\nimport 'moment/locale/zh-cn'\n\n\nimport The_Layout from './views/layout'\n\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport {store, persistor} from \"./store\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nmoment.locale('zh-cn')\n\nif (process.env.OUR_NODE_ENV !== 'prod') {\n    new VConsole();\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <Router basename={'/appoint/'}>\n            <The_Layout>\n                <ConfigProvider locale={zhCn}>\n                    <App/>\n                </ConfigProvider>\n            </The_Layout>\n            </Router>\n        </PersistGate>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}